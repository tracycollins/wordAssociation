{"version":3,"sources":["User.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","grid","display","gridItem","margin","card","raised","maxWidth","profileImage","height","bannerImage","table","tableRowGreen","backgroundColor","appBar","menuButton","marginRight","spacing","title","search","position","borderRadius","shape","marginLeft","width","breakpoints","up","searchIcon","padding","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","buttonAll","buttonLeft","buttonNeutral","buttonRight","buttonMismatch","left","neutral","right","none","formatDate","dateInput","Date","toLocaleDateString","year","month","day","User","props","classes","createdAt","user","lastSeen","lastSeenDuration","Duration","toString","twitterAge","twitterAgeString","tweetRate","days","Math","ceil","statusesCount","useState","userSearch","setUserSearch","hotKey","className","Container","component","AppBar","Toolbar","Button","variant","onClick","handleUserChange","name","stats","mismatched","ButtonGroup","size","aria-label","uncategorized","all","InputBase","placeholder","input","inputProps","value","onKeyPress","event","charCode","console","log","handleSearchUser","onChange","target","Typography","Grid","item","xs","Card","CardHeader","window","open","screenName","subheader","CardMedia","src","profileImageUrl","onError","e","bannerImageUrl","CardContent","description","dataSource","sourceType","options","TableContainer","Table","TableBody","TableRow","TableCell","align","location","followersCount","friendsCount","mentions","rate","toFixed","FormGroup","category","getCategoryClass","categoryAuto","toUpperCase","FormControl","RadioGroup","FormControlLabel","labelPlacement","control","Radio","label","Checkbox","checked","categoryVerified","following","ignored","isBot","statsObj","socket","socketClient","twitterFeedPreviousUserArray","App","nodesPerMin","maxNodesPerMin","bestNetworkId","status","setStatus","nodeId","tweets","age","rateMax","tweetsPerDay","categoryVerfied","currentUser","setCurrentUser","previousUser","setPreviousUser","text","currentHashtag","setHashtag","useCallback","action","type","data","includes","push","undefined","persist","preventDefault","eventName","currentTarget","eventValue","eventChecked","code","ctrlKey","searchFilter","emit","node","useEffect","on","results","debug","id","namespace","userId","password","disconnect","socketId","serverConnected","userReadyTransmitted","userReadyAck","useHotkeys","searchString","searchTerm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0dc4b338.chunk.js","sourcesContent":["import React, { useState } from 'react';\n// import { useHotkeys } from 'react-hotkeys-hook';\nimport { Timeline } from 'react-twitter-widgets'\n\nimport Duration from 'duration';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Card from '@material-ui/core/Card';\n// import CardActionArea from '@material-ui/core/CardActionArea';\n// import CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\n// import CheckBoxIcon from '@material-ui/icons/CheckBox';\n// import CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Container from '@material-ui/core/Container';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\n// import FormLabel from '@material-ui/core/FormLabel';\nimport Grid from '@material-ui/core/Grid';\n// import IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\n// import MenuIcon from '@material-ui/icons/Menu';\n// import Paper from '@material-ui/core/Paper';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\n// import TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n// import { fade, makeStyles } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  // root: {\n  //   maxWidth: 400,\n  // },\n  root: {\n    flexGrow: 2,\n  },\n  grid: {\n    display: 'flex',\n    // flexDirection: 'row',\n    // flexGrow: 2,\n    // flexFlow: 'wrap',\n    // alignItems: 'center',\n    // alignItems: 'stretch',\n    // margin: 'auto',\n  },  \n  gridItem: {\n    // backgroundColor: 'lightgray',\n    margin: 5,\n    // padding: 2,\n    // backgroundColor: 'red',\n  },  \n  // paper: {\n  //   alignItems: 'left',\n  // },\n  card: {\n    raised: false,\n    // border: 10,\n    // backgroundColor: 'lightgray',\n    maxWidth: 300,\n  },\n  profileImage: {\n    // width: 200,\n    height: 300,\n    // margin: 8,\n    // padding: -10,\n  },\n  bannerImage: {\n    // width: 200,\n    height: 80,\n    // margin: 8,\n    // padding: 10,\n  },\n  table: {\n    // width: 300,\n  },\n  tableRowGreen: {\n    backgroundColor: 'lightgreen',\n    // width: 300,\n  },\n  appBar: {\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    // backgroundColor: fade(theme.palette.common.black, 0.15),\n    backgroundColor: \"white\",\n    '&:hover': {\n      // backgroundColor: fade(theme.palette.common.black, 0.15),\n      backgroundColor: \"lightgray\",\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'primary',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n\n  buttonAll: {\n    color: 'black',\n  },\n  buttonLeft: {\n    color: 'blue',\n  },\n  buttonNeutral: {\n    color: 'gray',\n  },\n  buttonRight: {\n    color: 'red',\n  },\n  buttonMismatch: {\n    // color: 'black',\n    margin: 5\n  },\n\n  left: {\n    // padding: 5,\n    color: 'white',\n    backgroundColor: 'blue',\n  },\n  neutral: {\n    // margin: 5,\n    // padding: 5,\n    color: 'white',\n    backgroundColor: 'gray',\n  },\n  right: {\n    // margin: 5,\n    // padding: 5,\n    color: 'white',\n    backgroundColor: 'red',\n  },\n  none: {\n    // margin: 5,\n    // padding: 5,\n    color: 'black',\n    backgroundColor: 'white',\n  },\n\n}));\n\nconst formatDate = (dateInput) => {\n  return new Date(dateInput).toLocaleDateString(\n    'en-gb',\n    {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }\n  );\n}\n\nconst defaultProfileImage = \"logo192.png\"\nconst defaultBannerImage = \"logo192.png\"\n\nconst User = (props) => {\n\n  const classes = useStyles();\n\n  const createdAt = formatDate(props.user.createdAt)\n  const lastSeen = formatDate(props.user.lastSeen)\n \n  const lastSeenDuration = new Duration(new Date(props.user.lastSeen)).toString(1, 4)\n  const twitterAge = props.user.createdAt ? new Duration(new Date(props.user.createdAt)) : new Duration(new Date())\n  const twitterAgeString = twitterAge.toString(1, 4)\n\n  const tweetRate = twitterAge.days > 0 ? Math.ceil(props.user.statusesCount/twitterAge.days) : 0;\n\n  const [userSearch, setUserSearch] = useState(\"\");\n  const [hotKey, setHotKey] = useState(\"---\");\n\n  const handleHotKey = (event) => {\n    event.preventDefault();\n    setHotKey(event.key.toUpperCase())\n    props.handleUserChange(event)\n  }\n\n  // useHotkeys('right', props.handleUserChange) // next uncat any\n  // useHotkeys('left', props.handleUserChange) // prev uncat any\n\n  // useHotkeys('L', props.handleUserChange)\n  // // useHotkeys('ctrl+L', props.handleUserChange)\n  // useHotkeys('ctrl+L', () => props.handleUserChange)\n\n  // useHotkeys('R', props.handleUserChange)\n  // useHotkeys('ctrl+R', props.handleUserChange)\n\n  // useHotkeys('N', props.handleUserChange)\n  // useHotkeys('ctrl+N', props.handleUserChange)\n\n  const handleChangeSearch = (event) => {\n    console.log(\"handleChangeSearch: \" + event.target.value)\n    setUserSearch(event.target.value);\n  }\n\n  const handleKeyPress = (event) => {\n    if (event.charCode === 13) { // enter key pressed\n      console.log(\"ENTER\")\n      props.handleSearchUser(userSearch)\n    }\n  }\n\n  const openUserTwitterPage = () => {\n    console.log(\"open twitter\")\n    window.open(`http://twitter.com/${props.user.screenName || null}`, \"_blank\") //to open new page\n  }\n\n  const getCategoryClass = (category) => {\n    switch (category){\n      case \"left\":\n      case \"neutral\":\n      case \"right\":\n        return classes[category]\n      default:\n        return classes.none\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Container component=\"main\">\n        <AppBar  className={classes.appBar} position=\"static\">\n          <Toolbar>\n            <Button \n              variant=\"contained\" color=\"primary\" onClick={props.handleUserChange} name=\"mismatch\" className={classes.buttonMismatch}>MISMATCH {props.stats.user.mismatched}\n            </Button>\n            <ButtonGroup variant=\"contained\" color=\"primary\" size=\"small\" aria-label=\"small button group\">\n              <Button onClick={props.handleUserChange} name=\"all\" >TOTAL: {props.stats.user.uncategorized.all}</Button>\n              <Button onClick={props.handleUserChange} name=\"left\" >LEFT: {props.stats.user.uncategorized.left}</Button>\n              <Button onClick={props.handleUserChange} name=\"neutral\" >NEUTRAL: {props.stats.user.uncategorized.neutral}</Button>\n              <Button onClick={props.handleUserChange} name=\"right\" >RIGHT: {props.stats.user.uncategorized.right}</Button>\n          </ButtonGroup>\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon color=\"primary\"/>\n              </div>\n              <InputBase\n                placeholder=\"search…\"\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                inputProps={{ 'aria-label': 'search' }}\n                value={userSearch}\n                onKeyPress={handleKeyPress}\n                onChange={handleChangeSearch}\n              />\n            </div>\n            <Typography color=\"primary\">\n              HOTKEY: {hotKey}\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Grid className={classes.grid}>\n          <Grid item className={classes.gridItem} xs={3}>\n            <Card className={classes.card} variant=\"outlined\">\n              <CardHeader\n                onClick={openUserTwitterPage}\n                title={`${props.user.name}`}\n                subheader={`@${props.user.screenName}`}\n              >\n              </CardHeader>\n              <CardMedia\n                className={classes.profileImage}\n                // image={props.user.profileImageUrl}\n                src={props.user.profileImageUrl || defaultProfileImage}\n                component=\"img\"\n                onError={e => {\n                }}              \n              />\n              <br></br>\n              <CardMedia \n                className={classes.bannerImage} \n                // image={props.user.bannerImageUrl || defaultBannerImage}\n                src={props.user.bannerImageUrl || defaultBannerImage} \n                component=\"img\"\n                onError={e => {\n                }}              \n              />\n              <CardContent>\n                <Typography>\n                  {props.user.description}\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item className={classes.gridItem} xs={4}>\n            <Timeline\n              dataSource={{\n                sourceType: 'profile',\n                screenName: props.user.screenName\n              }}\n              options={{\n                height: '540'\n              }}\n            />\n          </Grid>\n          <Grid item className={classes.gridItem} xs={3}>\n            <TableContainer>\n              <Table className={classes.table} size=\"small\">\n                <TableBody>\n                  <TableRow>\n                    <TableCell>location</TableCell><TableCell align=\"right\">{props.user.location}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>created</TableCell><TableCell align=\"right\">{createdAt}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>twitter age</TableCell><TableCell align=\"right\">{twitterAgeString}</TableCell>\n                  </TableRow>\n                  <TableRow className={props.user.followersCount > 5000 ? classes.tableRowGreen : null}>\n                    <TableCell>followers</TableCell><TableCell align=\"right\">{props.user.followersCount}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>friends</TableCell><TableCell align=\"right\">{props.user.friendsCount}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>tweets</TableCell><TableCell align=\"right\">{props.user.statusesCount}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>tweets/day</TableCell><TableCell align=\"right\">{tweetRate}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>last seen</TableCell><TableCell align=\"right\">{lastSeen}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>last seen</TableCell><TableCell align=\"right\">{lastSeenDuration} ago</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>mentions</TableCell><TableCell align=\"right\">{props.user.mentions}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>mentions/min</TableCell><TableCell align=\"right\">{props.user.rate ? props.user.rate.toFixed(1) : 0}</TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Grid>\n          <Grid item className={classes.gridItem} xs={1}>\n            <FormGroup>\n              <Button className={getCategoryClass(props.user.categoryAuto)}>\n                AUTO: {props.user.categoryAuto.toUpperCase() || \"NONE\"}\n              </Button>\n\n              <FormControl component=\"fieldset\">\n                <RadioGroup aria-label=\"category\" name=\"category\" value={props.user.category || \"none\"} onChange={props.handleUserChange}>\n                  <FormControlLabel labelPlacement=\"start\" value=\"left\" control={<Radio />} label=\"left\"/>\n                  <FormControlLabel labelPlacement=\"start\" value=\"neutral\" control={<Radio />} label=\"neutral\" />\n                  <FormControlLabel labelPlacement=\"start\" value=\"right\" control={<Radio />} label=\"right\" />\n                  <FormControlLabel labelPlacement=\"start\" value=\"positive\" control={<Radio />} label=\"positive\" />\n                  <FormControlLabel labelPlacement=\"start\" value=\"negative\" control={<Radio />} label=\"negative\" />\n                  <FormControlLabel labelPlacement=\"start\" value=\"none\" control={<Radio />} label=\"none\" />\n                </RadioGroup>\n              </FormControl>\n\n              <FormControlLabel\n                control={<Checkbox checked={props.user.categoryVerified || false} onChange={props.handleUserChange} name=\"catVerified\" />}\n                label=\"verified\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox checked={props.user.following || false} onChange={props.handleUserChange} name=\"following\" />}\n                label=\"following\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox checked={props.user.ignored || false} onChange={props.handleUserChange} name=\"ignored\" />}\n                label=\"ignored\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox checked={props.user.isBot || false} onChange={props.handleUserChange} name=\"isBot\" />}\n                label=\"bot\"\n                labelPlacement=\"start\"\n              />\n            </FormGroup>\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n\nexport default User;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport socketClient from \"socket.io-client\";\nimport './App.css';\nimport User from './User.js';\n\n// const ENDPOINT = \"http://mbp3:9997/view\";\nconst ENDPOINT = \"https://word.threeceelabs.com/view\";\n\nconst statsObj = {};\nstatsObj.viewerReadyTransmitted = false;\n\nconst socket = socketClient(ENDPOINT);\nconst twitterFeedPreviousUserArray = [];\n\n\nconst App = () => {\n\n  const defaultStatus = {\n    nodesPerMin: 0, \n    maxNodesPerMin: 0,\n    bestNetworkId: \"\",\n    user: {\n      uncategorized: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        all: 0,\n        mismatched: 0\n      }\n    }\n  }\n\n  const defaultUser = {\n\n    nodeId: null, \n    screenName: \"threecee\",\n    name: \"\",\n    location: \"\",\n    description: \"\",\n    profileImageUrl: \"https://pbs.twimg.com/profile_images/1205585278565527559/GrTkBpzl.jpg\",\n    bannerImage: \"\",\n    createdAt: null,\n    followersCount: 0,\n    friendsCount: 0,\n    tweets: 0,\n\n    age: 0,\n    mentions: 0,\n    rate: 0,\n    rateMax: 0,\n    tweetsPerDay: 0,\n\n    lastSeen: null,\n    isBot: false,\n    following: false,\n    categoryVerfied: false,\n    category: \"none\",\n    categoryAuto: \"none\",\n  }\n\n  const defaultHashtag = {\n    nodeId: null,\n    text: null,\n    categoryAuto: \"none\",\n    category: \"none\",\n    \n    lastSeen: null,\n    age: 0,\n    mentions: 0,\n    rate: 0,\n    rateMax: 0,\n  }\n\n  const [status, setStatus] = useState(defaultStatus);\n  const [currentUser, setCurrentUser] = useState(defaultUser);\n  const [previousUser, setPreviousUser] = useState({nodeId: false});\n  const [currentHashtag, setHashtag] = useState(defaultHashtag);\n\n  const handleAction = useCallback((action) => {\n    switch (action.type){\n      case \"user\":\n          setCurrentUser(action.data)\n\n          if (previousUser.nodeId \n            && (currentUser.nodeId !== previousUser.nodeId) \n            && !twitterFeedPreviousUserArray.includes(previousUser.nodeId)\n          ){\n            twitterFeedPreviousUserArray.push(previousUser.nodeId);\n          }\n          if (previousUser.nodeId !== currentUser.nodeId){\n            setPreviousUser(currentUser);\n          }\n\n          console.log(\"USER: @\" + action.data.screenName + \" | \" + action.data.profileImageUrl)\n        break\n      case \"hashtag\":\n          setHashtag({})\n          console.log(\"HT: #\" + currentHashtag.text)\n        break\n      case \"stats\":\n          setStatus(action.data)\n        break\n        default:\n    }\n  }, [currentHashtag.text, currentUser, previousUser])\n  \n  const handleSearchUser = (searchString) => {\n    const searchTerm = \"@\" + searchString\n    socket.emit(\"TWITTER_SEARCH_NODE\", searchTerm)\n  }\n\n  const handleUserChange = useCallback((event) => {\n\n    console.log(\"handleUserChange | currentUser: @\" + currentUser.screenName)\n\n    if (event.persist !== undefined) { \n      event.persist() \n    }\n\n    if (event.preventDefault !== undefined) { \n      event.preventDefault() \n    }\n\n    let eventName = event.currentTarget.name;\n    let eventValue = event.currentTarget.value;\n    let eventChecked = event.currentTarget.checked;\n\n    if (event.currentTarget.name === undefined && event.code){\n      switch (event.code){\n        case \"ArrowRight\":\n          eventName = \"all\"\n          break;\n        case \"ArrowLeft\":\n          eventName = \"all\"\n          break;\n        case \"KeyL\":\n          if (event.ctrlKey){\n            eventName = \"category\"\n            eventValue = \"left\"\n          }\n          else{\n            eventName = \"left\"\n          }\n          break;\n        case \"KeyN\":\n          if (event.ctrlKey){\n            eventName = \"category\"\n            eventValue = \"neutral\"\n          }\n          else{\n            eventName = \"neutral\"\n          }\n          break;\n        case \"KeyR\":\n          if (event.ctrlKey){\n            eventName = \"category\"\n            eventValue = \"right\"\n          }\n          else{\n            eventName = \"right\"\n          }\n          break;\n        default:\n      }\n    }\n\n    console.log(\"handleUserChange: name: \" + eventName + \" | value: \" + eventValue)\n\n    let searchFilter = \"@?\";\n\n    switch (eventName){\n      case \"all\":\n      case \"left\":\n      case \"neutral\":\n      case \"right\":\n        searchFilter += eventName\n        socket.emit(\"TWITTER_SEARCH_NODE\", searchFilter);\n        break\n      case \"mismatch\":\n        socket.emit(\"TWITTER_SEARCH_NODE\", \"@?mm\");\n        break\n      case \"category\":\n        console.log(\"handleUserChange: \" + eventName + \" | \" + eventValue + \" | \" + eventChecked)\n        socket.emit(\"TWITTER_CATEGORIZE_NODE\", {\n          category: eventValue,\n          following: true,\n          node: currentUser,\n        });\n        break\n      case \"isBot\":\n        console.log(\"handleUserChange: \" + eventName + \" | \" + eventChecked)\n        if (eventChecked){\n          socket.emit(\"TWITTER_BOT\", currentUser);\n        }\n        else{\n          socket.emit(\"TWITTER_UNBOT\", currentUser);\n        }\n        break\n      case \"following\":\n        console.log(\"handleUserChange: \" + eventName + \" | \" + eventChecked)\n        if (eventChecked){\n          socket.emit(\"TWITTER_FOLLOW\", currentUser);\n        }\n        else{\n          socket.emit(\"TWITTER_UNFOLLOW\", currentUser);\n        }\n        break\n      case \"catVerified\":\n        console.log(\"handleUserChange: \" + eventName + \" | \" + eventChecked)\n        if (eventChecked){\n          socket.emit(\"TWITTER_CATEGORY_VERIFIED\", currentUser);\n        }\n        else{\n          socket.emit(\"TWITTER_CATEGORY_UNVERIFIED\", currentUser);\n        }\n        break\n      case \"ignored\":\n        console.log(\"handleUserChange: \" + eventName + \" | \" + eventChecked)\n        if (eventChecked){\n          socket.emit(\"TWITTER_IGNORE\", currentUser);\n        }\n        else{\n          socket.emit(\"TWITTER_UNIGNORE\", currentUser);\n        }\n        break\n      default:\n        console.log(\"handleUserChange: UNKNOWN NAME: \" + eventName + \" | VALUE: \" + eventValue)\n        console.log({event})\n    }\n    \n  }, [currentUser])\n  \n  useEffect(() => {\n    socket.on(\"SET_TWITTER_USER\", (results) => {\n      console.debug(\"RX SET_TWITTER_USER\");\n      console.debug(results);\n      setCurrentUser(results.node)\n      setStatus(results.stats)\n    });\n  }, [])\n\n  useEffect(() => {\n    socket.on(\"action\", (action) => {\n      console.debug(\"RX ACTION | \" + socket.id + \" | TYPE: \" + action.type);\n      console.debug(\"RX ACTION | \", action.data);\n\n      switch (action.type){\n        case \"user\":\n            setCurrentUser(action.data)\n\n            if (previousUser.nodeId \n              && (currentUser.nodeId !== previousUser.nodeId) \n              && !twitterFeedPreviousUserArray.includes(previousUser.nodeId)\n            ){\n              twitterFeedPreviousUserArray.push(previousUser.nodeId);\n            }\n            if (previousUser.nodeId !== currentUser.nodeId){\n              setPreviousUser(currentUser);\n            }\n\n            console.log(\"USER: @\" + action.data.screenName + \" | \" + action.data.profileImageUrl)\n          break\n        case \"hashtag\":\n            setHashtag({})\n            console.log(\"HT: #\" + currentHashtag.text)\n          break\n        case \"stats\":\n            setStatus(action.data)\n          break\n          default:\n      }\n\n    });   \n     \n  }, [])\n\n  useEffect(() => {\n    socket.on(\"connect\", ()=>{\n      console.log(\"CONNECTED: \" + socket.id)\n      socket.emit(\"authentication\", {\n        namespace: \"view\",\n        userId: \"test\",\n        password: \"0123456789\",\n      });\n    })\n    return () => socket.disconnect();\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"authenticated\", function () {\n      console.debug(\"AUTHENTICATED | \" + socket.id);\n\n      statsObj.socketId = socket.id;\n      statsObj.serverConnected = true;\n      statsObj.userReadyTransmitted = false;\n      statsObj.userReadyAck = false;\n      socket.emit(\"TWITTER_SEARCH_NODE\", \"@threecee\")\n    });\n  }, []);\n\n  useHotkeys('right', handleUserChange) // next uncat any\n  useHotkeys('left', handleUserChange) // prev uncat any\n\n  useHotkeys('L', handleUserChange)\n  useHotkeys('ctrl+L', (event) => handleUserChange(event), {}, [currentUser])\n\n  useHotkeys('R', handleUserChange)\n  useHotkeys('ctrl+R', (event) => handleUserChange(event), {}, [currentUser])\n\n  useHotkeys('N', handleUserChange)\n  useHotkeys('ctrl+N', (event) => handleUserChange(event), {}, [currentUser])\n\n  return (\n    <User user={currentUser} stats={status} handleUserChange={handleUserChange} handleSearchUser={handleSearchUser}/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}