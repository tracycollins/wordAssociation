{"version":3,"sources":["App.js","UserView.js","HashtagView.js","reportWebVitals.js","index.js"],"names":["min","max","fontSizeCategory","useStyles","makeStyles","theme","root","flexGrow","appBar","backgroundColor","marginBottom","spacing","grid","display","alignItems","gridItem","margin","card","maxWidth","alignSelf","profileImage","bannerImage","radioGroupCategory","borderRadius","shape","padding","table","tableHead","tableCategorized","borderColor","tableRowGreen","statusBar","raised","menuButton","marginRight","title","color","search","position","width","breakpoints","up","searchIcon","height","pointerEvents","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","buttonGroupLabel","buttonAll","buttonLeft","buttonNeutral","buttonRight","buttonMismatch","autoCategory","left","fontSize","neutral","right","positive","negative","none","ignored","formatDate","dateInput","Date","toLocaleDateString","year","month","day","User","props","classes","createdAt","user","lastSeen","lastSeenDuration","Duration","toString","twitterAge","twitterAgeString","tweetRate","days","Math","ceil","statusesCount","useState","userSearch","setUserSearch","openUserTwitterPage","console","log","window","open","screenName","getCategoryClass","category","AppBar","className","Toolbar","variant","InputBase","placeholder","input","inputProps","value","onKeyPress","event","charCode","handleSearchNode","onChange","target","Typography","ButtonGroup","size","aria-label","Button","onClick","handleNodeChange","name","stats","uncategorized","all","mismatched","Grid","item","xs","Card","CardActions","align","toUpperCase","categoryAuto","CardContent","CardMedia","src","profileImageUrl","component","onError","e","bannerImageUrl","description","dataSource","sourceType","options","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","nodeId","location","followersCount","friendsCount","mentions","rate","toFixed","colSpan","manual","auto","FormGroup","FormControl","RadioGroup","FormControlLabel","control","Radio","label","Checkbox","checked","categoryVerified","following","isBot","marginLeft","HashtagView","tweets","hashtag","hashtagSearch","setHashtagSearch","undefined","statuses","map","tweet","tweetId","id_str","labelPlacement","DEFAULT_AUTH_URL","VIEWER_ID","floor","random","DEFAULT_VIEWER_OBJ","userId","viewerId","type","namespace","timeStamp","now","tags","mode","entity","viewerObj","socket","socketClient","boxShadow","tabs","toolBar","shadows","progress","serverStatus","twitterAuth","buttonLogin","App","history","useHistory","tabValue","setTabValue","twitterAuthenticated","setTwitterAuthenticated","twitterAuthenticatedUser","setTwitterAuthenticatedUser","nodesPerMin","maxNodesPerMin","maxNodesPerMinTime","bestNetwork","networkId","status","setStatus","search_metadata","setTweets","setProgress","displayNodeType","setDisplayNodeType","age","rateMax","tweetsPerDay","categoryVerfied","currentUser","setCurrentUser","text","currentHashtag","setCurrentHashtag","currentNode","searchString","searchTerm","emit","handleLoginLogout","useCallback","preventDefault","warn","node","persist","searchFilter","eventName","currentTarget","eventValue","eventChecked","code","goForward","goBack","pathname","split","pop","shiftKey","nodeType","alert","nodeValid","useEffect","endsWith","push","on","id","password","results","debug","action","data","userObj","searchNode","startsWith","disconnect","useHotkeys","Container","Tabs","newValue","Tab","CircularProgress","Link","href","rel","UserView","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.12138edc.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n// import useSocket from 'use-socket.io-client';\n// import { useImmer } from 'use-immer';\nimport { useHistory } from \"react-router-dom\";\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport socketClient from \"socket.io-client\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Container from '@material-ui/core/Container';\nimport AppBar from '@material-ui/core/AppBar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\n// import ButtonGroup from '@material-ui/core/ButtonGroup';\n// import InputBase from '@material-ui/core/InputBase';\n// import SearchIcon from '@material-ui/icons/Search';\nimport Link from '@material-ui/core/Link';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport './App.css';\nimport UserView from './UserView.js';\nimport HashtagView from './HashtagView.js';\n// import { ButtonGroup } from '@material-ui/core';\n\n// const ENDPOINT = \"http://mbp3:9997/view\";\nconst ENDPOINT = \"https://word.threeceelabs.com/view\";\nconst DEFAULT_AUTH_URL = \"http://word.threeceelabs.com/auth/twitter\";\n\nconst randomIntFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst randomId = randomIntFromInterval(1000000000, 9999999999);\nconst VIEWER_ID = \"viewer_\" + randomId;\n\nconst DEFAULT_VIEWER_OBJ = {\n  nodeId: VIEWER_ID,\n  userId: VIEWER_ID,\n  viewerId: VIEWER_ID,\n  screenName: VIEWER_ID,\n  type: \"viewer\",\n  namespace: \"view\",\n  timeStamp: Date.now(),\n  tags: {},\n};\n\nDEFAULT_VIEWER_OBJ.tags.type = \"viewer\";\n\nDEFAULT_VIEWER_OBJ.tags.mode = \"stream\";\nDEFAULT_VIEWER_OBJ.tags.entity = VIEWER_ID;\n\nconst viewerObj = DEFAULT_VIEWER_OBJ;\n\nconsole.log({viewerObj});\n\nlet socket = socketClient(ENDPOINT);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    flexGrow: 1,\n    boxShadow: 0,\n  },\n  appBar: {\n    backgroundColor: 'black',\n    marginBottom: theme.spacing(2),\n    boxShadow: 0,\n  },\n  tabs: {\n    flexGrow: 1,\n    color: 'white',\n  },\n  toolBar: {\n    shadows: 0,\n  },\n  title: {\n    // flexGrow: 1,\n    color: 'white',\n    marginRight: theme.spacing(2),\n  },\n  progress: {\n    // flexGrow: 1,\n    color: 'white',\n    marginRight: theme.spacing(2),\n  },\n  serverStatus: {\n    // flexGrow: 1,\n    color: 'gray',\n    padding: theme.spacing(1),\n  },\n  twitterAuth: {\n    // backgroundColor: 'black',\n    color: \"green\",\n    padding: theme.spacing(1),\n    marginRight: theme.spacing(2),\n  },  \n  buttonLogin: {\n    backgroundColor: \"green\",\n    marginRight: theme.spacing(2),\n  },\n  statusBar: {\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: \"white\",\n    '&:hover': {\n      backgroundColor: \"lightgray\",\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'primary',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n\n}));\n\n// const formatDateTime = (dateInput) => {\n//   return new Date(dateInput).toLocaleDateString(\n//     'en-gb',\n//     {\n//       year: 'numeric',\n//       month: 'short',\n//       day: 'numeric',\n//       hour: 'numeric',\n//       minute: 'numeric'\n//     }\n//   );\n// }\n\n// const [socket] = useSocket(ENDPOINT);\n\nconst App = () => {\n\n  // const socket = props.socket;\n\n  // const [socket] = useSocket(ENDPOINT);\n  // socket.connect();\n\n  // let socket;\n\n  const history = useHistory();\n\n  const classes = useStyles();\n\n  const defaultStatus = {\n    nodesPerMin: 0, \n    maxNodesPerMin: 0,\n    maxNodesPerMinTime: 0,\n    bestNetwork: {\n      networkId: \"\"\n    },\n    user: {\n      uncategorized: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        positive: 0,\n        negative: 0,\n        all: 0,\n        mismatched: 0\n      },\n      manual: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        positive: 0,\n        negative: 0,\n      },\n      auto: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        positive: 0,\n        negative: 0,\n      }\n    },\n    hashtag: {\n      uncategorized: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        positive: 0,\n        negative: 0,\n        all: 0,\n        mismatched: 0\n      },\n      manual: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        positive: 0,\n        negative: 0,\n      },\n      auto: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        positive: 0,\n        negative: 0,\n      }\n    }\n  }\n\n  const defaultUser = {\n\n    nodeId: null, \n    screenName: \"threecee\",\n    name: \"\",\n    location: \"\",\n    description: \"\",\n    profileImageUrl: \"https://pbs.twimg.com/profile_images/1205585278565527559/GrTkBpzl.jpg\",\n    bannerImage: \"\",\n    createdAt: null,\n    status: {},\n    followersCount: 0,\n    friendsCount: 0,\n    tweets: 0,\n\n    age: 0,\n    mentions: 0,\n    rate: 0,\n    rateMax: 0,\n    tweetsPerDay: 0,\n\n    lastSeen: null,\n    isBot: false,\n    following: false,\n    categoryVerfied: false,\n    category: \"none\",\n    categoryAuto: \"none\",\n  }\n\n  const defaultHashtag = {\n    nodeId: \"blacklivesmatter\",\n    text: \"BlackLivesMatter\",\n    categoryAuto: \"none\",\n    category: \"left\",\n    createdAt: 0,\n    lastSeen: 0,\n    age: 0,\n    mentions: 0,\n    rate: 0,\n    rateMax: 0,\n  }\n\n  const defaultTweets = {\n    search_metadata: {},\n    statuses: []\n  }\n\n  const [tabValue, setTabValue] = useState(0);\n  const [twitterAuthenticated, setTwitterAuthenticated] = useState(false);\n  const [twitterAuthenticatedUser, setTwitterAuthenticatedUser  ] = useState(\"\");\n  const [status, setStatus] = useState(defaultStatus);\n  // const [tweets, setTweets] = useState(defaultTweets);\n  const [tweets, setTweets] = useState(defaultTweets);\n\n  const [progress, setProgress] = useState(\"loading ...\");\n  const [displayNodeType, setDisplayNodeType] = useState(\"user\");\n  const [currentUser, setCurrentUser] = useState(defaultUser);\n  const [currentHashtag, setCurrentHashtag] = useState(defaultHashtag);\n\n  const currentNode = displayNodeType === \"user\" ? currentUser : currentHashtag;\n\n  const handleTabChange = (event, newValue) => {\n    event.preventDefault()\n    console.log({newValue})\n    setDisplayNodeType(newValue === 0 ? \"user\" : \"hashtag\")\n    setTabValue(newValue);\n  };\n\n  const handleSearchNode = (searchString) => {\n    setProgress(progress => \"searchNode\");\n    const searchTerm = displayNodeType === \"user\" ? \"@\" + searchString : \"#\" + searchString\n    console.log(\"SEARCH TERM: \" + searchTerm)\n    socket.emit(\"TWITTER_SEARCH_NODE\", searchTerm)\n  }\n\n  const handleLoginLogout = useCallback((event, twitterAuthenticated) => {\n\n    event.preventDefault()\n    setProgress(progress => \"loginLogout\");\n\n    if (twitterAuthenticated){\n      console.warn(\"LOGGING OUT\");\n      socket.emit(\"logout\", viewerObj);\n      setTwitterAuthenticated(false)\n      setTwitterAuthenticatedUser(\"\")\n      setProgress(progress => \"idle\");\n    }\n    else{\n      console.warn(\n        \"LOGIN: AUTH: \" +\n          twitterAuthenticated +\n          \" | URL: \" +\n          DEFAULT_AUTH_URL\n      );\n      window.open(DEFAULT_AUTH_URL, \"LOGIN\", \"_new\");\n      socket.emit(\"login\", viewerObj);\n    }\n  }, []);\n\n  const handleNodeChange = useCallback((event, node) => {\n\n    if (event.preventDefault !== undefined) { \n      event.preventDefault() \n    }\n\n    if (displayNodeType === \"user\"){\n      console.log(\"handleNodeChange | user: @\" + node.screenName)\n    }\n    else{\n      console.log(\"handleNodeChange | hashtag: #\" + node.nodeId)\n    }\n\n    if (event.persist !== undefined) { \n      event.persist() \n    }\n\n    let eventName = event.currentTarget.name || \"nop\";\n    let eventValue = event.currentTarget.value;\n    let eventChecked = event.currentTarget.checked;\n\n    if (event.currentTarget.name === undefined && event.code){\n\n      switch (event.code){\n\n        case \"ArrowRight\":\n        case \"ArrowLeft\":\n          eventName = \"history\"\n          if (event.code === \"ArrrowRight\"){ history.goForward(); }\n          if (event.code === \"ArrowLeft\"){ history.goBack(); }\n          eventValue = history.location.pathname.split(\"/\").pop()\n          break;\n\n        case \"KeyA\":\n          eventName = \"all\"\n          break;\n\n        case \"KeyD\":\n        case \"KeyL\":\n          if (event.shiftKey){\n            eventName = \"category\"\n            eventValue = \"left\"\n          }\n          else{\n            eventName = \"left\"\n          }\n          break;\n\n        case \"KeyN\":\n          if (event.shiftKey){\n            eventName = \"category\"\n            eventValue = \"neutral\"\n          }\n          else{\n            eventName = \"neutral\"\n          }\n          break;\n\n        case \"KeyR\":\n          if (event.shiftKey){\n            eventName = \"category\"\n            eventValue = \"right\"\n          }\n          else{\n            eventName = \"right\"\n          }\n          break;\n\n        case \"KeyHyphen\":\n          if (event.shiftKey){\n            eventName = \"category\"\n            eventValue = \"negative\"\n          }\n          else{\n            eventName = \"negative\"\n          }\n          break;\n\n        case \"KeyEquals\":\n          if (event.shiftKey){\n            eventName = \"category\"\n            eventValue = \"positive\"\n          }\n          else{\n            eventName = \"positive\"\n          }\n          break;\n\n        case \"KeyI\":\n        case \"KeyX\":\n          if (event.shiftKey){\n            eventName = \"ignored\"\n            eventChecked = !node.ignored\n          }\n          break;\n\n        case \"KeyV\":\n          if (event.shiftKey){\n            eventName = \"catVerified\"\n            eventChecked = !node.categoryVerified\n          }\n          break;\n\n        case \"KeyB\":\n          if (event.shiftKey){\n            eventName = \"isBot\"\n            eventChecked = !node.isBot\n          }\n          break;\n\n        default:\n      }\n    }\n\n    let searchFilter;\n\n    if (node.nodeType === \"user\"){\n      searchFilter = \"@?\";\n      console.log(\"handleNodeChange | @\" + node.screenName + \" | name: \" + eventName + \" | value: \" + eventValue)\n    }\n    else{\n      searchFilter = \"#?\";\n      console.log(\"handleNodeChange | #\" + node.nodeId + \" | name: \" + eventName + \" | value: \" + eventValue)\n    }\n\n    setProgress(eventName);\n\n    switch (eventName){\n\n      case \"nop\":\n        break;\n\n      case \"history\":\n        if (node.nodeType === \"user\"){\n          console.log(\"handleNodeChange | history | @\" + node.screenName + \" | name: \" + eventName + \" | value: \" + eventValue)\n          socket.emit(\"TWITTER_SEARCH_NODE\", \"@\" + eventValue);\n        }\n        else{\n          console.log(\"handleNodeChange | history | #\" + node.nodeId + \" | name: \" + eventName + \" | value: \" + eventValue)\n          socket.emit(\"TWITTER_SEARCH_NODE\", \"#\" + eventValue);\n        }\n        break;\n\n      case \"all\":\n      case \"left\":\n      case \"neutral\":\n      case \"right\":\n      case \"positive\":\n      case \"negative\":\n        searchFilter += eventName\n        socket.emit(\"TWITTER_SEARCH_NODE\", searchFilter);\n        break\n\n      case \"mismatch\":\n        if (node.nodeType === \"user\"){\n          socket.emit(\"TWITTER_SEARCH_NODE\", \"@?mm\");\n        }\n        break\n\n      case \"category\":\n        if (twitterAuthenticated){\n          socket.emit(\"TWITTER_CATEGORIZE_NODE\", {\n            category: eventValue,\n            following: true,\n            node: node,\n          });\n        }\n        else{\n          alert(\"NOT AUTHENTICATED\")\n          setProgress(\"not authenticated\")\n        }\n        break\n\n      case \"isBot\":\n        if (node.nodeType === \"user\"){\n          if (eventChecked){\n            socket.emit(\"TWITTER_BOT\", node);\n          }\n          else{\n            socket.emit(\"TWITTER_UNBOT\", node);\n          }\n        }\n        break\n\n      case \"following\":\n        if (node.nodeType === \"user\"){\n          if (eventChecked){\n            socket.emit(\"TWITTER_FOLLOW\", node);\n          }\n          else{\n            socket.emit(\"TWITTER_UNFOLLOW\", node);\n          }\n        }\n        break\n\n      case \"catVerified\":\n        if (node.nodeType === \"user\"){\n          if (eventChecked){\n            socket.emit(\"TWITTER_CATEGORY_VERIFIED\", node);\n          }\n          else{\n            socket.emit(\"TWITTER_CATEGORY_UNVERIFIED\", node);\n          }\n        }\n        break\n\n      case \"ignored\":\n        if (eventChecked){\n          socket.emit(\"TWITTER_IGNORE\", node);\n        }\n        else{\n          socket.emit(\"TWITTER_UNIGNORE\", node);\n        }\n        break\n\n      default:\n        console.log(\"handleNodeChange: UNKNOWN NAME: \" + eventName + \" | VALUE: \" + eventValue)\n        console.log({event})\n    }\n    \n  }, [ twitterAuthenticated, displayNodeType, history])\n\n  const nodeValid = (node) => {\n    if (node === undefined) return false\n    if (node.nodeId === undefined) return false\n\n    if (node.nodeType === \"user\"){\n      if (node.screenName === undefined) return false\n    } \n\n    return true\n  }\n\n  useEffect(() => {\n    if (displayNodeType === \"user\"){\n      if (!history.location.pathname.endsWith(\"/user/\" + currentUser.screenName)){\n        history.push(\"/categorize/user/\" + currentUser.screenName)\n      }\n    }\n    if (displayNodeType === \"hashtag\"){\n      if (!history.location.pathname.endsWith(\"/hashtag/\" + currentHashtag.nodeId)){\n        history.push(\"/categorize/hashtag/\" + currentHashtag.nodeId)\n      }\n    }\n  }, [currentUser, currentHashtag, displayNodeType, history])\n\n  useEffect(() => {\n\n    // socket = socketClient(ENDPOINT);\n\n    socket.on(\"connect\", ()=>{\n\n      console.log(\"CONNECTED: \" + socket.id)\n\n      setProgress(progress => \"authentication\");\n\n      socket.emit(\"authentication\", {\n        namespace: \"view\",\n        userId: \"test\",\n        password: \"0123456789\",\n      });\n    })\n\n    socket.on(\"SET_TWITTER_USER\", (results) => {\n\n      console.debug(\"RX SET_TWITTER_USER\");\n\n      if (nodeValid(results.node)) {\n        setCurrentUser(currentUser => results.node)\n        console.debug(\"new: @\" + results.node.screenName);\n      }\n      setProgress(progress => \"idle\");\n      setStatus(status => results.stats)\n    });\n\n    socket.on(\"SET_TWITTER_HASHTAG\", (results) => {\n\n      console.debug(\"RX SET_TWITTER_HASHTAG\");\n      if (nodeValid(results.node)) { \n        setCurrentHashtag(currentHashtag => results.node) \n        console.debug(\"new: #\" + results.node.nodeId);\n        setTweets(tweets => results.tweets)\n      }\n      setProgress(progress => \"idle\");\n      setStatus(status => results.stats)\n    });\n\n    socket.on(\"action\", (action) => {\n      \n      console.debug(\"RX ACTION | socket: \" + socket.id + \" | TYPE: \" + action.type);\n      console.debug(\"RX ACTION | \", action.data);\n\n      switch (action.type){\n\n        case \"user\":\n            setCurrentUser(currentUser => action.data)\n            console.log(\"USER: @\" + action.data.screenName + \" | \" + action.data.profileImageUrl)\n          break\n\n        case \"hashtag\":\n            console.log(\"HT: #\" + action.data.text)\n          break\n\n        case \"stats\":\n            setStatus(() => action.data)\n          break\n\n        default:\n      }\n\n    });   \n\n    socket.on(\"authenticated\", function () {\n      setProgress(progress => \"idle\");\n      console.debug(\"AUTHENTICATED | \" + socket.id);\n\n      socket.emit(\"TWITTER_SEARCH_NODE\", \"@threecee\")\n    });\n\n    socket.on(\"USER_AUTHENTICATED\", function (userObj) {\n      setProgress(progress => \"idle\");\n      setTwitterAuthenticated(() => true)\n      setTwitterAuthenticatedUser(twitterAuthenticatedUser => userObj.screenName)\n      console.log(\"RX TWITTER USER_AUTHENTICATED | USER: @\" + userObj.screenName);\n    });\n\n    socket.on(\"TWITTER_USER_NOT_FOUND\", (results) => {\n      console.debug(\"RX TWITTER_USER_NOT_FOUND\");\n      console.debug(results);\n      setStatus(status => results.stats);\n      if (results.searchNode.startsWith(\"@?\")){\n        console.debug(\"RETRY NEXT UNCAT: \" + results.searchNode);\n        socket.emit(\"TWITTER_SEARCH_NODE\", results.searchNode);\n      }\n      else{\n        setProgress(progress => \"idle\");\n      }\n    });\n    \n    setProgress(\"idle\")\n\n    return () => socket.disconnect();\n\n  }, [])\n\n  // history\n  // - back\n  useHotkeys('left', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // - forward\n  useHotkeys('right', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n\n  // all\n  useHotkeys('A', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n\n  // left\n  useHotkeys('L', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+L', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('D', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+D', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n\n  // right\n  useHotkeys('R', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+R', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n\n  // neutral\n  useHotkeys('N', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+N', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n\n  // negative\n  useHotkeys('-', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+-', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n\n  // positive\n  useHotkeys('=', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+=', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n\n  // ignore toggle\n  useHotkeys('shift+I', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+X', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // bot toggle\n  useHotkeys('shift+B', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // verified toggle\n  useHotkeys('shift+V', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n\n  const displayNode = (nodeType) => {\n    if (nodeType === \"user\"){\n      return <UserView user={currentUser} stats={status} handleNodeChange={handleNodeChange} handleSearchNode={handleSearchNode}/>\n    }\n    else{\n      return <HashtagView hashtag={currentHashtag} stats={status} tweets={tweets} handleNodeChange={handleNodeChange} handleSearchNode={handleSearchNode}/>\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Container component=\"main\" maxWidth={false}>\n        <AppBar  className={classes.appBar} position=\"static\">\n          <Toolbar className={classes.toolBar}>\n\n            <Typography className={classes.title}>\n              {/* Categorizer | USER HISTORY: {userHistory.length} | PREV USER: {userHistory.length > 0 ? userHistory[userHistory.length-1] : \"\"} */}\n              CATEGORIZE\n            </Typography>\n            \n            <Tabs \n              className={classes.tabs}\n              value={tabValue} \n              // indicatorColor=\"secondary\"\n              // textColor=\"primary\"\n              onChange={handleTabChange}\n            >\n              <Tab label=\"User\" />\n              <Tab label=\"Hashtag\"/>\n            </Tabs>\n\n            {progress !== \"idle\" ? <><Typography className={classes.progress}>{`${progress} ...`}</Typography> <CircularProgress className={classes.progress}>{progress}</CircularProgress></> : <></>}\n\n            {/* <Typography  className={classes.serverStatus}>\n              NN: {status.bestNetwork.networkId}\n            </Typography>\n            <Typography  className={classes.serverStatus}>\n              {status.nodesPerMin} nodes/min (max: {status.maxNodesPerMin} | time: {formatDateTime(status.maxNodesPerMinTime)})\n            </Typography> */}\n\n            <Link\n              className={classes.twitterAuth}\n              href={\"http://twitter.com/\" + twitterAuthenticatedUser}\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              {twitterAuthenticatedUser ? \"@\" + twitterAuthenticatedUser : \"\"}\n            </Link>\n\n            <Button \n              className={classes.buttonLogin}\n              variant=\"contained\" \n              color=\"primary\" \n              size=\"small\" \n              onClick={event => { handleLoginLogout(event, twitterAuthenticated)}} \n              name=\"login\"\n              label=\"login\"\n            >\n              {twitterAuthenticated ? \"LOGOUT\" : \"LOGIN TWITTER\"}\n            </Button>\n\n          </Toolbar>\n        </AppBar>\n        {displayNode(displayNodeType)}\n      </Container>\n    </div>\n  );\n}\n\nexport default App;","import React, { useState } from 'react';\nimport { Timeline } from 'react-twitter-widgets'\n\nimport Duration from 'duration';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Card from '@material-ui/core/Card';\n// import CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n// import CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\n// import CheckBoxIcon from '@material-ui/icons/CheckBox';\n// import CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\n// import FormLabel from '@material-ui/core/FormLabel';\nimport Grid from '@material-ui/core/Grid';\n// import IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\n// import MenuIcon from '@material-ui/icons/Menu';\n// import Paper from '@material-ui/core/Paper';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst fontSizeCategory = '1.0rem';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 2,\n  },\n  appBar: {\n    backgroundColor: 'white',\n    marginBottom: theme.spacing(1),\n  },\n  grid: {\n    display: 'flex',\n    alignItems: 'stretch',\n  },\n  gridItem: {\n    margin: theme.spacing(1),\n  },  \n  card: {\n    maxWidth: \"85%\",\n    alignSelf: \"center\",\n  },\n  profileImage: {\n    marginBottom: theme.spacing(1),\n  },\n  bannerImage: {\n    marginBottom: theme.spacing(1),\n  },\n  radioGroupCategory: {\n    backgroundColor: '#ddeeee',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n  },\n  table: {\n    borderRadius: theme.shape.borderRadius,\n  },\n  tableHead: {\n    backgroundColor: '#ddeeee',\n  },\n  tableCategorized: {\n    borderRadius: theme.shape.borderRadius,\n    borderColor: 'red',\n    backgroundColor: '#ddeeee',\n  },\n  tableRowGreen: {\n    backgroundColor: 'lightgreen',\n  },\n  statusBar: {\n    raised: false,\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    // flexGrow: 1,\n    color: 'blue',\n  },\n  search: {\n    // flexGrow: 1,\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: \"white\",\n    '&:hover': {\n      backgroundColor: \"#ddeeee\",\n    },\n    marginRight: theme.spacing(1),\n    // marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      // marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'primary',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n\n  buttonGroupLabel: {\n    color: 'blue',\n    marginRight: theme.spacing(1),\n  },\n  buttonAll: {\n    color: 'black',\n  },\n  buttonLeft: {\n    color: 'blue',\n  },\n  buttonNeutral: {\n    color: 'gray',\n  },\n  buttonRight: {\n    color: 'red',\n  },\n  buttonMismatch: {\n    margin: 5\n  },\n\n  autoCategory:{\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n  },\n\n  left: {\n    width: '50%',\n    fontSize: fontSizeCategory,\n    backgroundColor: 'blue',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n    marginBottom: theme.spacing(1),\n  },\n  neutral: {\n    width: '50%',\n    fontSize: fontSizeCategory,\n    backgroundColor: 'gray',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n    marginBottom: theme.spacing(1),\n  },\n  right: {\n    width: '50%',\n    fontSize: fontSizeCategory,\n    backgroundColor: 'red',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n    marginBottom: theme.spacing(1),\n  },\n  positive: {\n    width: '50%',\n    fontSize: fontSizeCategory,\n    backgroundColor: 'green',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n    marginBottom: theme.spacing(1),\n  },\n  negative: {\n    width: '50%',\n    fontSize: fontSizeCategory,\n    backgroundColor: 'red',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n    marginBottom: theme.spacing(1),\n  },\n  none: {\n    width: '50%',\n    fontSize: fontSizeCategory,\n    backgroundColor: 'lightgray',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n    marginBottom: theme.spacing(1),\n  },\n  ignored: {\n    width: '50%',\n    fontSize: fontSizeCategory,\n    backgroundColor: 'yellow',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'black',\n    marginBottom: theme.spacing(1),\n  },\n\n}));\n\nconst formatDate = (dateInput) => {\n  return new Date(dateInput).toLocaleDateString(\n    'en-gb',\n    {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }\n  );\n}\n\nconst defaultProfileImage = \"logo192.png\"\nconst defaultBannerImage = \"logo192.png\"\n\nconst User = (props) => {\n\n  const classes = useStyles();\n\n  const createdAt = formatDate(props.user.createdAt)\n  const lastSeen = formatDate(props.user.lastSeen)\n \n  const lastSeenDuration = new Duration(new Date(props.user.lastSeen)).toString(1, 4)\n  const twitterAge = props.user.createdAt ? new Duration(new Date(props.user.createdAt)) : new Duration(new Date())\n  const twitterAgeString = twitterAge.toString(1, 4)\n\n  const tweetRate = twitterAge.days > 0 ? Math.ceil(props.user.statusesCount/twitterAge.days) : 0;\n\n  const [userSearch, setUserSearch] = useState(\"\");\n\n  // useEffect(() => {\n  //   setUserSearch(props.user.screenName)\n  // }, [props])\n  \n  const handleChangeSearch = (event) => {\n    console.log(\"handleChangeSearch: \" + event.target.value)\n    setUserSearch(event.target.value);\n  }\n\n  const handleKeyPress = (event) => {\n    if (event.charCode === 13) { // enter key pressed\n      console.log(\"ENTER\")\n      props.handleSearchNode(userSearch)\n    }\n  }\n\n  const openUserTwitterPage = () => {\n    console.log(\"open twitter\")\n    window.open(`http://twitter.com/${props.user.screenName || null}`, \"_blank\") //to open new page\n  }\n\n  const getCategoryClass = (category) => {\n    switch (category){\n      case \"left\":\n      case \"neutral\":\n      case \"right\":\n      case \"positive\":\n      case \"negative\":\n      case \"ignored\":\n        return classes[category]\n      default:\n        return classes.none\n    }\n  }\n\n  return (\n    <>\n      <AppBar  className={classes.appBar} position=\"static\">\n        <Toolbar variant=\"dense\">\n\n          {/* <Typography variant=\"h6\" className={classes.title}>\n            User\n          </Typography> */}\n\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon color=\"primary\"/>\n            </div>\n            <InputBase\n              placeholder=\"search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n              value={userSearch}\n              onKeyPress={handleKeyPress}\n              onChange={handleChangeSearch}\n            />\n          </div>\n\n          <Typography className={classes.buttonGroupLabel}>GET UNCAT</Typography>   \n\n          <ButtonGroup color=\"primary\" size=\"small\" aria-label=\"small button group\">\n            <Button onClick={(event) => props.handleNodeChange(event, props.user)} name=\"all\" >ALL: {props.stats.user.uncategorized.all}</Button>\n            <Button onClick={(event) => props.handleNodeChange(event, props.user)} name=\"left\" >LEFT: {props.stats.user.uncategorized.left}</Button>\n            <Button onClick={(event) => props.handleNodeChange(event, props.user)} name=\"neutral\" >NEUTRAL: {props.stats.user.uncategorized.neutral}</Button>\n            <Button onClick={(event) => props.handleNodeChange(event, props.user)} name=\"right\" >RIGHT: {props.stats.user.uncategorized.right}</Button>\n          </ButtonGroup>\n\n          <ButtonGroup color=\"primary\" size=\"small\" aria-label=\"small button group\">\n            <Button \n              className={classes.buttonMismatch}\n              // variant=\"contained\" \n              color=\"primary\" \n              size=\"small\" \n              onClick={(event) => props.handleNodeChange(event, props.user)} \n              name=\"mismatch\" \n            >\n              MISMATCH {props.stats.user.mismatched}\n            </Button>\n          </ButtonGroup>\n\n        </Toolbar>\n      </AppBar>\n      <Grid className={classes.grid}>\n          <Grid item className={classes.gridItem} xs={3}>\n            <Card className={classes.card} variant=\"outlined\">\n              <CardActions onClick={openUserTwitterPage}>\n                  <Typography className={props.user.ignored ? classes[\"ignored\"] : getCategoryClass(props.user.category)} align=\"center\">\n                    {props.user.ignored ? \"IGNORED\" : props.user.category.toUpperCase() || \"MANUAL: NONE\"}\n                  </Typography>\n                  <Typography className={getCategoryClass(props.user.categoryAuto)} align=\"center\">\n                    AUTO: {props.user.categoryAuto.toUpperCase() || \"NONE\"}\n                  </Typography>\n              </CardActions>\n              <CardContent onClick={openUserTwitterPage}>\n                  <Typography variant=\"h6\">{props.user.name}</Typography>\n                  <Typography>@{props.user.screenName}</Typography>\n              </CardContent>\n              <CardMedia\n                className={classes.profileImage}\n                src={props.user.profileImageUrl || defaultProfileImage}\n                component=\"img\"\n                onError={e => {}}              \n              />\n              <CardMedia \n                className={classes.bannerImage} \n                src={props.user.bannerImageUrl || defaultBannerImage} \n                component=\"img\"\n                onError={e => {}}              \n              />\n              <CardContent>\n                <Typography>\n                  {props.user.description}\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item className={classes.gridItem} xs={2}>\n            <Timeline\n              dataSource={{\n                sourceType: 'profile',\n                screenName: props.user.screenName\n              }}\n              options={{width: '100%', height: '640'}}\n            />\n          </Grid>\n          <Grid item className={classes.gridItem} xs={3}>\n            <TableContainer>\n              <Table className={classes.table} size=\"small\">\n                <TableHead>\n                  <TableRow className={classes.tableHead}>\n                    <TableCell>@{props.user.screenName}</TableCell><TableCell align=\"right\"></TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  <TableRow>\n                    <TableCell>Twitter ID</TableCell><TableCell align=\"right\">{props.user.nodeId}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Location</TableCell><TableCell align=\"right\">{props.user.location}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Created</TableCell><TableCell align=\"right\">{createdAt}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Twitter age</TableCell><TableCell align=\"right\">{twitterAgeString}</TableCell>\n                  </TableRow>\n                  <TableRow className={props.user.followersCount > 5000 ? classes.tableRowGreen : null}>\n                    <TableCell>Followers</TableCell><TableCell align=\"right\">{props.user.followersCount}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Friends</TableCell><TableCell align=\"right\">{props.user.friendsCount}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Tweets</TableCell><TableCell align=\"right\">{props.user.statusesCount}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Tweets/day</TableCell><TableCell align=\"right\">{tweetRate}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Last Active</TableCell><TableCell align=\"right\">{lastSeen} ({lastSeenDuration} ago)</TableCell>\n                  </TableRow>\n                  {/* <TableRow>\n                    <TableCell>Last Active</TableCell><TableCell align=\"right\">{lastSeenDuration} ago</TableCell>\n                  </TableRow> */}\n                  <TableRow>\n                    <TableCell>Mentions</TableCell><TableCell align=\"right\">{props.user.mentions}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Mentions/hour</TableCell><TableCell align=\"right\">{props.user.rate ? 60*props.user.rate.toFixed(2) : 0}</TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Grid>\n          <Grid item className={classes.gridItem} xs={2}>\n            <TableContainer>\n              <Table size=\"small\">\n                <TableHead>\n                  <TableRow className={classes.tableHead}>\n                    <TableCell colSpan={3}>ALL USERS</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>CAT</TableCell>\n                    <TableCell align=\"right\">MAN</TableCell>\n                    <TableCell align=\"right\">AUTO</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  <TableRow>\n                    <TableCell>LEFT</TableCell>\n                    <TableCell align=\"right\">{props.stats.user.manual.left}</TableCell>\n                    <TableCell align=\"right\">{props.stats.user.auto.left}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>RIGHT</TableCell>\n                    <TableCell align=\"right\">{props.stats.user.manual.right}</TableCell>\n                    <TableCell align=\"right\">{props.stats.user.auto.right}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>NEUTRAL</TableCell>\n                    <TableCell align=\"right\">{props.stats.user.manual.neutral}</TableCell>\n                    <TableCell align=\"right\">{props.stats.user.auto.neutral}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>POSITIVE</TableCell>\n                    <TableCell align=\"right\">{props.stats.user.manual.positive}</TableCell>\n                    <TableCell align=\"right\">{props.stats.user.auto.positive}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>NEGATIVE</TableCell>\n                    <TableCell align=\"right\">{props.stats.user.manual.negative}</TableCell>\n                    <TableCell align=\"right\">{props.stats.user.auto.negative}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>NONE</TableCell>\n                    <TableCell align=\"right\">{props.stats.user.manual.none}</TableCell>\n                    <TableCell align=\"right\">{props.stats.user.auto.none}</TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Grid>\n          <Grid item className={classes.gridItem} xs={1}>\n            <FormGroup>\n              <FormControl component=\"fieldset\" size=\"small\">\n                <RadioGroup \n                  className={classes.radioGroupCategory}\n                  aria-label=\"category\" \n                  name=\"category\" \n                  size=\"small\"\n                  value={props.user.category || \"none\"} \n                  onChange={(event) => props.handleNodeChange(event, props.user)}\n                >\n                  <FormControlLabel value=\"left\" control={<Radio size=\"small\"/>} label=\"LEFT\"/>\n                  <FormControlLabel value=\"right\" control={<Radio size=\"small\" />} label=\"RIGHT\" />\n                  <FormControlLabel value=\"neutral\" control={<Radio size=\"small\" />} label=\"NEUTRAL\" />\n                  <FormControlLabel value=\"positive\" control={<Radio size=\"small\" />} label=\"POSITIVE\" />\n                  <FormControlLabel value=\"negative\" control={<Radio size=\"small\" />} label=\"NEGATIVE\" />\n                  <FormControlLabel value=\"none\" control={<Radio size=\"small\" />} label=\"NONE\" />\n                </RadioGroup>\n              </FormControl>\n\n              <FormControl \n                component=\"fieldset\"\n                className={classes.radioGroupCategory}\n                size=\"small\"\n              >\n                <FormControlLabel\n                  control={<Checkbox size=\"small\" checked={props.user.categoryVerified || false} onChange={(event) => props.handleNodeChange(event, props.user)} name=\"catVerified\" />}\n                  label=\"VERIFIED\"\n                />\n                <FormControlLabel\n                  control={<Checkbox size=\"small\" checked={props.user.following || false} onChange={(event) => props.handleNodeChange(event, props.user)} name=\"following\" />}\n                  label=\"FOLLOWING\"\n                />\n                <FormControlLabel\n                  control={<Checkbox size=\"small\" checked={props.user.ignored || false} onChange={(event) => props.handleNodeChange(event, props.user)} name=\"ignored\" />}\n                  label=\"IGNORED\"\n                />\n                <FormControlLabel\n                  control={<Checkbox size=\"small\" checked={props.user.isBot || false} onChange={(event) => props.handleNodeChange(event, props.user)} name=\"isBot\" />}\n                  label=\"BOT\"\n                />\n              </FormControl>\n            </FormGroup>\n          </Grid>\n        </Grid>\n    </>\n  );\n}\n\nexport default User;\n","import React, { useState } from 'react';\nimport { Tweet } from 'react-twitter-widgets'\n\nimport Duration from 'duration';\n\nimport AppBar from '@material-ui/core/AppBar';\n// import Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Card from '@material-ui/core/Card';\n// import CardActionArea from '@material-ui/core/CardActionArea';\n// import CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n// import CardHeader from '@material-ui/core/CardHeader';\n// import CardMedia from '@material-ui/core/CardMedia';\n// import CheckBoxIcon from '@material-ui/icons/CheckBox';\n// import CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\n// import FormLabel from '@material-ui/core/FormLabel';\nimport Grid from '@material-ui/core/Grid';\n// import IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\n// import MenuIcon from '@material-ui/icons/Menu';\n// import Paper from '@material-ui/core/Paper';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\n// import TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TableHead } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 2,\n  },\n  grid: {\n    display: 'flex',\n  },\n  gridItem: {\n    margin: 5,\n  },  \n  card: {\n    raised: false,\n    maxWidth: 400,\n  },\n  table: {\n  },\n  tableRowGreen: {\n    backgroundColor: 'lightgreen',\n  },\n  appBar: {\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  statusBar: {\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    color: 'blue',\n  },\n  search: {\n    flexGrow: 1,\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: \"white\",\n    '&:hover': {\n      backgroundColor: \"lightgray\",\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'primary',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n\n  buttonGroupLabel: {\n    color: 'blue',\n    marginRight: theme.spacing(1),\n  },\n  buttonAll: {\n    color: 'black',\n  },\n  buttonLeft: {\n    color: 'blue',\n  },\n  buttonNeutral: {\n    color: 'gray',\n  },\n  buttonRight: {\n    color: 'red',\n  },\n  buttonMismatch: {\n    margin: 5\n  },\n\n  autoCategory:{\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n  },\n\n  left: {\n    backgroundColor: 'blue',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n  },\n  neutral: {\n    backgroundColor: 'gray',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n  },\n  right: {\n    backgroundColor: 'red',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n  },\n  none: {\n    backgroundColor: 'white',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n  },\n\n}));\n\nconst formatDate = (dateInput) => {\n  return new Date(dateInput).toLocaleDateString(\n    'en-gb',\n    {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }\n  );\n}\n\nconst HashtagView = (props) => {\n\n  const classes = useStyles();\n\n  const createdAt = formatDate(props.hashtag.createdAt)\n  const lastSeen = formatDate(props.hashtag.lastSeen)\n \n  const lastSeenDuration = new Duration(new Date(props.hashtag.lastSeen)).toString(1, 4)\n  const twitterAge = props.hashtag.createdAt ? new Duration(new Date(props.hashtag.createdAt)) : new Duration(new Date())\n  const twitterAgeString = twitterAge.toString(1, 4)\n\n  const [hashtagSearch, setHashtagSearch] = useState(\"\");\n\n  // useEffect(() => {\n  //   setHashtagSearch(props.hashtag.nodeId)\n  // }, [props])\n  \n  const handleChangeSearch = (event) => {\n    console.log(\"handleChangeSearch: \" + event.target.value)\n    setHashtagSearch(event.target.value);\n  }\n\n  const handleKeyPress = (event) => {\n    if (event.charCode === 13) { // enter key pressed\n      console.log(\"ENTER: hashtagSearch: \" + hashtagSearch)\n      props.handleSearchNode(hashtagSearch)\n    }\n  }\n\n  const openHashtagTwitterPage = () => {\n    console.log(\"open twitter\")\n    window.open(`https://twitter.com/search?f=tweets&q=%23${props.hashtag.nodeId || null}`, \"_blank\") //to open new page\n  }\n\n  const displayTweets = (tweets) => {\n    if (tweets.statuses === undefined) { return <></>}\n    return tweets.statuses.map((tweet) => {\n      return <Tweet key={tweet.id_str} tweetId={tweet.id_str} options={{ width: \"400\" }} />\n    })\n  }\n\n  return (\n    <>\n      <AppBar  className={classes.appBar} position=\"static\">\n        <Toolbar variant=\"dense\">\n\n          {/* <Typography variant=\"h6\" className={classes.title}>\n            Hashtag\n          </Typography> */}\n\n          <div className={classes.search}>\n\n            <div className={classes.searchIcon}>\n              <SearchIcon color=\"primary\"/>\n            </div>\n\n            <InputBase\n              placeholder=\"search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n              value={hashtagSearch}\n              onKeyPress={handleKeyPress}\n              onChange={handleChangeSearch}\n            />\n\n          </div>\n\n          <Typography className={classes.buttonGroupLabel}>\n            UNCAT\n          </Typography>   \n\n          <ButtonGroup variant=\"contained\" color=\"primary\" size=\"small\" aria-label=\"small button group\">\n            <Button onClick={(event) => props.handleNodeChange(event, props.hashtag)} name=\"all\" >ALL: {props.stats.hashtag.uncategorized.all}</Button>\n          </ButtonGroup>\n\n        </Toolbar>\n      </AppBar>\n      <Grid className={classes.grid}>\n        <Grid item className={classes.gridItem} xs={3}>\n          <Card className={classes.card} variant=\"outlined\">\n            <CardContent onClick={openHashtagTwitterPage}>\n              <Typography variant=\"h6\">#{props.hashtag.nodeId}</Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item className={classes.gridItem} xs={3}>\n          {displayTweets(props.tweets)}\n        </Grid>\n        <Grid item className={classes.gridItem} xs={3}>\n          <TableContainer>\n            <Table className={classes.table} size=\"small\">\n              <TableBody>\n                <TableRow>\n                  <TableCell>id</TableCell><TableCell align=\"right\">{props.hashtag.nodeId}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>created</TableCell><TableCell align=\"right\">{createdAt}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>twitter age</TableCell><TableCell align=\"right\">{twitterAgeString}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>last seen</TableCell><TableCell align=\"right\">{lastSeen}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>last seen</TableCell><TableCell align=\"right\">{lastSeenDuration} ago</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>mentions</TableCell><TableCell align=\"right\">{props.hashtag.mentions}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>mentions/min</TableCell><TableCell align=\"right\">{props.hashtag.rate ? props.hashtag.rate.toFixed(1) : 0}</TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item className={classes.gridItem} xs={2}>\n          <TableContainer>\n            <Table className={classes.table} size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>CAT</TableCell>\n                  <TableCell align=\"left\">MAN</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                <TableRow>\n                  <TableCell>left</TableCell>\n                  <TableCell align=\"right\">{props.stats.hashtag.manual.left}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>neutral</TableCell>\n                  <TableCell align=\"right\">{props.stats.hashtag.manual.neutral}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>right</TableCell>\n                  <TableCell align=\"right\">{props.stats.hashtag.manual.right}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>positive</TableCell>\n                  <TableCell align=\"right\">{props.stats.hashtag.manual.positive}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>negative</TableCell>\n                  <TableCell align=\"right\">{props.stats.hashtag.manual.negative}</TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item className={classes.gridItem} xs={1}>\n          <FormGroup>\n            <FormControl component=\"fieldset\">\n              <RadioGroup aria-label=\"category\" name=\"category\" value={props.hashtag.category || \"none\"} onChange={(event) => props.handleNodeChange(event, props.hashtag)}>\n                <FormControlLabel labelPlacement=\"start\" value=\"left\" control={<Radio />} label=\"left\"/>\n                <FormControlLabel labelPlacement=\"start\" value=\"neutral\" control={<Radio />} label=\"neutral\" />\n                <FormControlLabel labelPlacement=\"start\" value=\"right\" control={<Radio />} label=\"right\" />\n                <FormControlLabel labelPlacement=\"start\" value=\"positive\" control={<Radio />} label=\"positive\" />\n                <FormControlLabel labelPlacement=\"start\" value=\"negative\" control={<Radio />} label=\"negative\" />\n                <FormControlLabel labelPlacement=\"start\" value=\"none\" control={<Radio />} label=\"none\" />\n              </RadioGroup>\n            </FormControl>\n\n            <FormControlLabel\n              control={<Checkbox checked={props.hashtag.ignored || false} onChange={(event) => props.handleNodeChange(event, props.hashtag)} name=\"ignored\" />}\n              label=\"ignored\"\n              labelPlacement=\"start\"\n            />\n          </FormGroup>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default HashtagView;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}