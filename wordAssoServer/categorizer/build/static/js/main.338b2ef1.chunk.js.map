{"version":3,"sources":["UserView.js","App.js","HashtagView.js","reportWebVitals.js","index.js"],"names":["fontSizeCategory","StyledTableCell","withStyles","theme","head","body","fontSize","TableCell","StyledTableRow","root","TableRow","useStyles","makeStyles","flexGrow","appBar","backgroundColor","marginBottom","spacing","grid","display","alignItems","gridItem","margin","card","maxWidth","alignSelf","profileImage","bannerImage","icon","borderRadius","width","height","boxShadow","backgroundImage","outline","outlineOffset","background","checkedIcon","content","radioGroupCategory","shape","padding","radioButtonLabel","radioButton","table","tableHead","tableCell","tableCategorized","borderColor","tableRowGreen","statusBar","raised","menuButton","marginRight","title","color","search","position","breakpoints","up","searchIcon","pointerEvents","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","buttonGroupLabel","buttonAll","buttonLeft","buttonNeutral","buttonRight","buttonMismatch","autoCategory","left","neutral","right","positive","negative","none","ignored","StyledRadio","props","classes","Radio","className","disableRipple","clsx","min","max","formatDate","dateInput","Date","toLocaleDateString","year","month","day","User","createdAt","user","lastSeen","lastSeenDuration","Duration","toString","twitterAge","twitterAgeString","tweetRate","days","Math","ceil","statusesCount","useState","userSearch","setUserSearch","openUserTwitterPage","console","log","window","open","screenName","getCategoryClass","category","AppBar","Toolbar","variant","InputBase","placeholder","input","inputProps","value","onKeyPress","event","charCode","handleSearchNode","onChange","target","Typography","ButtonGroup","size","aria-label","Button","onClick","handleNodeChange","name","stats","uncategorized","all","mismatched","Grid","item","xs","Card","CardActions","align","toUpperCase","categoryAuto","CardContent","CardMedia","src","profileImageUrl","component","onError","e","bannerImageUrl","description","dataSource","sourceType","options","TableContainer","Table","TableHead","TableBody","nodeId","location","followersCount","friendsCount","mentions","rate","toFixed","FormGroup","FormControl","RadioGroup","FormControlLabel","control","label","Checkbox","checked","following","categoryVerified","isBot","marginLeft","HashtagView","tweets","hashtag","hashtagSearch","setHashtagSearch","statusHashtag","undefined","statuses","map","tweet","tweetId","id_str","manual","labelPlacement","DEFAULT_AUTH_URL","VIEWER_ID","floor","random","DEFAULT_VIEWER_OBJ","userId","viewerId","type","namespace","timeStamp","now","tags","mode","entity","viewerObj","socket","socketClient","tabs","toolBar","shadows","progress","serverStatus","twitterAuth","buttonLogin","App","history","useHistory","useLocation","useParams","slug","tabValue","setTabValue","pathname","historyArray","setHistoryArray","historyArrayRef","useRef","historyArrayIndex","setHistoryArrayIndex","historyArrayIndexRef","twitterAuthenticated","setTwitterAuthenticated","twitterAuthenticatedRef","twitterAuthenticatedUser","setTwitterAuthenticatedUser","twitterAuthenticatedUserRef","nodesPerMin","maxNodesPerMin","maxNodesPerMinTime","bestNetwork","networkId","auto","status","setStatus","statusRef","setStatusHashtag","statusHashtagRef","search_metadata","setTweets","tweetsRef","setProgress","displayNodeType","setDisplayNodeType","displayNodeTypeRef","currentUsers","setUsers","currentUsersRef","age","rateMax","tweetsPerDay","categoryVerfied","currentUser","setCurrentUser","currentUserRef","text","currentHashtag","setCurrentHashtag","currentHashtagRef","useEffect","tempHistoryArray","current","length","push","currentNode","searchString","searchTerm","emit","handleLoginLogout","useCallback","preventDefault","warn","node","persist","searchFilter","eventName","currentTarget","eventValue","eventChecked","code","pop","nextRoute","split","shiftKey","nodeType","usersAvailable","tempUsers","shift","currentUsersAvailable","alert","nodeValid","endsWith","on","id","password","response","debug","nodes","users","searchNode","slice","action","data","userObj","startsWith","results","endCursor","disconnect","useHotkeys","Container","Tabs","newValue","Tab","CircularProgress","Link","href","rel","UserView","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","path","document","getElementById"],"mappings":"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","file":"static/js/main.338b2ef1.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Timeline } from 'react-twitter-widgets'\n\nimport Duration from 'duration';\nimport clsx from 'clsx';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Card from '@material-ui/core/Card';\n// import CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n// import CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\n// import CheckBoxIcon from '@material-ui/icons/CheckBox';\n// import CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\n// import FormLabel from '@material-ui/core/FormLabel';\nimport Grid from '@material-ui/core/Grid';\n// import IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\n// import MenuIcon from '@material-ui/icons/Menu';\n// import Paper from '@material-ui/core/Paper';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n\nconst fontSizeCategory = '0.7rem';\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    // backgroundColor: theme.palette.common.black,\n    // color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 12,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    // '&:nth-of-type(odd)': {\n    //   backgroundColor: theme.palette.action.hover,\n    // },\n  },\n}))(TableRow);\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 2,\n  },\n  appBar: {\n    backgroundColor: 'white',\n    marginBottom: theme.spacing(1),\n  },\n  grid: {\n    display: 'flex',\n    alignItems: 'stretch',\n  },\n  gridItem: {\n    margin: theme.spacing(1),\n  },  \n  card: {\n    maxWidth: \"90%\",\n    alignSelf: \"center\",\n  },\n  profileImage: {\n    marginBottom: theme.spacing(1),\n  },\n  bannerImage: {\n    marginBottom: theme.spacing(1),\n  },\n  icon: {\n    borderRadius: '50%',\n    width: 16,\n    height: 16,\n    boxShadow: 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\n    backgroundColor: '#f5f8fa',\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\n    '$root.Mui-focusVisible &': {\n      outline: '2px auto rgba(19,124,189,.6)',\n      outlineOffset: 2,\n    },\n    'input:hover ~ &': {\n      backgroundColor: '#ebf1f5',\n    },\n    'input:disabled ~ &': {\n      boxShadow: 'none',\n      background: 'rgba(206,217,224,.5)',\n    },\n  },\n  checkedIcon: {\n    backgroundColor: '#137cbd',\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\n    '&:before': {\n      display: 'block',\n      width: 16,\n      height: 16,\n      backgroundImage: 'radial-gradient(#fff,#fff 28%,transparent 32%)',\n      content: '\"\"',\n    },\n    'input:hover ~ &': {\n      backgroundColor: '#106ba3',\n    },\n  },\n  radioGroupCategory: {\n    fontSize: '0.5rem',\n    backgroundColor: '#ddeeee',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(3),\n    marginBottom: theme.spacing(1),\n  },\n  radioButtonLabel: {\n    fontSize: '0.9rem'\n  },\n  radioButton: {\n  },\n  table: {\n    borderRadius: theme.shape.borderRadius,\n  },\n  tableHead: {\n    backgroundColor: '#ddeeee',\n  },\n  tableCell: {\n  },\n  tableCategorized: {\n    borderRadius: theme.shape.borderRadius,\n    borderColor: 'red',\n    backgroundColor: '#ddeeee',\n  },\n  tableRowGreen: {\n    backgroundColor: 'lightgreen',\n  },\n  statusBar: {\n    raised: false,\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    // flexGrow: 1,\n    color: 'blue',\n  },\n  search: {\n    // flexGrow: 1,\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: \"white\",\n    '&:hover': {\n      backgroundColor: \"#ddeeee\",\n    },\n    marginRight: theme.spacing(1),\n    // marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      // marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'primary',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n\n  buttonGroupLabel: {\n    color: 'blue',\n    marginRight: theme.spacing(1),\n  },\n  buttonAll: {\n    color: 'black',\n  },\n  buttonLeft: {\n    color: 'blue',\n  },\n  buttonNeutral: {\n    color: 'gray',\n  },\n  buttonRight: {\n    color: 'red',\n  },\n  buttonMismatch: {\n    margin: 5\n  },\n\n  autoCategory:{\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n  },\n\n  left: {\n    width: '50%',\n    fontSize: fontSizeCategory,\n    backgroundColor: 'blue',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n    marginBottom: theme.spacing(1),\n  },\n  neutral: {\n    width: '50%',\n    fontSize: fontSizeCategory,\n    backgroundColor: 'gray',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n    marginBottom: theme.spacing(1),\n  },\n  right: {\n    width: '50%',\n    fontSize: fontSizeCategory,\n    backgroundColor: 'red',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n    marginBottom: theme.spacing(1),\n  },\n  positive: {\n    width: '50%',\n    fontSize: fontSizeCategory,\n    backgroundColor: 'green',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n    marginBottom: theme.spacing(1),\n  },\n  negative: {\n    width: '50%',\n    fontSize: fontSizeCategory,\n    backgroundColor: 'red',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n    marginBottom: theme.spacing(1),\n  },\n  none: {\n    width: '50%',\n    fontSize: fontSizeCategory,\n    backgroundColor: 'lightgray',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n    marginBottom: theme.spacing(1),\n  },\n  ignored: {\n    width: '50%',\n    fontSize: fontSizeCategory,\n    backgroundColor: 'yellow',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'black',\n    marginBottom: theme.spacing(1),\n  },\n\n}));\n\nfunction StyledRadio(props) {\n  const classes = useStyles();\n  return (\n    <Radio\n      className={classes.radioButton}\n      disableRipple\n      color=\"default\"\n      checkedIcon={<span className={clsx(classes.icon, classes.checkedIcon)} />}\n      icon={<span className={classes.icon} />}\n      {...props}\n    />\n  );\n}\n\n\nconst formatDate = (dateInput) => {\n  return new Date(dateInput).toLocaleDateString(\n    'en-gb',\n    {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }\n  );\n}\n\nconst defaultProfileImage = \"logo192.png\"\nconst defaultBannerImage = \"logo192.png\"\n\nconst User = (props) => {\n\n  const classes = useStyles();\n\n  const createdAt = formatDate(props.user.createdAt)\n  const lastSeen = formatDate(props.user.lastSeen)\n \n  const lastSeenDuration = new Duration(new Date(props.user.lastSeen)).toString(1, 4)\n  const twitterAge = props.user.createdAt ? new Duration(new Date(props.user.createdAt)) : new Duration(new Date())\n  const twitterAgeString = twitterAge.toString(1, 4)\n\n  const tweetRate = twitterAge.days > 0 ? Math.ceil(props.user.statusesCount/twitterAge.days) : 0;\n\n  const [userSearch, setUserSearch] = useState(\"\");\n\n  // useEffect(() => {\n  //   setUserSearch(props.user.screenName)\n  // }, [props])\n  \n  const handleChangeSearch = (event) => {\n    console.log(\"handleChangeSearch: \" + event.target.value)\n    setUserSearch(event.target.value);\n  }\n\n  const handleKeyPress = (event) => {\n    if (event.charCode === 13) { // enter key pressed\n      console.log(\"ENTER\")\n      props.handleSearchNode(userSearch)\n    }\n  }\n\n  const openUserTwitterPage = () => {\n    console.log(\"open twitter\")\n    window.open(`http://twitter.com/${props.user.screenName || null}`, \"_blank\") //to open new page\n  }\n\n  const getCategoryClass = (category) => {\n    switch (category){\n      case \"left\":\n      case \"neutral\":\n      case \"right\":\n      case \"positive\":\n      case \"negative\":\n      case \"ignored\":\n        return classes[category]\n      default:\n        return classes.none\n    }\n  }\n\n  return (\n    <>\n      <AppBar  className={classes.appBar} position=\"static\">\n        <Toolbar variant=\"dense\">\n\n          {/* <Typography variant=\"h6\" className={classes.title}>\n            User\n          </Typography> */}\n\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon color=\"primary\"/>\n            </div>\n            <InputBase\n              placeholder=\"search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n              value={userSearch}\n              onKeyPress={handleKeyPress}\n              onChange={handleChangeSearch}\n            />\n          </div>\n\n          <Typography className={classes.buttonGroupLabel}>GET UNCAT</Typography>   \n\n          <ButtonGroup color=\"primary\" size=\"small\" aria-label=\"small button group\">\n            <Button onClick={(event) => props.handleNodeChange(event, props.user)} name=\"all\" >ALL: {props.stats.user.uncategorized.all}</Button>\n            <Button onClick={(event) => props.handleNodeChange(event, props.user)} name=\"left\" >LEFT: {props.stats.user.uncategorized.left}</Button>\n            <Button onClick={(event) => props.handleNodeChange(event, props.user)} name=\"neutral\" >NEUTRAL: {props.stats.user.uncategorized.neutral}</Button>\n            <Button onClick={(event) => props.handleNodeChange(event, props.user)} name=\"right\" >RIGHT: {props.stats.user.uncategorized.right}</Button>\n          </ButtonGroup>\n\n          <ButtonGroup color=\"primary\" size=\"small\" aria-label=\"small button group\">\n            <Button \n              className={classes.buttonMismatch}\n              // variant=\"contained\" \n              color=\"primary\" \n              size=\"small\" \n              onClick={(event) => props.handleNodeChange(event, props.user)} \n              name=\"mismatch\" \n            >\n              MISMATCH {props.stats.user.mismatched}\n            </Button>\n          </ButtonGroup>\n\n        </Toolbar>\n      </AppBar>\n      \n      <Grid className={classes.grid}>\n          <Grid item className={classes.gridItem} xs={3}>\n            <Card className={classes.card} variant=\"outlined\">\n              <CardActions onClick={openUserTwitterPage}>\n                  <Typography className={props.user.ignored ? classes[\"ignored\"] : getCategoryClass(props.user.category)} align=\"center\">\n                    {props.user.ignored ? \"IGNORED\" : props.user.category.toUpperCase() || \"MANUAL: NONE\"}\n                  </Typography>\n                  <Typography className={getCategoryClass(props.user.categoryAuto)} align=\"center\">\n                    AUTO: {props.user.categoryAuto.toUpperCase() || \"NONE\"}\n                  </Typography>\n              </CardActions>\n              <CardContent onClick={openUserTwitterPage}>\n                  <Typography variant=\"h6\">{props.user.name}</Typography>\n                  <Typography>@{props.user.screenName}</Typography>\n              </CardContent>\n              <CardMedia\n                className={classes.profileImage}\n                src={props.user.profileImageUrl || defaultProfileImage}\n                component=\"img\"\n                onError={e => {}}              \n              />\n              <CardMedia \n                className={classes.bannerImage} \n                src={props.user.bannerImageUrl || defaultBannerImage} \n                component=\"img\"\n                onError={e => {}}              \n              />\n              <CardContent>\n                <Typography>\n                  {props.user.description}\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item className={classes.gridItem} xs={3}>\n            <Timeline\n              dataSource={{\n                sourceType: 'profile',\n                screenName: props.user.screenName\n              }}\n              options={{width: '100%', height: '640'}}\n            />\n          </Grid>\n          <Grid item className={classes.gridItem} xs={3}>\n            <TableContainer>\n              <Table className={classes.table} size=\"small\">\n                <TableHead>\n                  <StyledTableRow className={classes.tableHead}>\n                    <StyledTableCell>@{props.user.screenName}</StyledTableCell><StyledTableCell align=\"right\"></StyledTableCell>\n                  </StyledTableRow>\n                </TableHead>\n                <TableBody>\n                  <StyledTableRow>\n                    <StyledTableCell>Twitter ID</StyledTableCell><StyledTableCell align=\"right\">{props.user.nodeId}</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow>\n                    <StyledTableCell>Location</StyledTableCell><StyledTableCell align=\"right\">{props.user.location}</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow>\n                    <StyledTableCell>Created</StyledTableCell><StyledTableCell align=\"right\">{createdAt}</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow>\n                    <StyledTableCell>Twitter age</StyledTableCell><StyledTableCell align=\"right\">{twitterAgeString}</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow className={props.user.followersCount > 5000 ? classes.tableRowGreen : null}>\n                    <StyledTableCell>Followers</StyledTableCell><StyledTableCell align=\"right\">{props.user.followersCount}</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow>\n                    <StyledTableCell>Friends</StyledTableCell><StyledTableCell align=\"right\">{props.user.friendsCount}</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow>\n                    <StyledTableCell>Tweets</StyledTableCell><StyledTableCell align=\"right\">{props.user.statusesCount}</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow>\n                    <StyledTableCell>Tweets/day</StyledTableCell><StyledTableCell align=\"right\">{tweetRate}</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow>\n                    <StyledTableCell>Active</StyledTableCell><StyledTableCell align=\"right\">{lastSeen} ({lastSeenDuration} ago)</StyledTableCell>\n                  </StyledTableRow>\n                  {/* <StyledTableRow>\n                    <StyledTableCell>Last Active</StyledTableCell><StyledTableCell align=\"right\">{lastSeenDuration} ago</StyledTableCell>\n                  </StyledTableRow> */}\n                  <StyledTableRow>\n                    <StyledTableCell>Mentions</StyledTableCell><StyledTableCell align=\"right\">{props.user.mentions}</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow>\n                    <StyledTableCell>Mentions/hour</StyledTableCell><StyledTableCell align=\"right\">{props.user.rate ? 60*props.user.rate.toFixed(2) : 0}</StyledTableCell>\n                  </StyledTableRow>\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Grid>\n          {/* <Grid item className={classes.gridItem} xs={2}>\n            <TableContainer>\n              <Table size=\"small\">\n                <TableHead>\n                  <StyledTableRow className={classes.tableHead}>\n                    <StyledTableCell colSpan={3}>ALL USERS</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow>\n                    <StyledTableCell>CAT</StyledTableCell>\n                    <StyledTableCell align=\"right\">MAN</StyledTableCell>\n                    <StyledTableCell align=\"right\">AUTO</StyledTableCell>\n                  </StyledTableRow>\n                </TableHead>\n                <TableBody>\n                  <StyledTableRow > \n                    <StyledTableCell>LEFT</StyledTableCell>\n                    <StyledTableCell align=\"right\">{props.stats.user.manual.left}</StyledTableCell>\n                    <StyledTableCell align=\"right\">{props.stats.user.auto.left}</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow>\n                    <StyledTableCell >RIGHT</StyledTableCell>\n                    <StyledTableCell align=\"right\">{props.stats.user.manual.right}</StyledTableCell>\n                    <StyledTableCell align=\"right\">{props.stats.user.auto.right}</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow>\n                    <StyledTableCell >NEUTRAL</StyledTableCell>\n                    <StyledTableCell align=\"right\">{props.stats.user.manual.neutral}</StyledTableCell>\n                    <StyledTableCell align=\"right\">{props.stats.user.auto.neutral}</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow>\n                    <StyledTableCell >POSITIVE</StyledTableCell>\n                    <StyledTableCell align=\"right\">{props.stats.user.manual.positive}</StyledTableCell>\n                    <StyledTableCell align=\"right\">{props.stats.user.auto.positive}</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow>\n                    <StyledTableCell >NEGATIVE</StyledTableCell>\n                    <StyledTableCell align=\"right\">{props.stats.user.manual.negative}</StyledTableCell>\n                    <StyledTableCell align=\"right\">{props.stats.user.auto.negative}</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow>\n                    <StyledTableCell >NONE</StyledTableCell>\n                    <StyledTableCell align=\"right\">{props.stats.user.manual.none}</StyledTableCell>\n                    <StyledTableCell align=\"right\">{props.stats.user.auto.none}</StyledTableCell>\n                  </StyledTableRow>\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Grid> */}\n          <Grid item className={classes.gridItem} xs={2}>\n            <FormGroup>\n              <FormControl component=\"fieldset\">\n                <RadioGroup \n                  className={classes.radioGroupCategory}\n                  aria-label=\"category\" \n                  name=\"category\" \n                  // size=\"small\"\n                  value={props.user.category || \"none\"} \n                  onChange={(event) => props.handleNodeChange(event, props.user)}\n                >\n                  <FormControlLabel value=\"left\" control={<StyledRadio/>} label={<Typography className={classes.radioButtonLabel}>LEFT</Typography>}/>\n                  <FormControlLabel value=\"right\" control={<StyledRadio/>} label={<Typography className={classes.radioButtonLabel}>RIGHT</Typography>} />\n                  <FormControlLabel value=\"neutral\" control={<StyledRadio/>} label={<Typography className={classes.radioButtonLabel}>NEUTRAL</Typography>} />\n                  <FormControlLabel value=\"positive\" control={<StyledRadio/>} label={<Typography className={classes.radioButtonLabel}>POSITIVE</Typography>} />\n                  <FormControlLabel value=\"negative\" control={<StyledRadio/>} label={<Typography className={classes.radioButtonLabel}>NEGATIVE</Typography>} />\n                  <FormControlLabel value=\"none\" control={<StyledRadio/>} label={<Typography className={classes.radioButtonLabel}>NONE</Typography>} />\n                </RadioGroup>\n              </FormControl>\n\n              <FormControl \n                component=\"fieldset\"\n                className={classes.radioGroupCategory}\n                size=\"small\"\n              >\n                <FormControlLabel\n                  control={<Checkbox size=\"small\" checked={props.user.following || false} onChange={(event) => props.handleNodeChange(event, props.user)} name=\"following\" />}\n                  label={<Typography className={classes.radioButtonLabel}>FOLLOWING</Typography>}\n                />\n                <FormControlLabel\n                  control={<Checkbox size=\"small\" checked={props.user.categoryVerified || false} onChange={(event) => props.handleNodeChange(event, props.user)} name=\"catVerified\" />}\n                  label={<Typography className={classes.radioButtonLabel}>VERIFIED</Typography>}\n                />\n                <FormControlLabel\n                  control={<Checkbox size=\"small\" checked={props.user.ignored || false} onChange={(event) => props.handleNodeChange(event, props.user)} name=\"ignored\" />}\n                  label={<Typography className={classes.radioButtonLabel}>IGNORED</Typography>}\n                />\n                <FormControlLabel\n                  control={<Checkbox size=\"small\" checked={props.user.isBot || false} onChange={(event) => props.handleNodeChange(event, props.user)} name=\"isBot\" />}\n                  label={<Typography className={classes.radioButtonLabel}>BOT</Typography>}\n                />\n              </FormControl>\n            </FormGroup>\n          </Grid>\n        </Grid>\n    </>\n  );\n}\n\nexport default User;\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\n// import useSocket from 'use-socket.io-client';\n// import { useImmer } from 'use-immer';\nimport { useHistory, useLocation, useParams } from \"react-router-dom\";\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport socketClient from \"socket.io-client\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Container from '@material-ui/core/Container';\nimport AppBar from '@material-ui/core/AppBar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\n// import ButtonGroup from '@material-ui/core/ButtonGroup';\n// import InputBase from '@material-ui/core/InputBase';\n// import SearchIcon from '@material-ui/icons/Search';\nimport Link from '@material-ui/core/Link';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport './App.css';\nimport UserView from './UserView.js';\nimport HashtagView from './HashtagView.js';\n// import { ButtonGroup } from '@material-ui/core';\n\n// const ENDPOINT = \"http://mbp3:9997/view\";\nconst ENDPOINT = \"https://word.threeceelabs.com/view\";\nconst DEFAULT_AUTH_URL = \"http://word.threeceelabs.com/auth/twitter\";\n\nconst randomIntFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst randomId = randomIntFromInterval(1000000000, 9999999999);\nconst VIEWER_ID = \"viewer_\" + randomId;\n\nconst DEFAULT_VIEWER_OBJ = {\n  nodeId: VIEWER_ID,\n  userId: VIEWER_ID,\n  viewerId: VIEWER_ID,\n  screenName: VIEWER_ID,\n  type: \"viewer\",\n  namespace: \"view\",\n  timeStamp: Date.now(),\n  tags: {},\n};\n\nDEFAULT_VIEWER_OBJ.tags.type = \"viewer\";\n\nDEFAULT_VIEWER_OBJ.tags.mode = \"stream\";\nDEFAULT_VIEWER_OBJ.tags.entity = VIEWER_ID;\n\nconst viewerObj = DEFAULT_VIEWER_OBJ;\n\nconsole.log({viewerObj});\n\nlet socket = socketClient(ENDPOINT);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    flexGrow: 1,\n    boxShadow: 0,\n  },\n  appBar: {\n    backgroundColor: 'black',\n    marginBottom: theme.spacing(2),\n    boxShadow: 0,\n  },\n  tabs: {\n    flexGrow: 1,\n    color: 'white',\n  },\n  toolBar: {\n    shadows: 0,\n  },\n  title: {\n    // flexGrow: 1,\n    color: 'white',\n    marginRight: theme.spacing(2),\n  },\n  progress: {\n    // flexGrow: 1,\n    color: 'white',\n    marginRight: theme.spacing(2),\n  },\n  serverStatus: {\n    // flexGrow: 1,\n    color: 'gray',\n    padding: theme.spacing(1),\n  },\n  twitterAuth: {\n    // backgroundColor: 'black',\n    color: \"green\",\n    padding: theme.spacing(1),\n    marginRight: theme.spacing(2),\n  },  \n  buttonLogin: {\n    backgroundColor: \"green\",\n    marginRight: theme.spacing(2),\n  },\n  statusBar: {\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: \"white\",\n    '&:hover': {\n      backgroundColor: \"lightgray\",\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'primary',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n\n}));\n\nconst App = () => {\n\n  const history = useHistory();\n  let location = useLocation()\n  let { slug } = useParams();\n\n  // console.log({slug})\n\n  const classes = useStyles();\n\n  const defaultStatus = {\n    nodesPerMin: 0, \n    maxNodesPerMin: 0,\n    maxNodesPerMinTime: 0,\n    bestNetwork: {\n      networkId: \"\"\n    },\n    user: {\n      uncategorized: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        positive: 0,\n        negative: 0,\n        all: 0,\n        mismatched: 0\n      },\n      manual: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        positive: 0,\n        negative: 0,\n      },\n      auto: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        positive: 0,\n        negative: 0,\n      }\n    },\n    hashtag: {\n      uncategorized: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        positive: 0,\n        negative: 0,\n        all: 0,\n        mismatched: 0\n      },\n      manual: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        positive: 0,\n        negative: 0,\n      },\n      auto: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        positive: 0,\n        negative: 0,\n      }\n    }\n  }\n\n  const defaultUser = {\n\n    nodeId: null, \n    screenName: \"threecee\",\n    name: \"\",\n    location: \"\",\n    description: \"\",\n    profileImageUrl: \"https://pbs.twimg.com/profile_images/1205585278565527559/GrTkBpzl.jpg\",\n    bannerImage: \"\",\n    createdAt: null,\n    status: {},\n    followersCount: 0,\n    friendsCount: 0,\n    tweets: 0,\n\n    age: 0,\n    mentions: 0,\n    rate: 0,\n    rateMax: 0,\n    tweetsPerDay: 0,\n\n    lastSeen: null,\n    isBot: false,\n    following: false,\n    categoryVerfied: false,\n    category: \"none\",\n    categoryAuto: \"none\",\n  }\n\n  const defaultHashtag = {\n    nodeId: \"blacklivesmatter\",\n    text: \"BlackLivesMatter\",\n    categoryAuto: \"none\",\n    category: \"left\",\n    createdAt: 0,\n    lastSeen: 0,\n    age: 0,\n    mentions: 0,\n    rate: 0,\n    rateMax: 0,\n  }\n\n  const defaultTweets = {\n    search_metadata: {},\n    statuses: []\n  }\n\n  const [tabValue, setTabValue] = useState(0);\n\n  const [historyArray, setHistoryArray] = useState([location.pathname])\n  const historyArrayRef = useRef(historyArray)\n\n  const [historyArrayIndex, setHistoryArrayIndex] = useState(0)\n  const historyArrayIndexRef = useRef(historyArrayIndex)\n\n  const [twitterAuthenticated, setTwitterAuthenticated] = useState(false);\n  const twitterAuthenticatedRef = useRef(twitterAuthenticated)\n\n  const [twitterAuthenticatedUser, setTwitterAuthenticatedUser  ] = useState(\"\");\n  const twitterAuthenticatedUserRef = useRef(twitterAuthenticatedUser)\n\n  const [status, setStatus] = useState(defaultStatus);\n  const statusRef = useRef(status)\n\n  const [statusHashtag, setStatusHashtag] = useState(false);\n  const statusHashtagRef = useRef(statusHashtag)\n\n  const [tweets, setTweets] = useState(defaultTweets);\n  const tweetsRef = useRef(tweets)\n\n  const [progress, setProgress] = useState(\"loading ...\");\n\n  const [displayNodeType, setDisplayNodeType] = useState(\"user\");\n  const displayNodeTypeRef = useRef(displayNodeType)\n\n  const [currentUsers, setUsers] = useState([]);\n  const currentUsersRef = useRef(currentUsers)\n\n  const [currentUser, setCurrentUser] = useState(defaultUser);\n  const currentUserRef = useRef(currentUser)\n\n  const [currentHashtag, setCurrentHashtag] = useState(defaultHashtag);\n  const currentHashtagRef = useRef(currentHashtag)\n  \n  useEffect(() => {\n    const tempHistoryArray = [...historyArrayRef.current]\n    if (tempHistoryArray.length > 0 && location.pathname !== tempHistoryArray[0]){\n      tempHistoryArray.push(location.pathname)\n      setHistoryArray(() => [...tempHistoryArray])\n      setHistoryArrayIndex(tempHistoryArray.length-1);\n      historyArrayRef.current = tempHistoryArray\n    }\n  }, [location.pathname])\n  \n  useEffect(() => { \n    twitterAuthenticatedUserRef.current = twitterAuthenticatedUser\n  }, [twitterAuthenticatedUser])\n  \n  useEffect(() => { \n    twitterAuthenticatedRef.current = twitterAuthenticated \n  }, [twitterAuthenticated])\n  \n  useEffect(() => { \n    displayNodeTypeRef.current = displayNodeType \n  }, [displayNodeType])\n  \n  useEffect(() => { \n    currentUsersRef.current = currentUsers \n  }, [currentUsers])\n  \n  useEffect(() => { \n    currentUserRef.current = currentUser\n  }, [currentUser])\n  \n  useEffect(() => { \n    currentHashtagRef.current = currentHashtag \n  }, [currentHashtag])\n  \n  useEffect(() => { \n    statusHashtagRef.current = statusHashtag\n  }, [statusHashtag])\n  \n  useEffect(() => { \n    statusRef.current = status \n  }, [status])\n  \n  useEffect(() => { \n    tweetsRef.current = tweets \n  }, [tweets])\n  \n  const currentNode = displayNodeTypeRef.current === \"user\" ? currentUserRef.current : currentHashtagRef.current;\n  // const currentNodeRouteSlug = displayNodeTypeRef.current === \"user\" ? currentUserRef.current.screenName : currentHashtagRef.current.nodeId;\n\n  // history.replace(`/categorize/${displayNodeTypeRef.current}/${currentNodeRouteSlug}`)\n\n  const handleTabChange = (event, newValue) => {\n    event.preventDefault()\n    console.log({newValue})\n    setDisplayNodeType(newValue === 0 ? \"user\" : \"hashtag\")\n    setTabValue(newValue);\n  }\n\n  const handleSearchNode = (searchString) => {\n    setProgress(progress => \"searchNode\");\n    const searchTerm = displayNodeType === \"user\" ? \"@\" + searchString : \"#\" + searchString\n    console.log(\"SEARCH TERM: \" + searchTerm)\n    socket.emit(\"TWITTER_SEARCH_NODE\", searchTerm)\n  }\n\n  const handleLoginLogout = useCallback((event) => {\n\n    event.preventDefault()\n    setProgress(progress => \"loginLogout\");\n\n    if (twitterAuthenticatedRef.current){\n      console.warn(\"LOGGING OUT\");\n      socket.emit(\"logout\", viewerObj);\n      setTwitterAuthenticated(false)\n      setTwitterAuthenticatedUser(\"\")\n      setProgress(progress => \"idle\");\n    }\n    else{\n      console.warn(\n        \"LOGIN: AUTH: \" +\n          twitterAuthenticatedRef.current +\n          \" | URL: \" +\n          DEFAULT_AUTH_URL\n      );\n      window.open(DEFAULT_AUTH_URL, \"LOGIN\", \"_new\");\n      socket.emit(\"login\", viewerObj);\n    }\n  }, []);\n\n  const currentUsersAvailable = (eventName) => {\n    if (currentUsersRef.current && currentUsersRef.current.length > 0){\n      const tempUsers = [...currentUsersRef.current]\n      const user = tempUsers.shift()\n      setUsers(tempUsers)\n      console.log(\"USING CURRENT USERS | CURRENT USERS: \" + tempUsers.length + \" | @\" + user.screenName)\n      setCurrentUser(user);\n      setProgress(\"idle\");\n      return tempUsers.length;\n    }\n    return 0;\n  }\n\n  const handleNodeChange = useCallback((event, node) => {\n\n    if (event.preventDefault !== undefined) { \n      event.preventDefault() \n    }\n\n    if (displayNodeTypeRef.current === \"user\"){\n      console.log(\"handleNodeChange | user: @\" + node.screenName)\n    }\n    else{\n      console.log(\"handleNodeChange | hashtag: #\" + node.nodeId)\n    }\n\n    if (event.persist !== undefined) { \n      event.persist() \n    }\n\n    let eventName = event.currentTarget.name || \"nop\";\n    let eventValue = event.currentTarget.value;\n    let eventChecked = event.currentTarget.checked;\n\n    if (event.currentTarget.name === undefined && event.code){\n\n      switch (event.code){\n\n        case \"ArrowRight\":\n        case \"ArrowLeft\":\n          console.log(\"location.pathname: \" + location.pathname)\n          console.log({historyArrayRef})\n          console.log({historyArrayIndexRef})\n          eventName = \"history\"\n          if (event.code === \"ArrrowRight\"){\n          }\n          if (event.code === \"ArrowLeft\"){ \n            if (historyArrayRef.current.length > 0){\n              historyArrayRef.current.pop();\n              const nextRoute = historyArrayRef.current.pop();\n              history.push(nextRoute)\n              eventValue = nextRoute.split(\"/\").pop()\n            }\n          }\n          break;\n\n        case \"KeyA\":\n          eventName = \"all\"\n          break;\n\n        case \"KeyD\":\n        case \"KeyL\":\n          if (event.shiftKey){\n            eventName = \"category\"\n            eventValue = \"left\"\n          }\n          else{\n            eventName = \"left\"\n          }\n          break;\n\n        case \"KeyN\":\n          if (event.shiftKey){\n            eventName = \"category\"\n            eventValue = \"neutral\"\n          }\n          else{\n            eventName = \"neutral\"\n          }\n          break;\n\n        case \"KeyR\":\n          if (event.shiftKey){\n            eventName = \"category\"\n            eventValue = \"right\"\n          }\n          else{\n            eventName = \"right\"\n          }\n          break;\n\n        case \"KeyHyphen\":\n          if (event.shiftKey){\n            eventName = \"category\"\n            eventValue = \"negative\"\n          }\n          else{\n            eventName = \"negative\"\n          }\n          break;\n\n        case \"KeyEquals\":\n          if (event.shiftKey){\n            eventName = \"category\"\n            eventValue = \"positive\"\n          }\n          else{\n            eventName = \"positive\"\n          }\n          break;\n\n        case \"KeyI\":\n        case \"KeyX\":\n          if (event.shiftKey){\n            eventName = \"ignored\"\n            eventChecked = !node.ignored\n          }\n          break;\n\n        case \"KeyV\":\n          if (event.shiftKey){\n            eventName = \"catVerified\"\n            eventChecked = !node.categoryVerified\n          }\n          break;\n\n        case \"KeyB\":\n          if (event.shiftKey){\n            eventName = \"isBot\"\n            eventChecked = !node.isBot\n          }\n          break;\n\n        default:\n      }\n    }\n\n    let searchFilter;\n\n    if (node.nodeType === \"user\"){\n      searchFilter = \"@?\";\n      console.log(\"handleNodeChange | @\" + node.screenName + \" | name: \" + eventName + \" | value: \" + eventValue)\n    }\n    else{\n      searchFilter = \"#?\";\n      console.log(\"handleNodeChange | #\" + node.nodeId + \" | name: \" + eventName + \" | value: \" + eventValue)\n    }\n\n    setProgress(eventName);\n\n    let usersAvailable = 0;\n\n    switch (eventName){\n\n      case \"nop\":\n        break;\n\n      case \"history\":\n        if (node.nodeType === \"user\"){\n          console.log(\"handleNodeChange | history | @\" + node.screenName + \" | name: \" + eventName + \" | value: \" + eventValue)\n          socket.emit(\"TWITTER_SEARCH_NODE\", \"@\" + eventValue);\n        }\n        else{\n          console.log(\"handleNodeChange | history | #\" + node.nodeId + \" | name: \" + eventName + \" | value: \" + eventValue)\n          socket.emit(\"TWITTER_SEARCH_NODE\", \"#\" + eventValue);\n        }\n        break;\n\n      case \"all\":\n      case \"left\":\n      case \"neutral\":\n      case \"right\":\n      case \"positive\":\n      case \"negative\":\n\n        searchFilter += eventName\n\n        usersAvailable = currentUsersAvailable(eventName)\n\n        // if (eventName !== \"all\" || usersAvailable < 3){\n        if (usersAvailable < 3){\n          console.log(\"GET MORE USERS | usersAvailable: \" + usersAvailable)\n          socket.emit(\"TWITTER_SEARCH_NODE\", searchFilter);\n        }\n\n        break\n\n      case \"mismatch\":\n        if (node.nodeType === \"user\"){\n          socket.emit(\"TWITTER_SEARCH_NODE\", \"@?mm\");\n        }\n        break\n\n      case \"category\":\n        if (twitterAuthenticatedRef.current){\n          socket.emit(\"TWITTER_CATEGORIZE_NODE\", {\n            category: eventValue,\n            following: true,\n            node: node,\n          });\n        }\n        else{\n          alert(\"NOT AUTHENTICATED\")\n          return;\n          // setProgress(\"not authenticated\")\n        }\n        break\n\n      case \"isBot\":\n        if (node.nodeType === \"user\"){\n          if (eventChecked){\n            socket.emit(\"TWITTER_BOT\", node);\n          }\n          else{\n            socket.emit(\"TWITTER_UNBOT\", node);\n          }\n        }\n        break\n\n      case \"following\":\n        if (node.nodeType === \"user\"){\n          if (eventChecked){\n            socket.emit(\"TWITTER_FOLLOW\", node);\n          }\n          else{\n            socket.emit(\"TWITTER_UNFOLLOW\", node);\n          }\n        }\n        break\n\n      case \"catVerified\":\n        if (node.nodeType === \"user\"){\n          if (eventChecked){\n            socket.emit(\"TWITTER_CATEGORY_VERIFIED\", node);\n          }\n          else{\n            socket.emit(\"TWITTER_CATEGORY_UNVERIFIED\", node);\n          }\n        }\n        break\n\n      case \"ignored\":\n        if (eventChecked){\n          socket.emit(\"TWITTER_IGNORE\", node);\n        }\n        else{\n          socket.emit(\"TWITTER_UNIGNORE\", node);\n        }\n        break\n\n      default:\n        console.log(\"handleNodeChange: UNKNOWN NAME: \" + eventName + \" | VALUE: \" + eventValue)\n        console.log({event})\n    }\n    \n  }, [history, location])\n\n  const nodeValid = (node) => {\n\n    if (node === undefined) return false\n    if (node.nodeId === undefined) return false\n\n    if (node.nodeType === \"user\"){\n      if (node.screenName === undefined) return false\n    } \n\n    return true\n  }\n\n  useEffect(() => {\n    if (displayNodeTypeRef.current === \"user\"){\n      console.log({history})\n      console.log(\"loc:  \" + location.pathname)\n      // if (!history.location.pathname.endsWith(\"/user/\" + currentUserRef.current.screenName)){\n      if (!location.pathname.endsWith(\"/user/\" + currentUserRef.current.screenName)){\n        console.log(\"history push: /categorize/user/\" + currentUserRef.current.screenName)\n        history.push(\"/categorize/user/\" + currentUserRef.current.screenName)\n      }\n    }\n  }, [history, currentUser, location.pathname])\n\n  useEffect(() => {\n    if (displayNodeTypeRef.current === \"hashtag\"){\n      console.log(\"history loc:  \" + history.location.pathname)\n      if (!history.location.pathname.endsWith(\"/hashtag/\" + currentHashtagRef.current.nodeId)){\n        console.log(\"history push: /categorize/hashtag/\" + currentHashtagRef.current.nodeId)\n        history.push(\"/categorize/hashtag/\" + currentHashtagRef.current.nodeId)\n      }\n    }\n  }, [history, currentHashtag, location.pathname])\n\n  useEffect(() => {\n\n    socket.on(\"connect\", ()=>{\n\n      console.log(\"CONNECTED: \" + socket.id)\n\n      setProgress(progress => \"authentication\");\n\n      socket.emit(\"authentication\", {\n        namespace: \"view\",\n        userId: \"test\",\n        password: \"0123456789\",\n      });\n    })\n\n    socket.on(\"TWITTER_USERS\", (response) => {\n\n      console.debug(\"RX TWITTER_USERS\");\n\n      if (response.nodes) {\n        console.debug(\"RX nodes: \" + response.nodes.length);\n        setUsers(users => [...users, ...response.nodes])\n      }\n\n      setProgress(progress => \"idle\");\n      setStatus(status => response.stats)\n    });\n\n    socket.on(\"SET_TWITTER_USER\", (response) => {\n\n      console.debug(\"RX SET_TWITTER_USER\");\n\n      if (response.nodes) {\n        setUsers(users => [...users, ...response.nodes])\n        console.debug(\"RX nodes: \" + response.nodes.length);\n      }\n      \n      if (nodeValid(response.node)) {\n        setCurrentUser(currentUser => response.node)\n        console.debug(\"new: @\" + response.node.screenName);\n      }\n      else{\n\n      }\n\n      setProgress(progress => \"idle\");\n      setStatus(status => response.stats)\n    });\n\n    socket.on(\"TWITTER_SEARCH_NODE_UNKNOWN_MODE\", (response) => {\n      console.debug(\"RX TWITTER_SEARCH_NODE_UNKNOWN_MODE\");\n      console.debug({response})\n      setProgress(progress => \"idle\");\n      setStatus(status => response.stats)\n    })\n\n    socket.on(\"TWITTER_HASHTAG_NOT_FOUND\", (response) => {\n      console.debug(\"RX TWITTER_HASHTAG_NOT_FOUND\");\n      console.debug({response})\n      setStatusHashtag(statusHashtag => \"notFound\")\n      setCurrentHashtag(currentHashtag => {\n        return {nodeId: response.searchNode.slice(1)}\n      }) \n      setTweets({ search_metadata: {}, statuses: [] })\n      setProgress(progress => \"idle\");\n      setStatus(status => response.stats)\n    })\n\n    socket.on(\"SET_TWITTER_HASHTAG\", (response) => {\n\n      console.debug(\"RX SET_TWITTER_HASHTAG\");\n\n      if (nodeValid(response.node)) { \n        setStatusHashtag(statusHashtag => \"found\")\n        setCurrentHashtag(currentHashtag => response.node) \n        console.debug(\"new: #\" + response.node.nodeId);\n        if (response.tweets) {\n          console.debug(\"RX SET_TWITTER_HASHTAG | SET TWEETS: \" + response.tweets.statuses.length);\n          setTweets(tweets => response.tweets)\n        }\n      }\n      else{\n        setStatusHashtag(statusHashtag => \"invalid\")\n        console.debug(\"INVALID HT NODE | RESULTS\");\n        console.debug({response})\n      }\n\n      setProgress(progress => \"idle\");\n      setStatus(status => response.stats)\n    });\n\n    socket.on(\"action\", (action) => {\n      \n      console.debug(\"RX ACTION | socket: \" + socket.id + \" | TYPE: \" + action.type);\n      console.debug(\"RX ACTION | \", action.data);\n\n      switch (action.type){\n\n        case \"user\":\n            setCurrentUser(currentUser => action.data)\n            console.log(\"USER: @\" + action.data.screenName + \" | \" + action.data.profileImageUrl)\n          break\n\n        case \"hashtag\":\n            console.log(\"HT: #\" + action.data.text)\n          break\n\n        case \"stats\":\n            setStatus(() => action.data)\n          break\n\n        default:\n      }\n\n    });   \n\n    socket.on(\"authenticated\", function () {\n      setProgress(progress => \"idle\");\n      console.debug(\"AUTHENTICATED | \" + socket.id);\n      socket.emit(\"TWITTER_SEARCH_NODE\", \"@?all\")\n      socket.emit(\"TWITTER_SEARCH_NODE\", \"@threecee\")\n      socket.emit(\"TWITTER_SEARCH_NODE\", \"#blacklivesmatter\")\n    });\n\n    socket.on(\"USER_AUTHENTICATED\", function (userObj) {\n      setProgress(progress => \"idle\");\n      setTwitterAuthenticated(() => true)\n      setTwitterAuthenticatedUser(twitterAuthenticatedUser => userObj.screenName)\n      console.log(\"RX TWITTER USER_AUTHENTICATED | USER: @\" + userObj.screenName);\n    });\n\n    socket.on(\"TWITTER_USER_NOT_FOUND\", (response) => {\n\n      console.debug(\"RX TWITTER_USER_NOT_FOUND\");\n      console.debug(response);\n      \n      setStatus(status => response.stats);\n      if (response.searchNode.startsWith(\"@?\") && response.results && !response.results.endCursor){\n        console.debug(\"RETRY NEXT UNCAT: \" + response.searchNode);\n        socket.emit(\"TWITTER_SEARCH_NODE\", response.searchNode);\n      }\n      else{\n        setProgress(progress => \"idle\");\n      }\n    });\n    \n    setProgress(\"idle\")\n\n    return () => socket.disconnect();\n\n  }, [])\n\n  // history\n  // - back\n  useHotkeys('left', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // - forward\n  useHotkeys('right', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // all\n  useHotkeys('A', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // left\n  useHotkeys('L', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+L', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('D', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+D', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // right\n  useHotkeys('R', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+R', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // neutral\n  useHotkeys('N', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+N', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // negative\n  useHotkeys('-', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+-', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // positive\n  useHotkeys('=', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+=', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // ignore toggle\n  useHotkeys('shift+I', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+X', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // bot toggle\n  useHotkeys('shift+B', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // verified toggle\n  useHotkeys('shift+V', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n\n  const displayNode = (nodeType) => {\n    if (nodeType === \"user\"){\n      return <UserView user={currentUserRef.current} stats={statusRef.current} handleNodeChange={handleNodeChange} handleSearchNode={handleSearchNode}/>\n    }\n    else{\n      return <HashtagView hashtag={currentHashtagRef.current} statusHashtag={statusHashtagRef.current} stats={statusRef.current} tweets={tweetsRef.current} handleNodeChange={handleNodeChange} handleSearchNode={handleSearchNode}/>\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Container component=\"main\" maxWidth={false}>\n        <AppBar  className={classes.appBar} position=\"static\">\n          <Toolbar className={classes.toolBar}>\n\n            <Typography className={classes.title}>\n              {/* Categorizer | USER HISTORY: {userHistory.length} | PREV USER: {userHistory.length > 0 ? userHistory[userHistory.length-1] : \"\"} */}\n              CATEGORIZE\n            </Typography>\n            \n            <Tabs \n              className={classes.tabs}\n              value={tabValue} \n              onChange={handleTabChange}\n            >\n              <Tab label=\"User\" />\n              <Tab label=\"Hashtag\"/>\n            </Tabs>\n\n            {progress !== \"idle\" ? <><Typography className={classes.progress}>{`${progress} ...`}</Typography> <CircularProgress className={classes.progress}>{progress}</CircularProgress></> : <></>}\n\n            {/* <Typography  className={classes.serverStatus}>\n              NN: {status.bestNetwork.networkId}\n            </Typography>\n            <Typography  className={classes.serverStatus}>\n              {status.nodesPerMin} nodes/min (max: {status.maxNodesPerMin} | time: {formatDateTime(status.maxNodesPerMinTime)})\n            </Typography> */}\n\n            <Link\n              className={classes.twitterAuth}\n              href={\"http://twitter.com/\" + twitterAuthenticatedUserRef.current}\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              {twitterAuthenticatedUserRef.current ? \"@\" + twitterAuthenticatedUserRef.current : \"\"}\n            </Link>\n\n            <Button \n              className={classes.buttonLogin}\n              variant=\"contained\" \n              color=\"primary\" \n              size=\"small\" \n              onClick={event => { handleLoginLogout(event)}} \n              name=\"login\"\n              label=\"login\"\n            >\n              {twitterAuthenticatedRef.current ? \"LOGOUT\" : \"LOGIN TWITTER\"}\n            </Button>\n\n          </Toolbar>\n        </AppBar>\n        {displayNode(displayNodeTypeRef.current)}\n      </Container>\n    </div>\n  );\n}\n\nexport default App;","import React, { useState } from 'react';\nimport { Tweet } from 'react-twitter-widgets'\n\nimport Duration from 'duration';\n\nimport AppBar from '@material-ui/core/AppBar';\n// import Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Card from '@material-ui/core/Card';\n// import CardActionArea from '@material-ui/core/CardActionArea';\n// import CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n// import CardHeader from '@material-ui/core/CardHeader';\n// import CardMedia from '@material-ui/core/CardMedia';\n// import CheckBoxIcon from '@material-ui/icons/CheckBox';\n// import CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\n// import FormLabel from '@material-ui/core/FormLabel';\nimport Grid from '@material-ui/core/Grid';\n// import IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\n// import MenuIcon from '@material-ui/icons/Menu';\n// import Paper from '@material-ui/core/Paper';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\n// import TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TableHead } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 2,\n  },\n  grid: {\n    display: 'flex',\n  },\n  gridItem: {\n    margin: 5,\n  },  \n  card: {\n    raised: false,\n    maxWidth: 400,\n  },\n  table: {\n  },\n  tableRowGreen: {\n    backgroundColor: 'lightgreen',\n  },\n  appBar: {\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  statusBar: {\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    color: 'blue',\n  },\n  search: {\n    flexGrow: 1,\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: \"white\",\n    '&:hover': {\n      backgroundColor: \"lightgray\",\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'primary',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n\n  buttonGroupLabel: {\n    color: 'blue',\n    marginRight: theme.spacing(1),\n  },\n  buttonAll: {\n    color: 'black',\n  },\n  buttonLeft: {\n    color: 'blue',\n  },\n  buttonNeutral: {\n    color: 'gray',\n  },\n  buttonRight: {\n    color: 'red',\n  },\n  buttonMismatch: {\n    margin: 5\n  },\n\n  autoCategory:{\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n  },\n\n  left: {\n    backgroundColor: 'blue',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n  },\n  neutral: {\n    backgroundColor: 'gray',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n  },\n  right: {\n    backgroundColor: 'red',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n  },\n  none: {\n    backgroundColor: 'white',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n  },\n\n}));\n\nconst formatDate = (dateInput) => {\n  return new Date(dateInput).toLocaleDateString(\n    'en-gb',\n    {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }\n  );\n}\n\nconst HashtagView = (props) => {\n\n  const classes = useStyles();\n\n  const createdAt = props.hashtag.createdAt ? formatDate(props.hashtag.createdAt) : \"---\"\n  const lastSeen = props.hashtag.lastSeen ? formatDate(props.hashtag.lastSeen) : \"---\"\n \n  const lastSeenDuration = props.hashtag.lastSeen ? new Duration(new Date(props.hashtag.lastSeen)).toString(1, 4) : \"---\"\n  const twitterAge = props.hashtag.createdAt ? new Duration(new Date(props.hashtag.createdAt)) : \"---\"\n  const twitterAgeString = props.hashtag.createdAt ? twitterAge.toString(1, 4) : \"---\"\n\n  const [hashtagSearch, setHashtagSearch] = useState(\"\");\n\n  // useEffect(() => {\n  //   setHashtagSearch(props.hashtag.nodeId)\n  // }, [props])\n  \n  const handleChangeSearch = (event) => {\n    console.log(\"handleChangeSearch: \" + event.target.value)\n    setHashtagSearch(event.target.value);\n  }\n\n  const handleKeyPress = (event) => {\n    if (event.charCode === 13) { // enter key pressed\n      console.log(\"ENTER: hashtagSearch: \" + hashtagSearch)\n      props.handleSearchNode(hashtagSearch)\n    }\n  }\n\n  const openHashtagTwitterPage = () => {\n    console.log(\"open twitter\")\n    window.open(`https://twitter.com/search?f=tweets&q=%23${props.hashtag.nodeId || null}`, \"_blank\") //to open new page\n  }\n\n  const displayTweets = (tweets) => {\n    if (!tweets || tweets === undefined || tweets.statuses === undefined) { return <></>}\n    return tweets.statuses.map((tweet) => {\n      return <Tweet key={tweet.id_str} tweetId={tweet.id_str} options={{ width: \"400\" }} />\n    })\n  }\n\n  return (\n    <>\n      <AppBar  className={classes.appBar} position=\"static\">\n        <Toolbar variant=\"dense\">\n\n          {/* <Typography variant=\"h6\" className={classes.title}>\n            Hashtag\n          </Typography> */}\n\n          <div className={classes.search}>\n\n            <div className={classes.searchIcon}>\n              <SearchIcon color=\"primary\"/>\n            </div>\n\n            <InputBase\n              placeholder=\"search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n              value={hashtagSearch}\n              onKeyPress={handleKeyPress}\n              onChange={handleChangeSearch}\n            />\n\n          </div>\n\n          <Typography className={classes.buttonGroupLabel}>\n            UNCAT\n          </Typography>   \n\n          <ButtonGroup variant=\"contained\" color=\"primary\" size=\"small\" aria-label=\"small button group\">\n            <Button onClick={(event) => props.handleNodeChange(event, props.hashtag)} name=\"all\" >ALL: {props.stats.hashtag.uncategorized.all}</Button>\n          </ButtonGroup>\n\n        </Toolbar>\n      </AppBar>\n\n      <Grid className={classes.grid}>\n        <Grid item className={classes.gridItem} xs={3}>\n          <Card className={classes.card} variant=\"outlined\">\n            <CardContent onClick={openHashtagTwitterPage}>\n              <Typography variant=\"h6\">#{props.statusHashtag === \"notFound\" ? props.hashtag.nodeId + \" NOT FOUND\" : props.hashtag.nodeId}</Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item className={classes.gridItem} xs={3}>{displayTweets(props.tweets)}</Grid>\n\n        <Grid item className={classes.gridItem} xs={3}>\n          <TableContainer>\n            <Table className={classes.table} size=\"small\">\n              <TableBody>\n                <TableRow>\n                  <TableCell>id</TableCell><TableCell align=\"right\">{props.hashtag.nodeId}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>created</TableCell><TableCell align=\"right\">{createdAt}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>twitter age</TableCell><TableCell align=\"right\">{twitterAgeString}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>last seen</TableCell><TableCell align=\"right\">{lastSeen}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>last seen</TableCell><TableCell align=\"right\">{lastSeenDuration} ago</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>mentions</TableCell><TableCell align=\"right\">{props.hashtag.mentions ? props.hashtag.mentions : \"---\"}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>mentions/min</TableCell><TableCell align=\"right\">{props.hashtag.rate ? props.hashtag.rate.toFixed(1) : \"---\"}</TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item className={classes.gridItem} xs={2}>\n          <TableContainer>\n            <Table className={classes.table} size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>CAT</TableCell>\n                  <TableCell align=\"left\">MAN</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                <TableRow>\n                  <TableCell>left</TableCell>\n                  <TableCell align=\"right\">{props.stats.hashtag.manual.left}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>neutral</TableCell>\n                  <TableCell align=\"right\">{props.stats.hashtag.manual.neutral}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>right</TableCell>\n                  <TableCell align=\"right\">{props.stats.hashtag.manual.right}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>positive</TableCell>\n                  <TableCell align=\"right\">{props.stats.hashtag.manual.positive}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>negative</TableCell>\n                  <TableCell align=\"right\">{props.stats.hashtag.manual.negative}</TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item className={classes.gridItem} xs={1}>\n          <FormGroup>\n            <FormControl component=\"fieldset\">\n              <RadioGroup aria-label=\"category\" name=\"category\" value={props.hashtag.category || \"none\"} onChange={(event) => props.handleNodeChange(event, props.hashtag)}>\n                <FormControlLabel labelPlacement=\"start\" value=\"left\" control={<Radio />} label=\"left\"/>\n                <FormControlLabel labelPlacement=\"start\" value=\"neutral\" control={<Radio />} label=\"neutral\" />\n                <FormControlLabel labelPlacement=\"start\" value=\"right\" control={<Radio />} label=\"right\" />\n                <FormControlLabel labelPlacement=\"start\" value=\"positive\" control={<Radio />} label=\"positive\" />\n                <FormControlLabel labelPlacement=\"start\" value=\"negative\" control={<Radio />} label=\"negative\" />\n                <FormControlLabel labelPlacement=\"start\" value=\"none\" control={<Radio />} label=\"none\" />\n              </RadioGroup>\n            </FormControl>\n\n            <FormControlLabel\n              control={<Checkbox checked={props.hashtag.ignored || false} onChange={(event) => props.handleNodeChange(event, props.hashtag)} name=\"ignored\" />}\n              label=\"ignored\"\n              labelPlacement=\"start\"\n            />\n          </FormGroup>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default HashtagView;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// ReactDOM.render(\n//   <Router>\n//     <div>\n//       <Switch>\n//         <Route path=\"/categorize/user/:slug\">\n//           <App />\n//         </Route>\n//       </Switch>\n//     </div>\n//   </Router>,\n//   document.getElementById('root')\n// );\n\nReactDOM.render(\n  <Router>\n    <div>\n      <Switch>\n        <Route path=\"/categorize/user/:slug\">\n          <App />\n        </Route>\n        <Route path=\"/categorize/hashtag/:slug\">\n          <App />\n        </Route>\n        <Route >\n          <App />\n        </Route>\n      </Switch>\n    </div>\n  </Router>,\n  document.getElementById('root')\n);\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}