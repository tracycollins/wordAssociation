{"version":3,"sources":["UserView.js","App.js","HashtagView.js","reportWebVitals.js","index.js"],"names":["fontSizeCategory","StyledTableCell","withStyles","theme","head","body","fontSize","TableCell","StyledTableRow","root","TableRow","useStyles","makeStyles","flexGrow","appBar","backgroundColor","marginBottom","spacing","grid","display","alignItems","gridItem","margin","card","alignSelf","profileImage","bannerImage","icon","borderRadius","width","height","boxShadow","backgroundImage","outline","outlineOffset","background","checkedIcon","content","selectCategory","shape","padding","radioGroupCategory","checkbox","color","green","checked","radioButtonLabel","radioButton","table","tableHead","tableCell","tableCategorized","tableRowGreen","statusBar","raised","menuButton","marginRight","title","search","position","breakpoints","up","searchIcon","pointerEvents","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","buttonGroupLabel","buttonAll","buttonLeft","buttonNeutral","buttonRight","buttonMismatch","autoCategory","left","textAlign","neutral","right","positive","negative","none","ignored","min","max","formatDate","dateInput","Date","toLocaleDateString","year","month","day","User","props","classes","createdAt","user","lastSeen","lastSeenDuration","Duration","toString","twitterAge","twitterAgeString","tweetRate","days","Math","ceil","statusesCount","useState","getCategoryClass","category","Grid","className","item","xs","Card","variant","CardContent","onClick","console","log","window","open","screenName","Typography","name","CardMedia","src","profileImageUrl","component","onError","e","bannerImageUrl","description","dataSource","sourceType","options","TableContainer","Table","size","TableHead","align","TableBody","nodeId","location","followersCount","friendsCount","mentions","rate","toFixed","colSpan","stats","manual","auto","FormGroup","FormControl","InputLabel","id","Select","labelId","value","onChange","event","handleNodeChange","MenuItem","dense","categoryAuto","toUpperCase","FormControlLabel","control","Checkbox","following","label","categoryVerified","isBot","maxWidth","marginLeft","HashtagView","tweets","hashtag","hashtagSearch","setHashtagSearch","AppBar","Toolbar","InputBase","placeholder","input","inputProps","onKeyPress","charCode","handleSearchNode","target","ButtonGroup","aria-label","Button","uncategorized","all","statusHashtag","undefined","statuses","map","tweet","tweetId","id_str","RadioGroup","labelPlacement","Radio","DEFAULT_AUTH_URL","VIEWER_ID","floor","random","DEFAULT_VIEWER_OBJ","userId","viewerId","type","namespace","timeStamp","now","tags","mode","entity","viewerObj","socket","socketClient","tabs","toolBar","shadows","progress","serverStatus","twitterAuth","buttonLogin","App","history","useHistory","useLocation","useParams","slug","tabValue","setTabValue","pathname","historyArray","setHistoryArray","historyArrayRef","useRef","historyArrayIndex","setHistoryArrayIndex","historyArrayIndexRef","twitterAuthenticated","setTwitterAuthenticated","twitterAuthenticatedRef","twitterAuthenticatedUser","setTwitterAuthenticatedUser","twitterAuthenticatedUserRef","nodesPerMin","maxNodesPerMin","maxNodesPerMinTime","bestNetwork","networkId","mismatched","status","setStatus","statusRef","setStatusHashtag","statusHashtagRef","search_metadata","setTweets","tweetsRef","setProgress","displayNodeType","setDisplayNodeType","displayNodeTypeRef","currentUsers","setUsers","currentUsersRef","age","rateMax","tweetsPerDay","categoryVerfied","currentUser","setCurrentUser","currentUserRef","text","currentHashtag","setCurrentHashtag","currentHashtagRef","useEffect","tempHistoryArray","current","length","push","currentNode","searchString","searchTerm","emit","handleLoginLogout","useCallback","preventDefault","warn","node","persist","searchFilter","eventName","eventValue","eventChecked","code","pop","nextRoute","split","shiftKey","nodeType","usersAvailable","tempUsers","shift","currentUsersAvailable","alert","nodeValid","endsWith","on","password","response","debug","nodes","users","searchNode","slice","action","data","userObj","startsWith","results","endCursor","disconnect","useHotkeys","Container","Tabs","newValue","Tab","CircularProgress","Link","href","rel","UserView","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","path","document","getElementById"],"mappings":"wkBA6CMA,EAAmB,SAEnBC,EAAkBC,aAAW,SAACC,GAAD,MAAY,CAC7CC,KAAM,GAINC,KAAM,CACJC,SAAU,OANUJ,CAQpBK,KAEEC,EAAiBN,aAAW,SAACC,GAAD,MAAY,CAC5CM,KAAM,MADeP,CAMnBQ,KAGEC,EAAYC,aAAW,SAACT,GAAD,MAAY,CACvCM,KAAM,CACJI,SAAU,GAEZC,OAAQ,CACNC,gBAAiB,QACjBC,aAAcb,EAAMc,QAAQ,IAE9BC,KAAM,CACJC,QAAS,OACTC,WAAY,WAEdC,SAAU,CACRC,OAAQnB,EAAMc,QAAQ,IAExBM,KAAM,CAEJC,UAAW,UAEbC,aAAc,CACZT,aAAcb,EAAMc,QAAQ,IAE9BS,YAAa,CACXV,aAAcb,EAAMc,QAAQ,IAE9BU,KAAM,CACJC,aAAc,MACdC,MAAO,GACPC,OAAQ,GACRC,UAAW,sEACXhB,gBAAiB,UACjBiB,gBAAiB,+DACjB,2BAA4B,CAC1BC,QAAS,+BACTC,cAAe,GAEjB,kBAAmB,CACjBnB,gBAAiB,WAEnB,qBAAsB,CACpBgB,UAAW,OACXI,WAAY,yBAGhBC,YAAa,CACXrB,gBAAiB,UACjBiB,gBAAiB,+DACjB,WAAY,CACVb,QAAS,QACTU,MAAO,GACPC,OAAQ,GACRE,gBAAiB,iDACjBK,QAAS,MAEX,kBAAmB,CACjBtB,gBAAiB,YAIrBuB,eAAgB,CACdhC,SAAU,SACVS,gBAAiB,UACjBa,aAAczB,EAAMoC,MAAMX,aAC1BY,QAASrC,EAAMc,QAAQ,GACvBD,aAAcb,EAAMc,QAAQ,IAE9BwB,mBAAoB,CAClBnC,SAAU,SACVS,gBAAiB,UACjBa,aAAczB,EAAMoC,MAAMX,aAC1BY,QAASrC,EAAMc,QAAQ,GACvBD,aAAcb,EAAMc,QAAQ,IAE9ByB,SAAU,CACRC,MAAOC,IAAM,KACb,YAAa,CACXD,MAAOC,IAAM,OAGjBC,QAAS,GACTC,iBAAkB,CAChBxC,SAAU,UAEZyC,YAAa,GAEbC,MAAO,CACLpB,aAAczB,EAAMoC,MAAMX,cAE5BqB,UAAW,CACTlC,gBAAiB,WAEnBmC,UAAW,GAEXC,iBAAkB,CAChBvB,aAAczB,EAAMoC,MAAMX,aAE1Bb,gBAAiB,WAEnBqC,cAAe,CACbrC,gBAAiB,cAEnBsC,UAAW,CACTC,QAAQ,EACRvC,gBAAiB,QACjBO,OAAQ,GAEViC,WAAY,CACVC,YAAarD,EAAMc,QAAQ,IAE7BwC,MAAO,CAELd,MAAO,QAETe,OAAO,aAELC,SAAU,WACV/B,aAAczB,EAAMoC,MAAMX,aAC1Bb,gBAAiB,QACjB,UAAW,CACTA,gBAAiB,WAEnByC,YAAarD,EAAMc,QAAQ,GAE3BY,MAAO,QACN1B,EAAMyD,YAAYC,GAAG,MAAQ,CAE5BhC,MAAO,SAGXiC,WAAY,CACVtB,QAASrC,EAAMc,QAAQ,EAAG,GAC1Ba,OAAQ,OACR6B,SAAU,WACVI,cAAe,OACf5C,QAAS,OACTC,WAAY,SACZ4C,eAAgB,UAElBC,UAAW,CACTtB,MAAO,WAETuB,WAAW,aACT1B,QAASrC,EAAMc,QAAQ,EAAG,EAAG,EAAG,GAChCkD,YAAY,cAAD,OAAgBhE,EAAMc,QAAQ,GAA9B,OACXmD,WAAYjE,EAAMkE,YAAYC,OAAO,SACrCzC,MAAO,QACN1B,EAAMyD,YAAYC,GAAG,MAAQ,CAC5BhC,MAAO,SAIX0C,iBAAkB,CAChB5B,MAAO,OACPa,YAAarD,EAAMc,QAAQ,IAE7BuD,UAAW,CACT7B,MAAO,SAET8B,WAAY,CACV9B,MAAO,QAET+B,cAAe,CACb/B,MAAO,QAETgC,YAAa,CACXhC,MAAO,OAETiC,eAAgB,CACdtD,OAAQ,GAGVuD,aAAa,CACXjD,aAAczB,EAAMoC,MAAMX,aAC1BY,QAASrC,EAAMc,QAAQ,GACvB0B,MAAO,SAGTmC,KAAM,CACJC,UAAW,SACXzE,SAAUN,EACVe,gBAAiB,OACjBa,aAAczB,EAAMoC,MAAMX,aAC1BY,QAASrC,EAAMc,QAAQ,GACvB0B,MAAO,QACP3B,aAAcb,EAAMc,QAAQ,IAE9B+D,QAAS,CACPD,UAAW,SACXzE,SAAUN,EACVe,gBAAiB,WACjBa,aAAczB,EAAMoC,MAAMX,aAC1BY,QAASrC,EAAMc,QAAQ,GACvB0B,MAAO,QACP3B,aAAcb,EAAMc,QAAQ,IAE9BgE,MAAO,CACLF,UAAW,SACXzE,SAAUN,EACVe,gBAAiB,MACjBa,aAAczB,EAAMoC,MAAMX,aAC1BY,QAASrC,EAAMc,QAAQ,GACvB0B,MAAO,QACP3B,aAAcb,EAAMc,QAAQ,IAE9BiE,SAAU,CACRH,UAAW,SACXzE,SAAUN,EACVe,gBAAiB,QACjBa,aAAczB,EAAMoC,MAAMX,aAC1BY,QAASrC,EAAMc,QAAQ,GACvB0B,MAAO,QACP3B,aAAcb,EAAMc,QAAQ,IAE9BkE,SAAU,CACRJ,UAAW,SACXzE,SAAUN,EACVe,gBAAiB,SACjBa,aAAczB,EAAMoC,MAAMX,aAC1BY,QAASrC,EAAMc,QAAQ,GACvB0B,MAAO,QACP3B,aAAcb,EAAMc,QAAQ,IAE9BmE,KAAM,CACJL,UAAW,SACXzE,SAAUN,EACVe,gBAAiB,QACjBa,aAAczB,EAAMoC,MAAMX,aAC1BY,QAASrC,EAAMc,QAAQ,GACvB0B,MAAO,QACP3B,aAAcb,EAAMc,QAAQ,IAE9BoE,QAAS,CAEP/E,SAAUN,EACVe,gBAAiB,SACjBa,aAAczB,EAAMoC,MAAMX,aAC1BY,QAASrC,EAAMc,QAAQ,GACvB0B,MAAO,QACP3B,aAAcb,EAAMc,QAAQ,QAoBhC,ICtS+BqE,EAAKC,EDsS9BC,GAAa,SAACC,GAClB,OAAO,IAAIC,KAAKD,GAAWE,mBACzB,QACA,CACEC,KAAM,UACNC,MAAO,QACPC,IAAK,aA6SIC,GArSF,SAACC,GAEZ,IAAMC,EAAUtF,IAEVuF,EAAYV,GAAWQ,EAAMG,KAAKD,WAClCE,EAAWZ,GAAWQ,EAAMG,KAAKC,UAEjCC,EAAmB,IAAIC,IAAS,IAAIZ,KAAKM,EAAMG,KAAKC,WAAWG,SAAS,EAAG,GAC3EC,EAAaR,EAAMG,KAAKD,UAAY,IAAII,IAAS,IAAIZ,KAAKM,EAAMG,KAAKD,YAAc,IAAII,IAAS,IAAIZ,MACpGe,EAAmBD,EAAWD,SAAS,EAAG,GAE1CG,EAAYF,EAAWG,KAAO,EAAIC,KAAKC,KAAKb,EAAMG,KAAKW,cAAcN,EAAWG,MAAQ,EAXxE,EAacI,mBAAS,IAbvB,mBAoChBC,GApCgB,UAoCG,SAACC,GACxB,OAAQA,GACN,IAAK,OACL,IAAK,UACL,IAAK,QACL,IAAK,WACL,IAAK,WACL,IAAK,UACH,OAAOhB,EAAQgB,GACjB,QACE,OAAOhB,EAAQb,QAIrB,OACE,mCA8CE,eAAC8B,EAAA,EAAD,CAAMC,UAAWlB,EAAQ/E,KAAzB,UACI,cAACgG,EAAA,EAAD,CAAME,MAAI,EAACD,UAAWlB,EAAQ5E,SAAUgG,GAAI,EAA5C,SACE,eAACC,EAAA,EAAD,CAAMH,UAAWlB,EAAQ1E,KAAMgG,QAAQ,WAAvC,UAEE,eAACC,EAAA,EAAD,CAAaC,QAtEG,WAC1BC,QAAQC,IAAI,gBACZC,OAAOC,KAAP,6BAAkC7B,EAAMG,KAAK2B,YAAc,MAAQ,WAoEzD,UACI,cAACC,EAAA,EAAD,CAAYR,QAAQ,KAApB,SAA0BvB,EAAMG,KAAK6B,OACrC,eAACD,EAAA,EAAD,eAAc/B,EAAMG,KAAK2B,iBAY7B,cAACG,EAAA,EAAD,CACEd,UAAWlB,EAAQxE,aACnByG,IAAKlC,EAAMG,KAAKgC,iBAxHJ,cAyHZC,UAAU,MACVC,QAAS,SAAAC,OAEX,cAACL,EAAA,EAAD,CACEd,UAAWlB,EAAQvE,YACnBwG,IAAKlC,EAAMG,KAAKoC,gBA7HL,cA8HXH,UAAU,MACVC,QAAS,SAAAC,OAEX,cAACd,EAAA,EAAD,UACE,cAACO,EAAA,EAAD,UAAa/B,EAAMG,KAAKqC,qBAI9B,cAACtB,EAAA,EAAD,CAAME,MAAI,EAACD,UAAWlB,EAAQ5E,SAAUgG,GAAI,EAA5C,SACE,cAAC,IAAD,CACEoB,WAAY,CACVC,WAAY,UACZZ,WAAY9B,EAAMG,KAAK2B,YAEzBa,QAAS,CAAC9G,MAAO,OAAQC,OAAQ,WAGrC,cAACoF,EAAA,EAAD,CAAME,MAAI,EAACD,UAAWlB,EAAQ5E,SAAUgG,GAAI,EAA5C,SACE,cAACuB,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAO1B,UAAWlB,EAAQjD,MAAO8F,KAAK,QAAtC,UACE,cAACC,EAAA,EAAD,UACE,eAACvI,EAAD,CAAgB2G,UAAWlB,EAAQhD,UAAnC,UACE,eAAChD,EAAD,eAAmB+F,EAAMG,KAAK2B,cAA6B,cAAC7H,EAAD,CAAiB+I,MAAM,eAGtF,eAACC,EAAA,EAAD,WACE,eAACzI,EAAD,WACE,cAACP,EAAD,yBAA6C,cAACA,EAAD,CAAiB+I,MAAM,QAAvB,SAAgChD,EAAMG,KAAK+C,YAE1F,eAAC1I,EAAD,WACE,cAACP,EAAD,uBAA2C,cAACA,EAAD,CAAiB+I,MAAM,QAAvB,SAAgChD,EAAMG,KAAKgD,cAExF,eAAC3I,EAAD,WACE,cAACP,EAAD,sBAA0C,cAACA,EAAD,CAAiB+I,MAAM,QAAvB,SAAgC9C,OAE5E,eAAC1F,EAAD,WACE,cAACP,EAAD,0BAA8C,cAACA,EAAD,CAAiB+I,MAAM,QAAvB,SAAgCvC,OAEhF,eAACjG,EAAD,CAAgB2G,UAAWnB,EAAMG,KAAKiD,eAAiB,IAAOnD,EAAQ7C,cAAgB,KAAtF,UACE,cAACnD,EAAD,wBAA4C,cAACA,EAAD,CAAiB+I,MAAM,QAAvB,SAAgChD,EAAMG,KAAKiD,oBAEzF,eAAC5I,EAAD,WACE,cAACP,EAAD,sBAA0C,cAACA,EAAD,CAAiB+I,MAAM,QAAvB,SAAgChD,EAAMG,KAAKkD,kBAEvF,eAAC7I,EAAD,WACE,cAACP,EAAD,qBAAyC,cAACA,EAAD,CAAiB+I,MAAM,QAAvB,SAAgChD,EAAMG,KAAKW,mBAEtF,eAACtG,EAAD,WACE,cAACP,EAAD,yBAA6C,cAACA,EAAD,CAAiB+I,MAAM,QAAvB,SAAgCtC,OAE/E,eAAClG,EAAD,WACE,cAACP,EAAD,qBAAyC,eAACA,EAAD,CAAiB+I,MAAM,QAAvB,UAAgC5C,EAAhC,KAA4CC,EAA5C,cAK3C,eAAC7F,EAAD,WACE,cAACP,EAAD,uBAA2C,cAACA,EAAD,CAAiB+I,MAAM,QAAvB,SAAgChD,EAAMG,KAAKmD,cAExF,eAAC9I,EAAD,WACE,cAACP,EAAD,4BAAgD,cAACA,EAAD,CAAiB+I,MAAM,QAAvB,SAAgChD,EAAMG,KAAKoD,KAAO,GAAGvD,EAAMG,KAAKoD,KAAKC,QAAQ,GAAK,iBAM5I,cAACtC,EAAA,EAAD,CAAME,MAAI,EAACD,UAAWlB,EAAQ5E,SAAUgG,GAAI,EAA5C,SACE,cAACuB,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAOC,KAAK,QAAZ,UACE,eAACC,EAAA,EAAD,WACE,cAACvI,EAAD,CAAgB2G,UAAWlB,EAAQhD,UAAnC,SACE,cAAChD,EAAD,CAAiBwJ,QAAS,EAA1B,yBAEF,eAACjJ,EAAD,WACE,cAACP,EAAD,kBACA,cAACA,EAAD,CAAiB+I,MAAM,QAAvB,iBACA,cAAC/I,EAAD,CAAiB+I,MAAM,QAAvB,wBAGJ,eAACC,EAAA,EAAD,WACE,eAACzI,EAAD,WACE,cAACP,EAAD,mBACA,cAACA,EAAD,CAAiB+I,MAAM,QAAvB,SAAgChD,EAAM0D,MAAMvD,KAAKwD,OAAO7E,OACxD,cAAC7E,EAAD,CAAiB+I,MAAM,QAAvB,SAAgChD,EAAM0D,MAAMvD,KAAKyD,KAAK9E,UAExD,eAACtE,EAAD,WACE,cAACP,EAAD,oBACA,cAACA,EAAD,CAAiB+I,MAAM,QAAvB,SAAgChD,EAAM0D,MAAMvD,KAAKwD,OAAO1E,QACxD,cAAChF,EAAD,CAAiB+I,MAAM,QAAvB,SAAgChD,EAAM0D,MAAMvD,KAAKyD,KAAK3E,WAExD,eAACzE,EAAD,WACE,cAACP,EAAD,sBACA,cAACA,EAAD,CAAiB+I,MAAM,QAAvB,SAAgChD,EAAM0D,MAAMvD,KAAKwD,OAAO3E,UACxD,cAAC/E,EAAD,CAAiB+I,MAAM,QAAvB,SAAgChD,EAAM0D,MAAMvD,KAAKyD,KAAK5E,aAExD,eAACxE,EAAD,WACE,cAACP,EAAD,uBACA,cAACA,EAAD,CAAiB+I,MAAM,QAAvB,SAAgChD,EAAM0D,MAAMvD,KAAKwD,OAAOzE,WACxD,cAACjF,EAAD,CAAiB+I,MAAM,QAAvB,SAAgChD,EAAM0D,MAAMvD,KAAKyD,KAAK1E,cAExD,eAAC1E,EAAD,WACE,cAACP,EAAD,uBACA,cAACA,EAAD,CAAiB+I,MAAM,QAAvB,SAAgChD,EAAM0D,MAAMvD,KAAKwD,OAAOxE,WACxD,cAAClF,EAAD,CAAiB+I,MAAM,QAAvB,SAAgChD,EAAM0D,MAAMvD,KAAKyD,KAAKzE,cAExD,eAAC3E,EAAD,WACE,cAACP,EAAD,mBACA,cAACA,EAAD,CAAiB+I,MAAM,QAAvB,SAAgChD,EAAM0D,MAAMvD,KAAKwD,OAAOvE,OACxD,cAACnF,EAAD,CAAiB+I,MAAM,QAAvB,SAAgChD,EAAM0D,MAAMvD,KAAKyD,KAAKxE,oBAMhE,cAAC8B,EAAA,EAAD,CAAME,MAAI,EAACD,UAAWlB,EAAQ5E,SAAUgG,GAAI,EAA5C,SACE,eAACwC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,GAAG,kBAAf,sBACA,eAACC,EAAA,EAAD,CACEC,QAAQ,wBACRF,GAAG,kBACHhC,KAAK,WACLb,UAAWH,EAAiBhB,EAAMG,KAAKc,UACvCkD,MAAOnE,EAAMG,KAAKc,UAAY,OAC9BmD,SAAU,SAACC,GAAD,OAAWrE,EAAMsE,iBAAiBD,EAAOrE,EAAMG,OAN3D,UAQE,cAACoE,EAAA,EAAD,CAAUC,OAAO,EAAML,MAAO,OAA9B,kBACA,cAACI,EAAA,EAAD,CAAUC,OAAO,EAAML,MAAO,OAA9B,kBACA,cAACI,EAAA,EAAD,CAAUC,OAAO,EAAML,MAAO,UAA9B,qBACA,cAACI,EAAA,EAAD,CAAUC,OAAO,EAAML,MAAO,QAA9B,mBACA,cAACI,EAAA,EAAD,CAAUC,OAAO,EAAML,MAAO,WAA9B,sBACA,cAACI,EAAA,EAAD,CAAUC,OAAO,EAAML,MAAO,WAA9B,4BAKJ,eAACpC,EAAA,EAAD,CAAYZ,UAAWH,EAAiBhB,EAAMG,KAAKsE,cAAezB,MAAM,SAAxE,mBACShD,EAAMG,KAAKsE,aAAezE,EAAMG,KAAKsE,aAAaC,cAAgB,UAG3E,eAACZ,EAAA,EAAD,CACE1B,UAAU,WACVjB,UAAWlB,EAAQxD,mBACnBqG,KAAK,QAHP,UAKE,cAAC6B,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,CAAU1D,UAAWlB,EAAQvD,SAAUoG,KAAK,QAAQjG,QAASmD,EAAMG,KAAK2E,YAAa,EAAOV,SAAU,SAACC,GAAD,OAAWrE,EAAMsE,iBAAiBD,EAAOrE,EAAMG,OAAO6B,KAAK,cAC1K+C,MAAO,cAAChD,EAAA,EAAD,CAAYZ,UAAWlB,EAAQnD,iBAA/B,yBAET,cAAC6H,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,CAAU1D,UAAWlB,EAAQvD,SAAUoG,KAAK,QAAQjG,QAASmD,EAAMG,KAAK6E,mBAAoB,EAAOZ,SAAU,SAACC,GAAD,OAAWrE,EAAMsE,iBAAiBD,EAAOrE,EAAMG,OAAO6B,KAAK,gBACjL+C,MAAO,cAAChD,EAAA,EAAD,CAAYZ,UAAWlB,EAAQnD,iBAA/B,wBAET,cAAC6H,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,CAAU1D,UAAWlB,EAAQvD,SAAUoG,KAAK,QAAQjG,QAASmD,EAAMG,KAAKd,UAAW,EAAO+E,SAAU,SAACC,GAAD,OAAWrE,EAAMsE,iBAAiBD,EAAOrE,EAAMG,OAAO6B,KAAK,YACxK+C,MAAO,cAAChD,EAAA,EAAD,CAAYZ,UAAWlB,EAAQnD,iBAA/B,uBAET,cAAC6H,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,CAAU1D,UAAWlB,EAAQvD,SAAUoG,KAAK,QAAQjG,QAASmD,EAAMG,KAAK8E,QAAS,EAAOb,SAAU,SAACC,GAAD,OAAWrE,EAAMsE,iBAAiBD,EAAOrE,EAAMG,OAAO6B,KAAK,UACtK+C,MAAO,cAAChD,EAAA,EAAD,CAAYZ,UAAWlB,EAAQnD,iBAA/B,iC,kDEpkBnBnC,GAAYC,aAAW,SAACT,GAAD,MAAY,CACvCM,KAAM,CACJI,SAAU,GAEZK,KAAM,CACJC,QAAS,QAEXE,SAAU,CACRC,OAAQ,GAEVC,KAAM,CACJ+B,QAAQ,EACR4H,SAAU,KAEZlI,MAAO,GAEPI,cAAe,CACbrC,gBAAiB,cAEnBD,OAAQ,CACNC,gBAAiB,QACjBO,OAAQ,GAEV+B,UAAW,CACTtC,gBAAiB,QACjBO,OAAQ,GAEViC,WAAY,CACVC,YAAarD,EAAMc,QAAQ,IAE7BwC,MAAO,CACLd,MAAO,QAETe,OAAO,aACL7C,SAAU,EACV8C,SAAU,WACV/B,aAAczB,EAAMoC,MAAMX,aAC1Bb,gBAAiB,QACjB,UAAW,CACTA,gBAAiB,aAEnByC,YAAarD,EAAMc,QAAQ,GAC3BkK,WAAY,EACZtJ,MAAO,QACN1B,EAAMyD,YAAYC,GAAG,MAAQ,CAC5BsH,WAAYhL,EAAMc,QAAQ,GAC1BY,MAAO,SAGXiC,WAAY,CACVtB,QAASrC,EAAMc,QAAQ,EAAG,GAC1Ba,OAAQ,OACR6B,SAAU,WACVI,cAAe,OACf5C,QAAS,OACTC,WAAY,SACZ4C,eAAgB,UAElBC,UAAW,CACTtB,MAAO,WAETuB,WAAW,aACT1B,QAASrC,EAAMc,QAAQ,EAAG,EAAG,EAAG,GAChCkD,YAAY,cAAD,OAAgBhE,EAAMc,QAAQ,GAA9B,OACXmD,WAAYjE,EAAMkE,YAAYC,OAAO,SACrCzC,MAAO,QACN1B,EAAMyD,YAAYC,GAAG,MAAQ,CAC5BhC,MAAO,SAIX0C,iBAAkB,CAChB5B,MAAO,OACPa,YAAarD,EAAMc,QAAQ,IAE7BuD,UAAW,CACT7B,MAAO,SAET8B,WAAY,CACV9B,MAAO,QAET+B,cAAe,CACb/B,MAAO,QAETgC,YAAa,CACXhC,MAAO,OAETiC,eAAgB,CACdtD,OAAQ,GAGVuD,aAAa,CACXjD,aAAczB,EAAMoC,MAAMX,aAC1BY,QAASrC,EAAMc,QAAQ,GACvB0B,MAAO,SAGTmC,KAAM,CACJ/D,gBAAiB,OACjBa,aAAczB,EAAMoC,MAAMX,aAC1BY,QAASrC,EAAMc,QAAQ,GACvB0B,MAAO,SAETqC,QAAS,CACPjE,gBAAiB,OACjBa,aAAczB,EAAMoC,MAAMX,aAC1BY,QAASrC,EAAMc,QAAQ,GACvB0B,MAAO,SAETsC,MAAO,CACLlE,gBAAiB,MACjBa,aAAczB,EAAMoC,MAAMX,aAC1BY,QAASrC,EAAMc,QAAQ,GACvB0B,MAAO,SAETyC,KAAM,CACJrE,gBAAiB,QACjBa,aAAczB,EAAMoC,MAAMX,aAC1BY,QAASrC,EAAMc,QAAQ,GACvB0B,MAAO,aAKL6C,GAAa,SAACC,GAClB,OAAO,IAAIC,KAAKD,GAAWE,mBACzB,QACA,CACEC,KAAM,UACNC,MAAO,QACPC,IAAK,aAwLIsF,GAnLK,SAACpF,GAEnB,IAgCuBqF,EAhCjBpF,EAAUtF,KAEVuF,EAAYF,EAAMsF,QAAQpF,UAAYV,GAAWQ,EAAMsF,QAAQpF,WAAa,MAC5EE,EAAWJ,EAAMsF,QAAQlF,SAAWZ,GAAWQ,EAAMsF,QAAQlF,UAAY,MAEzEC,EAAmBL,EAAMsF,QAAQlF,SAAW,IAAIE,IAAS,IAAIZ,KAAKM,EAAMsF,QAAQlF,WAAWG,SAAS,EAAG,GAAK,MAC5GC,EAAaR,EAAMsF,QAAQpF,UAAY,IAAII,IAAS,IAAIZ,KAAKM,EAAMsF,QAAQpF,YAAc,MACzFO,EAAmBT,EAAMsF,QAAQpF,UAAYM,EAAWD,SAAS,EAAG,GAAK,MATlD,EAWaQ,mBAAS,IAXtB,mBAWtBwE,EAXsB,KAWPC,EAXO,KAyC7B,OACE,qCACE,cAACC,EAAA,EAAD,CAAStE,UAAWlB,EAAQnF,OAAQ6C,SAAS,SAA7C,SACE,eAAC+H,EAAA,EAAD,CAASnE,QAAQ,QAAjB,UAME,sBAAKJ,UAAWlB,EAAQvC,OAAxB,UAEE,qBAAKyD,UAAWlB,EAAQnC,WAAxB,SACE,cAAC,KAAD,CAAYnB,MAAM,cAGpB,cAACgJ,GAAA,EAAD,CACEC,YAAY,eACZ3F,QAAS,CACPxF,KAAMwF,EAAQhC,UACd4H,MAAO5F,EAAQ/B,YAEjB4H,WAAY,CAAE,aAAc,UAC5B3B,MAAOoB,EACPQ,WA1CW,SAAC1B,GACC,KAAnBA,EAAM2B,WACRtE,QAAQC,IAAI,yBAA2B4D,GACvCvF,EAAMiG,iBAAiBV,KAwCfnB,SAhDe,SAACC,GAC1B3C,QAAQC,IAAI,uBAAyB0C,EAAM6B,OAAO/B,OAClDqB,EAAiBnB,EAAM6B,OAAO/B,aAmDxB,cAACpC,EAAA,EAAD,CAAYZ,UAAWlB,EAAQ1B,iBAA/B,mBAIA,cAAC4H,GAAA,EAAD,CAAa5E,QAAQ,YAAY5E,MAAM,UAAUmG,KAAK,QAAQsD,aAAW,qBAAzE,SACE,eAACC,EAAA,EAAD,CAAQ5E,QAAS,SAAC4C,GAAD,OAAWrE,EAAMsE,iBAAiBD,EAAOrE,EAAMsF,UAAUtD,KAAK,MAA/E,kBAA4FhC,EAAM0D,MAAM4B,QAAQgB,cAAcC,cAMpI,eAACrF,EAAA,EAAD,CAAMC,UAAWlB,EAAQ/E,KAAzB,UACE,cAACgG,EAAA,EAAD,CAAME,MAAI,EAACD,UAAWlB,EAAQ5E,SAAUgG,GAAI,EAA5C,SACE,cAACC,EAAA,EAAD,CAAMH,UAAWlB,EAAQ1E,KAAMgG,QAAQ,WAAvC,SACE,cAACC,EAAA,EAAD,CAAaC,QAvDQ,WAC7BC,QAAQC,IAAI,gBACZC,OAAOC,KAAP,mDAAwD7B,EAAMsF,QAAQpC,QAAU,MAAQ,WAqDhF,SACE,eAACnB,EAAA,EAAD,CAAYR,QAAQ,KAApB,cAAmD,aAAxBvB,EAAMwG,cAA+BxG,EAAMsF,QAAQpC,OAAS,aAAelD,EAAMsF,QAAQpC,gBAI1H,cAAChC,EAAA,EAAD,CAAME,MAAI,EAACD,UAAWlB,EAAQ5E,SAAUgG,GAAI,EAA5C,UAvDiBgE,EAuD6CrF,EAAMqF,OAtDnEA,QAAqBoB,IAAXpB,QAA4CoB,IAApBpB,EAAOqB,SACvCrB,EAAOqB,SAASC,KAAI,SAACC,GAC1B,OAAO,cAAC,IAAD,CAA0BC,QAASD,EAAME,OAAQnE,QAAS,CAAE9G,MAAO,QAAvD+K,EAAME,WAFoD,gCAwD3E,cAAC5F,EAAA,EAAD,CAAME,MAAI,EAACD,UAAWlB,EAAQ5E,SAAUgG,GAAI,EAA5C,SACE,cAACuB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAO1B,UAAWlB,EAAQjD,MAAO8F,KAAK,QAAtC,SACE,eAACG,EAAA,EAAD,WACE,eAACvI,EAAA,EAAD,WACE,cAACH,EAAA,EAAD,iBAAyB,cAACA,EAAA,EAAD,CAAWyI,MAAM,QAAjB,SAA0BhD,EAAMsF,QAAQpC,YAEnE,eAACxI,EAAA,EAAD,WACE,cAACH,EAAA,EAAD,sBAA8B,cAACA,EAAA,EAAD,CAAWyI,MAAM,QAAjB,SAA0B9C,OAE1D,eAACxF,EAAA,EAAD,WACE,cAACH,EAAA,EAAD,0BAAkC,cAACA,EAAA,EAAD,CAAWyI,MAAM,QAAjB,SAA0BvC,OAE9D,eAAC/F,EAAA,EAAD,WACE,cAACH,EAAA,EAAD,wBAAgC,cAACA,EAAA,EAAD,CAAWyI,MAAM,QAAjB,SAA0B5C,OAE5D,eAAC1F,EAAA,EAAD,WACE,cAACH,EAAA,EAAD,wBAAgC,eAACA,EAAA,EAAD,CAAWyI,MAAM,QAAjB,UAA0B3C,EAA1B,aAElC,eAAC3F,EAAA,EAAD,WACE,cAACH,EAAA,EAAD,uBAA+B,cAACA,EAAA,EAAD,CAAWyI,MAAM,QAAjB,SAA0BhD,EAAMsF,QAAQhC,SAAWtD,EAAMsF,QAAQhC,SAAW,WAE7G,eAAC5I,EAAA,EAAD,WACE,cAACH,EAAA,EAAD,2BAAmC,cAACA,EAAA,EAAD,CAAWyI,MAAM,QAAjB,SAA0BhD,EAAMsF,QAAQ/B,KAAOvD,EAAMsF,QAAQ/B,KAAKC,QAAQ,GAAK,oBAM5H,cAACtC,EAAA,EAAD,CAAME,MAAI,EAACD,UAAWlB,EAAQ5E,SAAUgG,GAAI,EAA5C,SACE,cAACuB,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAO1B,UAAWlB,EAAQjD,MAAO8F,KAAK,QAAtC,UACE,cAACC,EAAA,EAAD,UACE,eAACrI,EAAA,EAAD,WACE,cAACH,EAAA,EAAD,kBACA,cAACA,EAAA,EAAD,CAAWyI,MAAM,OAAjB,sBAGJ,eAACC,EAAA,EAAD,WACE,eAACvI,EAAA,EAAD,WACE,cAACH,EAAA,EAAD,mBACA,cAACA,EAAA,EAAD,CAAWyI,MAAM,QAAjB,SAA0BhD,EAAM0D,MAAM4B,QAAQ3B,OAAO7E,UAEvD,eAACpE,EAAA,EAAD,WACE,cAACH,EAAA,EAAD,sBACA,cAACA,EAAA,EAAD,CAAWyI,MAAM,QAAjB,SAA0BhD,EAAM0D,MAAM4B,QAAQ3B,OAAO3E,aAEvD,eAACtE,EAAA,EAAD,WACE,cAACH,EAAA,EAAD,oBACA,cAACA,EAAA,EAAD,CAAWyI,MAAM,QAAjB,SAA0BhD,EAAM0D,MAAM4B,QAAQ3B,OAAO1E,WAEvD,eAACvE,EAAA,EAAD,WACE,cAACH,EAAA,EAAD,uBACA,cAACA,EAAA,EAAD,CAAWyI,MAAM,QAAjB,SAA0BhD,EAAM0D,MAAM4B,QAAQ3B,OAAOzE,cAEvD,eAACxE,EAAA,EAAD,WACE,cAACH,EAAA,EAAD,uBACA,cAACA,EAAA,EAAD,CAAWyI,MAAM,QAAjB,SAA0BhD,EAAM0D,MAAM4B,QAAQ3B,OAAOxE,wBAM/D,cAAC+B,EAAA,EAAD,CAAME,MAAI,EAACD,UAAWlB,EAAQ5E,SAAUgG,GAAI,EAA5C,SACE,eAACwC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAa1B,UAAU,WAAvB,SACE,eAAC2E,GAAA,EAAD,CAAYX,aAAW,WAAWpE,KAAK,WAAWmC,MAAOnE,EAAMsF,QAAQrE,UAAY,OAAQmD,SAAU,SAACC,GAAD,OAAWrE,EAAMsE,iBAAiBD,EAAOrE,EAAMsF,UAApJ,UACE,cAACX,EAAA,EAAD,CAAkBqC,eAAe,QAAQ7C,MAAM,OAAOS,QAAS,cAACqC,EAAA,EAAD,IAAWlC,MAAM,SAChF,cAACJ,EAAA,EAAD,CAAkBqC,eAAe,QAAQ7C,MAAM,UAAUS,QAAS,cAACqC,EAAA,EAAD,IAAWlC,MAAM,YACnF,cAACJ,EAAA,EAAD,CAAkBqC,eAAe,QAAQ7C,MAAM,QAAQS,QAAS,cAACqC,EAAA,EAAD,IAAWlC,MAAM,UACjF,cAACJ,EAAA,EAAD,CAAkBqC,eAAe,QAAQ7C,MAAM,WAAWS,QAAS,cAACqC,EAAA,EAAD,IAAWlC,MAAM,aACpF,cAACJ,EAAA,EAAD,CAAkBqC,eAAe,QAAQ7C,MAAM,WAAWS,QAAS,cAACqC,EAAA,EAAD,IAAWlC,MAAM,aACpF,cAACJ,EAAA,EAAD,CAAkBqC,eAAe,QAAQ7C,MAAM,OAAOS,QAAS,cAACqC,EAAA,EAAD,IAAWlC,MAAM,cAIpF,cAACJ,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,CAAUhI,QAASmD,EAAMsF,QAAQjG,UAAW,EAAO+E,SAAU,SAACC,GAAD,OAAWrE,EAAMsE,iBAAiBD,EAAOrE,EAAMsF,UAAUtD,KAAK,YACpI+C,MAAM,UACNiC,eAAe,sBD9TvBE,GAAmB,4CAOnBC,GAAY,WALa7H,EAIQ,IAJHC,EAIe,WAH1CqB,KAAKwG,MAAMxG,KAAKyG,UAAY9H,EAAMD,EAAM,GAAKA,IAMhDgI,GAAqB,CACzBpE,OAAQiE,GACRI,OAAQJ,GACRK,SAAUL,GACVrF,WAAYqF,GACZM,KAAM,SACNC,UAAW,OACXC,UAAWjI,KAAKkI,MAChBC,KAAM,IAGRP,GAAmBO,KAAKJ,KAAO,SAE/BH,GAAmBO,KAAKC,KAAO,SAC/BR,GAAmBO,KAAKE,OAASZ,GAEjC,IAAMa,GAAYV,GAElB5F,QAAQC,IAAI,CAACqG,eAEb,IAAIC,GAASC,IA9BI,sCAgCXvN,GAAYC,aAAW,SAACT,GAAD,MAAY,CACvCM,KAAM,CACJoB,MAAO,OACPhB,SAAU,EACVkB,UAAW,GAEbjB,OAAQ,CACNC,gBAAiB,QACjBC,aAAcb,EAAMc,QAAQ,GAC5Bc,UAAW,GAEboM,KAAM,CACJtN,SAAU,EACV8B,MAAO,SAETyL,QAAS,CACPC,QAAS,GAEX5K,MAAO,CAELd,MAAO,QACPa,YAAarD,EAAMc,QAAQ,IAE7BqN,SAAU,CAER3L,MAAO,QACPa,YAAarD,EAAMc,QAAQ,IAE7BsN,aAAc,CAEZ5L,MAAO,OACPH,QAASrC,EAAMc,QAAQ,IAEzBuN,YAAa,CAEX7L,MAAO,QACPH,QAASrC,EAAMc,QAAQ,GACvBuC,YAAarD,EAAMc,QAAQ,IAE7BwN,YAAa,CACX1N,gBAAiB,QACjByC,YAAarD,EAAMc,QAAQ,IAE7BoC,UAAW,CACTtC,gBAAiB,QACjBO,OAAQ,GAEViC,WAAY,CACVC,YAAarD,EAAMc,QAAQ,IAE7ByC,OAAO,aACLC,SAAU,WACV/B,aAAczB,EAAMoC,MAAMX,aAC1Bb,gBAAiB,QACjB,UAAW,CACTA,gBAAiB,aAEnByC,YAAarD,EAAMc,QAAQ,GAC3BkK,WAAY,EACZtJ,MAAO,QACN1B,EAAMyD,YAAYC,GAAG,MAAQ,CAC5BsH,WAAYhL,EAAMc,QAAQ,GAC1BY,MAAO,SAGXiC,WAAY,CACVtB,QAASrC,EAAMc,QAAQ,EAAG,GAC1Ba,OAAQ,OACR6B,SAAU,WACVI,cAAe,OACf5C,QAAS,OACTC,WAAY,SACZ4C,eAAgB,UAElBC,UAAW,CACTtB,MAAO,WAETuB,WAAW,aACT1B,QAASrC,EAAMc,QAAQ,EAAG,EAAG,EAAG,GAChCkD,YAAY,cAAD,OAAgBhE,EAAMc,QAAQ,GAA9B,OACXmD,WAAYjE,EAAMkE,YAAYC,OAAO,SACrCzC,MAAO,QACN1B,EAAMyD,YAAYC,GAAG,MAAQ,CAC5BhC,MAAO,aAuyBE6M,GAjyBH,WAEV,IAAMC,EAAUC,cACZzF,EAAW0F,cAKT5I,GAJS6I,cAATC,KAIUpO,MARA,EAoHgBoG,mBAAS,GApHzB,mBAoHTiI,EApHS,KAoHCC,EApHD,OAsHwBlI,mBAAS,CAACoC,EAAS+F,WAtH3C,mBAsHTC,EAtHS,KAsHKC,EAtHL,KAuHVC,EAAkBC,iBAAOH,GAvHf,EAyHkCpI,mBAAS,GAzH3C,mBAyHTwI,EAzHS,KAyHUC,EAzHV,KA0HVC,EAAuBH,iBAAOC,GA1HpB,EA4HwCxI,oBAAS,GA5HjD,mBA4HT2I,EA5HS,KA4HaC,EA5Hb,KA6HVC,EAA0BN,iBAAOI,GA7HvB,EA+HkD3I,mBAAS,IA/H3D,mBA+HT8I,EA/HS,KA+HiBC,EA/HjB,KAgIVC,EAA8BT,iBAAOO,GAhI3B,EAkIY9I,mBAxHN,CACpBiJ,YAAa,EACbC,eAAgB,EAChBC,mBAAoB,EACpBC,YAAa,CACXC,UAAW,IAEbjK,KAAM,CACJmG,cAAe,CACbxH,KAAM,EACNE,QAAS,EACTC,MAAO,EACPC,SAAU,EACVC,SAAU,EACVoH,IAAK,EACL8D,WAAY,GAEd1G,OAAQ,CACN7E,KAAM,EACNE,QAAS,EACTC,MAAO,EACPC,SAAU,EACVC,SAAU,GAEZyE,KAAM,CACJ9E,KAAM,EACNE,QAAS,EACTC,MAAO,EACPC,SAAU,EACVC,SAAU,IAGdmG,QAAS,CACPgB,cAAe,CACbxH,KAAM,EACNE,QAAS,EACTC,MAAO,EACPC,SAAU,EACVC,SAAU,EACVoH,IAAK,EACL8D,WAAY,GAEd1G,OAAQ,CACN7E,KAAM,EACNE,QAAS,EACTC,MAAO,EACPC,SAAU,EACVC,SAAU,GAEZyE,KAAM,CACJ9E,KAAM,EACNE,QAAS,EACTC,MAAO,EACPC,SAAU,EACVC,SAAU,MAhEA,mBAkITmL,EAlIS,KAkIDC,EAlIC,KAmIVC,EAAYlB,iBAAOgB,GAnIT,EAqI0BvJ,oBAAS,GArInC,mBAqITyF,EArIS,KAqIMiE,EArIN,KAsIVC,EAAmBpB,iBAAO9C,GAtIhB,EAwIYzF,mBAzBN,CACpB4J,gBAAiB,GACjBjE,SAAU,KAjHI,mBAwITrB,GAxIS,KAwIDuF,GAxIC,KAyIVC,GAAYvB,iBAAOjE,IAzIT,GA2IgBtE,mBAAS,eA3IzB,qBA2ITuH,GA3IS,MA2ICwC,GA3ID,SA6I8B/J,mBAAS,QA7IvC,qBA6ITgK,GA7IS,MA6IQC,GA7IR,MA8IVC,GAAqB3B,iBAAOyB,IA9IlB,GAgJiBhK,mBAAS,IAhJ1B,qBAgJTmK,GAhJS,MAgJKC,GAhJL,MAiJVC,GAAkB9B,iBAAO4B,IAjJf,GAmJsBnK,mBA9ElB,CAElBmC,OAAQ,KACRpB,WAAY,WACZE,KAAM,GACNmB,SAAU,GACVX,YAAa,GACbL,gBAAiB,wEACjBzG,YAAa,GACbwE,UAAW,KACXoK,OAAQ,GACRlH,eAAgB,EAChBC,aAAc,EACdgC,OAAQ,EAERgG,IAAK,EACL/H,SAAU,EACVC,KAAM,EACN+H,QAAS,EACTC,aAAc,EAEdnL,SAAU,KACV6E,OAAO,EACPH,WAAW,EACX0G,iBAAiB,EACjBvK,SAAU,OACVwD,aAAc,SA/FA,qBAmJTgH,GAnJS,MAmJIC,GAnJJ,MAoJVC,GAAiBrC,iBAAOmC,IApJd,GAsJ4B1K,mBApDrB,CACrBmC,OAAQ,mBACR0I,KAAM,mBACNnH,aAAc,OACdxD,SAAU,OACVf,UAAW,EACXE,SAAU,EACViL,IAAK,EACL/H,SAAU,EACVC,KAAM,EACN+H,QAAS,IA5GK,qBAsJTO,GAtJS,MAsJOC,GAtJP,MAuJVC,GAAoBzC,iBAAOuC,IAEjCG,qBAAU,WACR,IAAMC,EAAgB,YAAO5C,EAAgB6C,SACzCD,EAAiBE,OAAS,GAAKhJ,EAAS+F,WAAa+C,EAAiB,KACxEA,EAAiBG,KAAKjJ,EAAS+F,UAC/BE,GAAgB,8BAAU6C,MAC1BzC,EAAqByC,EAAiBE,OAAO,GAC7C9C,EAAgB6C,QAAUD,KAE3B,CAAC9I,EAAS+F,WAEb8C,qBAAU,WACRjC,EAA4BmC,QAAUrC,IACrC,CAACA,IAEJmC,qBAAU,WACRpC,EAAwBsC,QAAUxC,IACjC,CAACA,IAEJsC,qBAAU,WACRf,GAAmBiB,QAAUnB,KAC5B,CAACA,KAEJiB,qBAAU,WACRZ,GAAgBc,QAAUhB,KACzB,CAACA,KAEJc,qBAAU,WACRL,GAAeO,QAAUT,KACxB,CAACA,KAEJO,qBAAU,WACRD,GAAkBG,QAAUL,KAC3B,CAACA,KAEJG,qBAAU,WACRtB,EAAiBwB,QAAU1F,IAC1B,CAACA,IAEJwF,qBAAU,WACRxB,EAAU0B,QAAU5B,IACnB,CAACA,IAEJ0B,qBAAU,WACRnB,GAAUqB,QAAU7G,KACnB,CAACA,KAEJ,IAAMgH,GAA6C,SAA/BpB,GAAmBiB,QAAqBP,GAAeO,QAAUH,GAAkBG,QAYjGjG,GAAmB,SAACqG,GACxBxB,IAAY,SAAAxC,GAAQ,MAAI,gBACxB,IAAMiE,EAAiC,SAApBxB,GAA6B,IAAMuB,EAAe,IAAMA,EAC3E5K,QAAQC,IAAI,gBAAkB4K,GAC9BtE,GAAOuE,KAAK,sBAAuBD,IAG/BE,GAAoBC,uBAAY,SAACrI,GAErCA,EAAMsI,iBACN7B,IAAY,SAAAxC,GAAQ,MAAI,iBAEpBsB,EAAwBsC,SAC1BxK,QAAQkL,KAAK,eACb3E,GAAOuE,KAAK,SAAUxE,IACtB2B,GAAwB,GACxBG,EAA4B,IAC5BgB,IAAY,SAAAxC,GAAQ,MAAI,YAGxB5G,QAAQkL,KACN,gBACEhD,EAAwBsC,QACxB,WACAhF,IAEJtF,OAAOC,KAAKqF,GAAkB,QAAS,QACvCe,GAAOuE,KAAK,QAASxE,OAEtB,IAeG1D,GAAmBoI,uBAAY,SAACrI,EAAOwI,QAEdpG,IAAzBpC,EAAMsI,gBACRtI,EAAMsI,iBAG2B,SAA/B1B,GAAmBiB,QACrBxK,QAAQC,IAAI,6BAA+BkL,EAAK/K,YAGhDJ,QAAQC,IAAI,gCAAkCkL,EAAK3J,aAG/BuD,IAAlBpC,EAAMyI,SACRzI,EAAMyI,UAOR,IA4GIC,EA5GAC,EAAY3I,EAAM6B,OAAOlE,MAAQ,MACjCiL,EAAa5I,EAAM6B,OAAO/B,MAC1B+I,EAAe7I,EAAM6B,OAAOrJ,QAGhC,QAA0B4J,IAAtBpC,EAAM6B,OAAOlE,MAAsBqC,EAAM8I,KAE3C,OAAQ9I,EAAM8I,MAEZ,IAAK,aACL,IAAK,YAOH,GANAzL,QAAQC,IAAI,sBAAwBwB,EAAS+F,UAC7CxH,QAAQC,IAAI,CAAC0H,oBACb3H,QAAQC,IAAI,CAAC8H,yBACbuD,EAAY,UACR3I,EAAM8I,KAES,cAAf9I,EAAM8I,MACJ9D,EAAgB6C,QAAQC,OAAS,EAAE,CACrC9C,EAAgB6C,QAAQkB,MACxB,IAAMC,EAAYhE,EAAgB6C,QAAQkB,MAC1CzE,EAAQyD,KAAKiB,GACbJ,EAAaI,EAAUC,MAAM,KAAKF,MAGtC,MAEF,IAAK,OACHJ,EAAY,MACZ,MAEF,IAAK,OACL,IAAK,OACC3I,EAAMkJ,UACRP,EAAY,WACZC,EAAa,QAGbD,EAAY,OAEd,MAEF,IAAK,OACC3I,EAAMkJ,UACRP,EAAY,WACZC,EAAa,WAGbD,EAAY,UAEd,MAEF,IAAK,OACC3I,EAAMkJ,UACRP,EAAY,WACZC,EAAa,SAGbD,EAAY,QAEd,MAEF,IAAK,YACC3I,EAAMkJ,UACRP,EAAY,WACZC,EAAa,YAGbD,EAAY,WAEd,MAEF,IAAK,YACC3I,EAAMkJ,UACRP,EAAY,WACZC,EAAa,YAGbD,EAAY,WAEd,MAEF,IAAK,OACL,IAAK,OACC3I,EAAMkJ,WACRP,EAAY,UACZE,GAAgBL,EAAKxN,SAEvB,MAEF,IAAK,OACCgF,EAAMkJ,WACRP,EAAY,cACZE,GAAgBL,EAAK7H,kBAEvB,MAEF,IAAK,OACCX,EAAMkJ,WACRP,EAAY,QACZE,GAAgBL,EAAK5H,OAUP,SAAlB4H,EAAKW,UACPT,EAAe,KACfrL,QAAQC,IAAI,uBAAyBkL,EAAK/K,WAAa,YAAckL,EAAY,aAAeC,KAGhGF,EAAe,KACfrL,QAAQC,IAAI,uBAAyBkL,EAAK3J,OAAS,YAAc8J,EAAY,aAAeC,IAG9FnC,GAAYkC,GAEZ,IAAIS,EAAiB,EAErB,OAAQT,GAEN,IAAK,MACH,MAEF,IAAK,UACmB,SAAlBH,EAAKW,UACP9L,QAAQC,IAAI,iCAAmCkL,EAAK/K,WAAa,YAAckL,EAAY,aAAeC,GAC1GhF,GAAOuE,KAAK,sBAAuB,IAAMS,KAGzCvL,QAAQC,IAAI,iCAAmCkL,EAAK3J,OAAS,YAAc8J,EAAY,aAAeC,GACtGhF,GAAOuE,KAAK,sBAAuB,IAAMS,IAE3C,MAEF,IAAK,MACL,IAAK,OACL,IAAK,UACL,IAAK,QACL,IAAK,WACL,IAAK,WAEHF,GAAgBC,GAEhBS,EAtLwB,SAACT,GAC7B,GAAI5B,GAAgBc,SAAWd,GAAgBc,QAAQC,OAAS,EAAE,CAChE,IAAMuB,EAAS,YAAOtC,GAAgBc,SAChC/L,EAAOuN,EAAUC,QAKvB,OAJAxC,GAASuC,GACThM,QAAQC,IAAI,wCAA0C+L,EAAUvB,OAAS,OAAShM,EAAK2B,YACvF4J,GAAevL,GACf2K,GAAY,QACL4C,EAAUvB,OAEnB,OAAO,EA4KcyB,IAGI,IACnBlM,QAAQC,IAAI,oCAAsC8L,GAClDxF,GAAOuE,KAAK,sBAAuBO,IAGrC,MAEF,IAAK,WACmB,SAAlBF,EAAKW,UACPvF,GAAOuE,KAAK,sBAAuB,QAErC,MAEF,IAAK,WACH,IAAI5C,EAAwBsC,QAU1B,OAFA2B,MAAM,0BACN/C,GAAY,QARZ7C,GAAOuE,KAAK,0BAA2B,CACrCvL,SAAUgM,EACVnI,WAAW,EACX+H,KAAMA,IAQV,MAEF,IAAK,QACL,IAAK,YACL,IAAK,cACL,IAAK,UAEH,IAAKjD,EAAwBsC,QAG3B,OAFA2B,MAAM,0BACN/C,GAAY,QAId,GAAkB,YAAdkC,EAAwB,CACtBE,EACFjF,GAAOuE,KAAK,iBAAkBK,GAG9B5E,GAAOuE,KAAK,mBAAoBK,GAElC,MAGoB,SAAlBA,EAAKW,WAEW,QAAdR,IACEE,EACFjF,GAAOuE,KAAK,cAAeK,GAG3B5E,GAAOuE,KAAK,gBAAiBK,IAIf,cAAdG,IACEE,EACFjF,GAAOuE,KAAK,iBAAkBK,GAG9B5E,GAAOuE,KAAK,mBAAoBK,IAIlB,gBAAdG,IACEE,EACFjF,GAAOuE,KAAK,4BAA6BK,GAGzC5E,GAAOuE,KAAK,8BAA+BK,KAMjD,MAEF,QACEnL,QAAQC,IAAI,mCAAqCqL,EAAY,aAAeC,GAC5EvL,QAAQC,IAAI,CAAC0C,aAGhB,CAACsE,EAASxF,IAEP2K,GAAY,SAACjB,GAEjB,YAAapG,IAAToG,SACgBpG,IAAhBoG,EAAK3J,SAEa,SAAlB2J,EAAKW,eACiB/G,IAApBoG,EAAK/K,cAMbkK,qBAAU,WAC2B,SAA/Bf,GAAmBiB,UACrBxK,QAAQC,IAAI,CAACgH,YACbjH,QAAQC,IAAI,SAAWwB,EAAS+F,UAE3B/F,EAAS+F,SAAS6E,SAAS,SAAWpC,GAAeO,QAAQpK,cAChEJ,QAAQC,IAAI,kCAAoCgK,GAAeO,QAAQpK,YACvE6G,EAAQyD,KAAK,oBAAsBT,GAAeO,QAAQpK,gBAG7D,CAAC6G,EAAS8C,GAAatI,EAAS+F,WAEnC8C,qBAAU,WAC2B,YAA/Bf,GAAmBiB,UACrBxK,QAAQC,IAAI,iBAAmBgH,EAAQxF,SAAS+F,UAC3CP,EAAQxF,SAAS+F,SAAS6E,SAAS,YAAchC,GAAkBG,QAAQhJ,UAC9ExB,QAAQC,IAAI,qCAAuCoK,GAAkBG,QAAQhJ,QAC7EyF,EAAQyD,KAAK,uBAAyBL,GAAkBG,QAAQhJ,YAGnE,CAACyF,EAASkD,GAAgB1I,EAAS+F,WAEtC8C,qBAAU,WAoJR,OAlJA/D,GAAO+F,GAAG,WAAW,WAEnBtM,QAAQC,IAAI,cAAgBsG,GAAOjE,IAEnC8G,IAAY,SAAAxC,GAAQ,MAAI,oBAExBL,GAAOuE,KAAK,iBAAkB,CAC5B9E,UAAW,OACXH,OAAQ,OACR0G,SAAU,kBAIdhG,GAAO+F,GAAG,iBAAiB,SAACE,GAE1BxM,QAAQyM,MAAM,oBAEVD,EAASE,QACX1M,QAAQyM,MAAM,aAAeD,EAASE,MAAMjC,QAC5ChB,IAAS,SAAAkD,GAAK,4BAAQA,GAAR,YAAkBH,EAASE,YAG3CtD,IAAY,SAAAxC,GAAQ,MAAI,UACxBiC,GAAU,SAAAD,GAAM,OAAI4D,EAASxK,YAG/BuE,GAAO+F,GAAG,oBAAoB,SAACE,GAE7BxM,QAAQyM,MAAM,uBAEVD,EAASE,QACXjD,IAAS,SAAAkD,GAAK,4BAAQA,GAAR,YAAkBH,EAASE,WACzC1M,QAAQyM,MAAM,aAAeD,EAASE,MAAMjC,SAG1C2B,GAAUI,EAASrB,QACrBnB,IAAe,SAAAD,GAAW,OAAIyC,EAASrB,QACvCnL,QAAQyM,MAAM,SAAWD,EAASrB,KAAK/K,aAMzCgJ,IAAY,SAAAxC,GAAQ,MAAI,UACxBiC,GAAU,SAAAD,GAAM,OAAI4D,EAASxK,YAG/BuE,GAAO+F,GAAG,oCAAoC,SAACE,GAC7CxM,QAAQyM,MAAM,uCACdzM,QAAQyM,MAAM,CAACD,aACfpD,IAAY,SAAAxC,GAAQ,MAAI,UACxBiC,GAAU,SAAAD,GAAM,OAAI4D,EAASxK,YAG/BuE,GAAO+F,GAAG,6BAA6B,SAACE,GACtCxM,QAAQyM,MAAM,gCACdzM,QAAQyM,MAAM,CAACD,aACfzD,GAAiB,SAAAjE,GAAa,MAAI,cAClCsF,IAAkB,SAAAD,GAChB,MAAO,CAAC3I,OAAQgL,EAASI,WAAWC,MAAM,OAE5C3D,GAAU,CAAED,gBAAiB,GAAIjE,SAAU,KAC3CoE,IAAY,SAAAxC,GAAQ,MAAI,UACxBiC,GAAU,SAAAD,GAAM,OAAI4D,EAASxK,YAG/BuE,GAAO+F,GAAG,uBAAuB,SAACE,GAEhCxM,QAAQyM,MAAM,0BAEVL,GAAUI,EAASrB,OACrBpC,GAAiB,SAAAjE,GAAa,MAAI,WAClCsF,IAAkB,SAAAD,GAAc,OAAIqC,EAASrB,QAC7CnL,QAAQyM,MAAM,SAAWD,EAASrB,KAAK3J,QACnCgL,EAAS7I,SACX3D,QAAQyM,MAAM,wCAA0CD,EAAS7I,OAAOqB,SAASyF,QACjFvB,IAAU,SAAAvF,GAAM,OAAI6I,EAAS7I,aAI/BoF,GAAiB,SAAAjE,GAAa,MAAI,aAClC9E,QAAQyM,MAAM,6BACdzM,QAAQyM,MAAM,CAACD,cAGjBpD,IAAY,SAAAxC,GAAQ,MAAI,UACxBiC,GAAU,SAAAD,GAAM,OAAI4D,EAASxK,YAG/BuE,GAAO+F,GAAG,UAAU,SAACQ,GAKnB,OAHA9M,QAAQyM,MAAM,uBAAyBlG,GAAOjE,GAAK,YAAcwK,EAAO/G,MACxE/F,QAAQyM,MAAM,eAAgBK,EAAOC,MAE7BD,EAAO/G,MAEb,IAAK,OACDiE,IAAe,SAAAD,GAAW,OAAI+C,EAAOC,QACrC/M,QAAQC,IAAI,UAAY6M,EAAOC,KAAK3M,WAAa,MAAQ0M,EAAOC,KAAKtM,iBACvE,MAEF,IAAK,UACDT,QAAQC,IAAI,QAAU6M,EAAOC,KAAK7C,MACpC,MAEF,IAAK,QACDrB,GAAU,kBAAMiE,EAAOC,YAQ/BxG,GAAO+F,GAAG,iBAAiB,WACzBlD,IAAY,SAAAxC,GAAQ,MAAI,UACxB5G,QAAQyM,MAAM,mBAAqBlG,GAAOjE,IAC1CiE,GAAOuE,KAAK,sBAAuB,SACnCvE,GAAOuE,KAAK,sBAAuB,aACnCvE,GAAOuE,KAAK,sBAAuB,wBAGrCvE,GAAO+F,GAAG,sBAAsB,SAAUU,GACxC5D,IAAY,SAAAxC,GAAQ,MAAI,UACxBqB,GAAwB,kBAAM,KAC9BG,GAA4B,SAAAD,GAAwB,OAAI6E,EAAQ5M,cAChEJ,QAAQC,IAAI,0CAA4C+M,EAAQ5M,eAGlEmG,GAAO+F,GAAG,0BAA0B,SAACE,GAEnCxM,QAAQyM,MAAM,6BACdzM,QAAQyM,MAAMD,GAEd3D,GAAU,SAAAD,GAAM,OAAI4D,EAASxK,SACzBwK,EAASI,WAAWK,WAAW,OAAST,EAASU,UAAYV,EAASU,QAAQC,WAChFnN,QAAQyM,MAAM,qBAAuBD,EAASI,YAC9CrG,GAAOuE,KAAK,sBAAuB0B,EAASI,aAG5CxD,IAAY,SAAAxC,GAAQ,MAAI,aAI5BwC,GAAY,QAEL,kBAAM7C,GAAO6G,gBAEnB,IAIHC,YAAW,QAAQ,SAAC1K,GAAD,OAAWC,GAAiBD,EAAOgI,MAAc,GAAI,CAACA,KAEzE0C,YAAW,SAAS,SAAC1K,GAAD,OAAWC,GAAiBD,EAAOgI,MAAc,GAAI,CAACA,KAE1E0C,YAAW,KAAK,SAAC1K,GAAD,OAAWC,GAAiBD,EAAOgI,MAAc,GAAI,CAACA,KAEtE0C,YAAW,KAAK,SAAC1K,GAAD,OAAWC,GAAiBD,EAAOgI,MAAc,GAAI,CAACA,KACtE0C,YAAW,WAAW,SAAC1K,GAAD,OAAWC,GAAiBD,EAAOgI,MAAc,GAAI,CAACA,KAC5E0C,YAAW,KAAK,SAAC1K,GAAD,OAAWC,GAAiBD,EAAOgI,MAAc,GAAI,CAACA,KACtE0C,YAAW,WAAW,SAAC1K,GAAD,OAAWC,GAAiBD,EAAOgI,MAAc,GAAI,CAACA,KAE5E0C,YAAW,KAAK,SAAC1K,GAAD,OAAWC,GAAiBD,EAAOgI,MAAc,GAAI,CAACA,KACtE0C,YAAW,WAAW,SAAC1K,GAAD,OAAWC,GAAiBD,EAAOgI,MAAc,GAAI,CAACA,KAE5E0C,YAAW,KAAK,SAAC1K,GAAD,OAAWC,GAAiBD,EAAOgI,MAAc,GAAI,CAACA,KACtE0C,YAAW,WAAW,SAAC1K,GAAD,OAAWC,GAAiBD,EAAOgI,MAAc,GAAI,CAACA,KAE5E0C,YAAW,KAAK,SAAC1K,GAAD,OAAWC,GAAiBD,EAAOgI,MAAc,GAAI,CAACA,KACtE0C,YAAW,WAAW,SAAC1K,GAAD,OAAWC,GAAiBD,EAAOgI,MAAc,GAAI,CAACA,KAE5E0C,YAAW,KAAK,SAAC1K,GAAD,OAAWC,GAAiBD,EAAOgI,MAAc,GAAI,CAACA,KACtE0C,YAAW,WAAW,SAAC1K,GAAD,OAAWC,GAAiBD,EAAOgI,MAAc,GAAI,CAACA,KAE5E0C,YAAW,WAAW,SAAC1K,GAAD,OAAWC,GAAiBD,EAAOgI,MAAc,GAAI,CAACA,KAC5E0C,YAAW,WAAW,SAAC1K,GAAD,OAAWC,GAAiBD,EAAOgI,MAAc,GAAI,CAACA,KAE5E0C,YAAW,WAAW,SAAC1K,GAAD,OAAWC,GAAiBD,EAAOgI,MAAc,GAAI,CAACA,KAE5E0C,YAAW,WAAW,SAAC1K,GAAD,OAAWC,GAAiBD,EAAOgI,MAAc,GAAI,CAACA,KAE5E,IAAqBmB,GASrB,OACE,qBAAKrM,UAAWlB,EAAQxF,KAAxB,SACE,eAACuU,EAAA,EAAD,CAAW5M,UAAU,OAAO8C,UAAU,EAAtC,UACE,cAACO,EAAA,EAAD,CAAStE,UAAWlB,EAAQnF,OAAQ6C,SAAS,SAA7C,SACE,eAAC+H,EAAA,EAAD,CAASvE,UAAWlB,EAAQmI,QAA5B,UAEE,cAACrG,EAAA,EAAD,CAAYZ,UAAWlB,EAAQxC,MAA/B,wBAKA,eAACwR,EAAA,EAAD,CACE9N,UAAWlB,EAAQkI,KACnBhE,MAAO6E,EACP5E,SAziBY,SAACC,EAAO6K,GAC9B7K,EAAMsI,iBACNjL,QAAQC,IAAI,CAACuN,aACblE,GAAgC,IAAbkE,EAAiB,OAAS,WAC7CjG,EAAYiG,IAkiBJ,UAKE,cAACC,EAAA,EAAD,CAAKpK,MAAM,SACX,cAACoK,EAAA,EAAD,CAAKpK,MAAM,eAGC,SAAbuD,GAAsB,qCAAE,cAACvG,EAAA,EAAD,CAAYZ,UAAWlB,EAAQqI,SAA/B,mBAA6CA,GAA7C,UAAF,IAA4E,cAAC8G,EAAA,EAAD,CAAkBjO,UAAWlB,EAAQqI,SAArC,SAAgDA,QAAkC,6BASrL,cAAC+G,EAAA,EAAD,CACElO,UAAWlB,EAAQuI,YACnB8G,KAAM,sBAAwBvF,EAA4BmC,QAC1DhG,OAAO,SACPqJ,IAAI,WAJN,SAMGxF,EAA4BmC,QAAU,IAAMnC,EAA4BmC,QAAU,KAGrF,cAAC7F,EAAA,EAAD,CACElF,UAAWlB,EAAQwI,YACnBlH,QAAQ,YACR5E,MAAM,UACNmG,KAAK,QACLrB,QAAS,SAAA4C,GAAWoI,GAAkBpI,IACtCrC,KAAK,QACL+C,MAAM,QAPR,SASG6E,EAAwBsC,QAAU,SAAW,wBAxDrCsB,GA6DFvC,GAAmBiB,QA5DnB,SAAbsB,GACK,cAACgC,GAAD,CAAUrP,KAAMwL,GAAeO,QAASxI,MAAO8G,EAAU0B,QAAS5H,iBAAkBA,GAAkB2B,iBAAkBA,KAGxH,cAAC,GAAD,CAAaX,QAASyG,GAAkBG,QAAS1F,cAAekE,EAAiBwB,QAASxI,MAAO8G,EAAU0B,QAAS7G,OAAQwF,GAAUqB,QAAS5H,iBAAkBA,GAAkB2B,iBAAkBA,YE32BnMwJ,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCiBdQ,IAASC,OACP,cAAC,IAAD,UACE,8BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,yBAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,4BAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,UACE,cAAC,GAAD,aAKRC,SAASC,eAAe,SAS1Bb,O","file":"static/js/main.4553c866.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { red, blue, green, gray, black, white, yellow } from '@material-ui/core/colors';\n\nimport { Timeline } from 'react-twitter-widgets'\n\nimport Duration from 'duration';\nimport clsx from 'clsx';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Card from '@material-ui/core/Card';\n// import CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n// import CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\n// import CheckBoxIcon from '@material-ui/icons/CheckBox';\n// import CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\n// import FormLabel from '@material-ui/core/FormLabel';\nimport Grid from '@material-ui/core/Grid';\n// import IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\n// import MenuIcon from '@material-ui/icons/Menu';\n// import Paper from '@material-ui/core/Paper';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Select from '@material-ui/core/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n\nconst fontSizeCategory = '0.9rem';\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    // backgroundColor: theme.palette.common.black,\n    // color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 11,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    // '&:nth-of-type(odd)': {\n    //   backgroundColor: theme.palette.action.hover,\n    // },\n  },\n}))(TableRow);\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 2,\n  },\n  appBar: {\n    backgroundColor: 'white',\n    marginBottom: theme.spacing(1),\n  },\n  grid: {\n    display: 'flex',\n    alignItems: 'stretch',\n  },\n  gridItem: {\n    margin: theme.spacing(1),\n  },  \n  card: {\n    // maxWidth: \"90%\",\n    alignSelf: \"center\",\n  },\n  profileImage: {\n    marginBottom: theme.spacing(1),\n  },\n  bannerImage: {\n    marginBottom: theme.spacing(1),\n  },\n  icon: {\n    borderRadius: '50%',\n    width: 16,\n    height: 16,\n    boxShadow: 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\n    backgroundColor: '#f5f8fa',\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\n    '$root.Mui-focusVisible &': {\n      outline: '2px auto rgba(19,124,189,.6)',\n      outlineOffset: 2,\n    },\n    'input:hover ~ &': {\n      backgroundColor: '#ebf1f5',\n    },\n    'input:disabled ~ &': {\n      boxShadow: 'none',\n      background: 'rgba(206,217,224,.5)',\n    },\n  },\n  checkedIcon: {\n    backgroundColor: '#137cbd',\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\n    '&:before': {\n      display: 'block',\n      width: 16,\n      height: 16,\n      backgroundImage: 'radial-gradient(#fff,#fff 28%,transparent 32%)',\n      content: '\"\"',\n    },\n    'input:hover ~ &': {\n      backgroundColor: '#106ba3',\n    },\n  },\n  \n  selectCategory: {\n    fontSize: '0.5rem',\n    backgroundColor: '#ddeeee',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  radioGroupCategory: {\n    fontSize: '0.5rem',\n    backgroundColor: '#ddeeee',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n  },\n  checkbox: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n  radioButtonLabel: {\n    fontSize: '0.9rem'\n  },\n  radioButton: {\n  },\n  table: {\n    borderRadius: theme.shape.borderRadius,\n  },\n  tableHead: {\n    backgroundColor: '#ddeeee',\n  },\n  tableCell: {\n  },\n  tableCategorized: {\n    borderRadius: theme.shape.borderRadius,\n    // borderColor: 'red',\n    backgroundColor: '#ddeeee',\n  },\n  tableRowGreen: {\n    backgroundColor: 'lightgreen',\n  },\n  statusBar: {\n    raised: false,\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    // flexGrow: 1,\n    color: 'blue',\n  },\n  search: {\n    // flexGrow: 1,\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: \"white\",\n    '&:hover': {\n      backgroundColor: \"#ddeeee\",\n    },\n    marginRight: theme.spacing(1),\n    // marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      // marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'primary',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n\n  buttonGroupLabel: {\n    color: 'blue',\n    marginRight: theme.spacing(1),\n  },\n  buttonAll: {\n    color: 'black',\n  },\n  buttonLeft: {\n    color: 'blue',\n  },\n  buttonNeutral: {\n    color: 'gray',\n  },\n  buttonRight: {\n    color: 'red',\n  },\n  buttonMismatch: {\n    margin: 5\n  },\n\n  autoCategory:{\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n  },\n\n  left: {\n    textAlign: 'center',\n    fontSize: fontSizeCategory,\n    backgroundColor: 'blue',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n    marginBottom: theme.spacing(1),\n  },\n  neutral: {\n    textAlign: 'center',\n    fontSize: fontSizeCategory,\n    backgroundColor: 'darkgray',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n    marginBottom: theme.spacing(1),\n  },\n  right: {\n    textAlign: 'center',\n    fontSize: fontSizeCategory,\n    backgroundColor: 'red',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n    marginBottom: theme.spacing(1),\n  },\n  positive: {\n    textAlign: 'center',\n    fontSize: fontSizeCategory,\n    backgroundColor: 'green',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n    marginBottom: theme.spacing(1),\n  },\n  negative: {\n    textAlign: 'center',\n    fontSize: fontSizeCategory,\n    backgroundColor: 'yellow',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'black',\n    marginBottom: theme.spacing(1),\n  },\n  none: {\n    textAlign: 'center',\n    fontSize: fontSizeCategory,\n    backgroundColor: 'white',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'black',\n    marginBottom: theme.spacing(1),\n  },\n  ignored: {\n    // width: '40%',\n    fontSize: fontSizeCategory,\n    backgroundColor: 'yellow',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'black',\n    marginBottom: theme.spacing(1),\n  },\n\n}));\n\nfunction StyledRadio(props) {\n  const classes = useStyles();\n  return (\n    <Radio\n      className={classes.radioButton}\n      disableRipple\n      color=\"default\"\n      checkedIcon={<span className={clsx(classes.icon, classes.checkedIcon)} />}\n      icon={<span className={classes.icon} />}\n      {...props}\n    />\n  );\n}\n\n\nconst formatDate = (dateInput) => {\n  return new Date(dateInput).toLocaleDateString(\n    'en-gb',\n    {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }\n  );\n}\n\nconst defaultProfileImage = \"logo192.png\"\nconst defaultBannerImage = \"logo192.png\"\n\nconst User = (props) => {\n\n  const classes = useStyles();\n\n  const createdAt = formatDate(props.user.createdAt)\n  const lastSeen = formatDate(props.user.lastSeen)\n \n  const lastSeenDuration = new Duration(new Date(props.user.lastSeen)).toString(1, 4)\n  const twitterAge = props.user.createdAt ? new Duration(new Date(props.user.createdAt)) : new Duration(new Date())\n  const twitterAgeString = twitterAge.toString(1, 4)\n\n  const tweetRate = twitterAge.days > 0 ? Math.ceil(props.user.statusesCount/twitterAge.days) : 0;\n\n  const [userSearch, setUserSearch] = useState(\"\");\n\n  // useEffect(() => {\n  //   setUserSearch(props.user.screenName)\n  // }, [props])\n  \n  const handleChangeSearch = (event) => {\n    console.log(\"handleChangeSearch: \" + event.target.value)\n    setUserSearch(event.target.value);\n  }\n\n  const handleKeyPress = (event) => {\n    if (event.charCode === 13) { // enter key pressed\n      console.log(\"ENTER\")\n      props.handleSearchNode(userSearch)\n    }\n  }\n\n  const openUserTwitterPage = () => {\n    console.log(\"open twitter\")\n    window.open(`http://twitter.com/${props.user.screenName || null}`, \"_blank\") //to open new page\n  }\n\n  const getCategoryClass = (category) => {\n    switch (category){\n      case \"left\":\n      case \"neutral\":\n      case \"right\":\n      case \"positive\":\n      case \"negative\":\n      case \"ignored\":\n        return classes[category]\n      default:\n        return classes.none\n    }\n  }\n\n  return (\n    <>\n      {/* <AppBar  className={classes.appBar} position=\"static\">\n        <Toolbar variant=\"dense\">\n\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon color=\"primary\"/>\n            </div>\n            <InputBase\n              placeholder=\"search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n              value={userSearch}\n              onKeyPress={handleKeyPress}\n              onChange={handleChangeSearch}\n            />\n          </div>\n\n          <Typography className={classes.buttonGroupLabel}>GET UNCAT</Typography>   \n\n          <ButtonGroup color=\"primary\" size=\"small\" aria-label=\"small button group\">\n            <Button onClick={(event) => props.handleNodeChange(event, props.user)} name=\"all\" >ALL: {props.stats.user.uncategorized.all}</Button>\n            <Button onClick={(event) => props.handleNodeChange(event, props.user)} name=\"left\" >LEFT: {props.stats.user.uncategorized.left}</Button>\n            <Button onClick={(event) => props.handleNodeChange(event, props.user)} name=\"neutral\" >NEUTRAL: {props.stats.user.uncategorized.neutral}</Button>\n            <Button onClick={(event) => props.handleNodeChange(event, props.user)} name=\"right\" >RIGHT: {props.stats.user.uncategorized.right}</Button>\n          </ButtonGroup>\n\n          <ButtonGroup color=\"primary\" size=\"small\" aria-label=\"small button group\">\n            <Button \n              className={classes.buttonMismatch}\n              // variant=\"contained\" \n              color=\"primary\" \n              size=\"small\" \n              onClick={(event) => props.handleNodeChange(event, props.user)} \n              name=\"mismatch\" \n            >\n              MISMATCH {props.stats.user.mismatched}\n            </Button>\n          </ButtonGroup>\n\n        </Toolbar>\n      </AppBar> */}\n      \n      <Grid className={classes.grid}>\n          <Grid item className={classes.gridItem} xs={3}>\n            <Card className={classes.card} variant=\"outlined\">\n\n              <CardContent onClick={openUserTwitterPage}>\n                  <Typography variant=\"h6\">{props.user.name}</Typography>\n                  <Typography>@{props.user.screenName}</Typography>\n              </CardContent>\n\n              {/* <CardActions onClick={openUserTwitterPage}>\n                  <Typography className={props.user.ignored ? classes[\"ignored\"] : getCategoryClass(props.user.category)} align=\"center\">\n                    {props.user.ignored ? \"IGNORED\" : props.user.category.toUpperCase() || \"MANUAL: NONE\"}\n                  </Typography>\n                  <Typography className={getCategoryClass(props.user.categoryAuto)} align=\"center\">\n                    AUTO: {props.user.categoryAuto.toUpperCase() || \"NONE\"}\n                  </Typography>\n              </CardActions> */}\n\n              <CardMedia\n                className={classes.profileImage}\n                src={props.user.profileImageUrl || defaultProfileImage}\n                component=\"img\"\n                onError={e => {}}              \n              />\n              <CardMedia \n                className={classes.bannerImage} \n                src={props.user.bannerImageUrl || defaultBannerImage} \n                component=\"img\"\n                onError={e => {}}              \n              />\n              <CardContent>\n                <Typography>{props.user.description}</Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item className={classes.gridItem} xs={3}>\n            <Timeline\n              dataSource={{\n                sourceType: 'profile',\n                screenName: props.user.screenName\n              }}\n              options={{width: '100%', height: '800'}}\n            />\n          </Grid>\n          <Grid item className={classes.gridItem} xs={2}>\n            <TableContainer>\n              <Table className={classes.table} size=\"small\">\n                <TableHead>\n                  <StyledTableRow className={classes.tableHead}>\n                    <StyledTableCell>@{props.user.screenName}</StyledTableCell><StyledTableCell align=\"right\"></StyledTableCell>\n                  </StyledTableRow>\n                </TableHead>\n                <TableBody>\n                  <StyledTableRow>\n                    <StyledTableCell>Twitter ID</StyledTableCell><StyledTableCell align=\"right\">{props.user.nodeId}</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow>\n                    <StyledTableCell>Location</StyledTableCell><StyledTableCell align=\"right\">{props.user.location}</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow>\n                    <StyledTableCell>Created</StyledTableCell><StyledTableCell align=\"right\">{createdAt}</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow>\n                    <StyledTableCell>Twitter age</StyledTableCell><StyledTableCell align=\"right\">{twitterAgeString}</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow className={props.user.followersCount > 5000 ? classes.tableRowGreen : null}>\n                    <StyledTableCell>Followers</StyledTableCell><StyledTableCell align=\"right\">{props.user.followersCount}</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow>\n                    <StyledTableCell>Friends</StyledTableCell><StyledTableCell align=\"right\">{props.user.friendsCount}</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow>\n                    <StyledTableCell>Tweets</StyledTableCell><StyledTableCell align=\"right\">{props.user.statusesCount}</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow>\n                    <StyledTableCell>Tweets/day</StyledTableCell><StyledTableCell align=\"right\">{tweetRate}</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow>\n                    <StyledTableCell>Active</StyledTableCell><StyledTableCell align=\"right\">{lastSeen} ({lastSeenDuration} ago)</StyledTableCell>\n                  </StyledTableRow>\n                  {/* <StyledTableRow>\n                    <StyledTableCell>Last Active</StyledTableCell><StyledTableCell align=\"right\">{lastSeenDuration} ago</StyledTableCell>\n                  </StyledTableRow> */}\n                  <StyledTableRow>\n                    <StyledTableCell>Mentions</StyledTableCell><StyledTableCell align=\"right\">{props.user.mentions}</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow>\n                    <StyledTableCell>Mentions/hour</StyledTableCell><StyledTableCell align=\"right\">{props.user.rate ? 60*props.user.rate.toFixed(2) : 0}</StyledTableCell>\n                  </StyledTableRow>\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Grid>\n          <Grid item className={classes.gridItem} xs={2}>\n            <TableContainer>\n              <Table size=\"small\">\n                <TableHead>\n                  <StyledTableRow className={classes.tableHead}>\n                    <StyledTableCell colSpan={3}>ALL USERS</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow>\n                    <StyledTableCell>CAT</StyledTableCell>\n                    <StyledTableCell align=\"right\">MAN</StyledTableCell>\n                    <StyledTableCell align=\"right\">AUTO</StyledTableCell>\n                  </StyledTableRow>\n                </TableHead>\n                <TableBody>\n                  <StyledTableRow > \n                    <StyledTableCell>LEFT</StyledTableCell>\n                    <StyledTableCell align=\"right\">{props.stats.user.manual.left}</StyledTableCell>\n                    <StyledTableCell align=\"right\">{props.stats.user.auto.left}</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow>\n                    <StyledTableCell >RIGHT</StyledTableCell>\n                    <StyledTableCell align=\"right\">{props.stats.user.manual.right}</StyledTableCell>\n                    <StyledTableCell align=\"right\">{props.stats.user.auto.right}</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow>\n                    <StyledTableCell >NEUTRAL</StyledTableCell>\n                    <StyledTableCell align=\"right\">{props.stats.user.manual.neutral}</StyledTableCell>\n                    <StyledTableCell align=\"right\">{props.stats.user.auto.neutral}</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow>\n                    <StyledTableCell >POSITIVE</StyledTableCell>\n                    <StyledTableCell align=\"right\">{props.stats.user.manual.positive}</StyledTableCell>\n                    <StyledTableCell align=\"right\">{props.stats.user.auto.positive}</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow>\n                    <StyledTableCell >NEGATIVE</StyledTableCell>\n                    <StyledTableCell align=\"right\">{props.stats.user.manual.negative}</StyledTableCell>\n                    <StyledTableCell align=\"right\">{props.stats.user.auto.negative}</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow>\n                    <StyledTableCell >NONE</StyledTableCell>\n                    <StyledTableCell align=\"right\">{props.stats.user.manual.none}</StyledTableCell>\n                    <StyledTableCell align=\"right\">{props.stats.user.auto.none}</StyledTableCell>\n                  </StyledTableRow>\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Grid>\n          <Grid item className={classes.gridItem} xs={1}>\n            <FormGroup>\n              <FormControl >\n                <InputLabel id=\"category-manual\">CATEGORY</InputLabel>\n                <Select\n                  labelId=\"category-manual-label\"\n                  id=\"category-manual\"\n                  name=\"category\"\n                  className={getCategoryClass(props.user.category)}\n                  value={props.user.category || \"none\"}\n                  onChange={(event) => props.handleNodeChange(event, props.user)}\n                >\n                  <MenuItem dense={true} value={\"none\"} >NONE</MenuItem>\n                  <MenuItem dense={true} value={\"left\"} >LEFT</MenuItem>\n                  <MenuItem dense={true} value={\"neutral\"}>NEUTRAL</MenuItem>\n                  <MenuItem dense={true} value={\"right\"}>RIGHT</MenuItem>\n                  <MenuItem dense={true} value={\"positive\"}>POSITIVE</MenuItem>\n                  <MenuItem dense={true} value={\"negative\"}>NEGATIVE</MenuItem>\n\n                </Select>\n              </FormControl>\n\n              <Typography className={getCategoryClass(props.user.categoryAuto)} align=\"center\">\n                AUTO: {props.user.categoryAuto ? props.user.categoryAuto.toUpperCase() : \"NONE\"}\n              </Typography>\n\n              <FormControl \n                component=\"fieldset\"\n                className={classes.radioGroupCategory}\n                size=\"small\"\n              >\n                <FormControlLabel\n                  control={<Checkbox className={classes.checkbox} size=\"small\" checked={props.user.following || false} onChange={(event) => props.handleNodeChange(event, props.user)} name=\"following\" />}\n                  label={<Typography className={classes.radioButtonLabel}>FOLLOWING</Typography>}\n                />\n                <FormControlLabel\n                  control={<Checkbox className={classes.checkbox} size=\"small\" checked={props.user.categoryVerified || false} onChange={(event) => props.handleNodeChange(event, props.user)} name=\"catVerified\" />}\n                  label={<Typography className={classes.radioButtonLabel}>VERIFIED</Typography>}\n                />\n                <FormControlLabel\n                  control={<Checkbox className={classes.checkbox} size=\"small\" checked={props.user.ignored || false} onChange={(event) => props.handleNodeChange(event, props.user)} name=\"ignored\" />}\n                  label={<Typography className={classes.radioButtonLabel}>IGNORED</Typography>}\n                />\n                <FormControlLabel\n                  control={<Checkbox className={classes.checkbox} size=\"small\" checked={props.user.isBot || false} onChange={(event) => props.handleNodeChange(event, props.user)} name=\"isBot\" />}\n                  label={<Typography className={classes.radioButtonLabel}>BOT</Typography>}\n                />\n              </FormControl>\n            </FormGroup>\n          </Grid>\n        </Grid>\n    </>\n  );\n}\n\nexport default User;\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\n// import useSocket from 'use-socket.io-client';\n// import { useImmer } from 'use-immer';\nimport { useHistory, useLocation, useParams } from \"react-router-dom\";\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport socketClient from \"socket.io-client\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Container from '@material-ui/core/Container';\nimport AppBar from '@material-ui/core/AppBar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\n// import ButtonGroup from '@material-ui/core/ButtonGroup';\n// import InputBase from '@material-ui/core/InputBase';\n// import SearchIcon from '@material-ui/icons/Search';\nimport Link from '@material-ui/core/Link';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport './App.css';\nimport UserView from './UserView.js';\nimport HashtagView from './HashtagView.js';\n// import { ButtonGroup } from '@material-ui/core';\n\n// const ENDPOINT = \"http://mbp3:9997/view\";\nconst ENDPOINT = \"https://word.threeceelabs.com/view\";\nconst DEFAULT_AUTH_URL = \"http://word.threeceelabs.com/auth/twitter\";\n\nconst randomIntFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst randomId = randomIntFromInterval(1000000000, 9999999999);\nconst VIEWER_ID = \"viewer_\" + randomId;\n\nconst DEFAULT_VIEWER_OBJ = {\n  nodeId: VIEWER_ID,\n  userId: VIEWER_ID,\n  viewerId: VIEWER_ID,\n  screenName: VIEWER_ID,\n  type: \"viewer\",\n  namespace: \"view\",\n  timeStamp: Date.now(),\n  tags: {},\n};\n\nDEFAULT_VIEWER_OBJ.tags.type = \"viewer\";\n\nDEFAULT_VIEWER_OBJ.tags.mode = \"stream\";\nDEFAULT_VIEWER_OBJ.tags.entity = VIEWER_ID;\n\nconst viewerObj = DEFAULT_VIEWER_OBJ;\n\nconsole.log({viewerObj});\n\nlet socket = socketClient(ENDPOINT);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    flexGrow: 1,\n    boxShadow: 0,\n  },\n  appBar: {\n    backgroundColor: 'black',\n    marginBottom: theme.spacing(2),\n    boxShadow: 0,\n  },\n  tabs: {\n    flexGrow: 1,\n    color: 'white',\n  },\n  toolBar: {\n    shadows: 0,\n  },\n  title: {\n    // flexGrow: 1,\n    color: 'white',\n    marginRight: theme.spacing(2),\n  },\n  progress: {\n    // flexGrow: 1,\n    color: 'white',\n    marginRight: theme.spacing(2),\n  },\n  serverStatus: {\n    // flexGrow: 1,\n    color: 'gray',\n    padding: theme.spacing(1),\n  },\n  twitterAuth: {\n    // backgroundColor: 'black',\n    color: \"green\",\n    padding: theme.spacing(1),\n    marginRight: theme.spacing(2),\n  },  \n  buttonLogin: {\n    backgroundColor: \"green\",\n    marginRight: theme.spacing(2),\n  },\n  statusBar: {\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: \"white\",\n    '&:hover': {\n      backgroundColor: \"lightgray\",\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'primary',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n\n}));\n\nconst App = () => {\n\n  const history = useHistory();\n  let location = useLocation()\n  let { slug } = useParams();\n\n  // console.log({slug})\n\n  const classes = useStyles();\n\n  const defaultStatus = {\n    nodesPerMin: 0, \n    maxNodesPerMin: 0,\n    maxNodesPerMinTime: 0,\n    bestNetwork: {\n      networkId: \"\"\n    },\n    user: {\n      uncategorized: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        positive: 0,\n        negative: 0,\n        all: 0,\n        mismatched: 0\n      },\n      manual: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        positive: 0,\n        negative: 0,\n      },\n      auto: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        positive: 0,\n        negative: 0,\n      }\n    },\n    hashtag: {\n      uncategorized: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        positive: 0,\n        negative: 0,\n        all: 0,\n        mismatched: 0\n      },\n      manual: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        positive: 0,\n        negative: 0,\n      },\n      auto: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        positive: 0,\n        negative: 0,\n      }\n    }\n  }\n\n  const defaultUser = {\n\n    nodeId: null, \n    screenName: \"threecee\",\n    name: \"\",\n    location: \"\",\n    description: \"\",\n    profileImageUrl: \"https://pbs.twimg.com/profile_images/1205585278565527559/GrTkBpzl.jpg\",\n    bannerImage: \"\",\n    createdAt: null,\n    status: {},\n    followersCount: 0,\n    friendsCount: 0,\n    tweets: 0,\n\n    age: 0,\n    mentions: 0,\n    rate: 0,\n    rateMax: 0,\n    tweetsPerDay: 0,\n\n    lastSeen: null,\n    isBot: false,\n    following: false,\n    categoryVerfied: false,\n    category: \"none\",\n    categoryAuto: \"none\",\n  }\n\n  const defaultHashtag = {\n    nodeId: \"blacklivesmatter\",\n    text: \"BlackLivesMatter\",\n    categoryAuto: \"none\",\n    category: \"left\",\n    createdAt: 0,\n    lastSeen: 0,\n    age: 0,\n    mentions: 0,\n    rate: 0,\n    rateMax: 0,\n  }\n\n  const defaultTweets = {\n    search_metadata: {},\n    statuses: []\n  }\n\n  const [tabValue, setTabValue] = useState(0);\n\n  const [historyArray, setHistoryArray] = useState([location.pathname])\n  const historyArrayRef = useRef(historyArray)\n\n  const [historyArrayIndex, setHistoryArrayIndex] = useState(0)\n  const historyArrayIndexRef = useRef(historyArrayIndex)\n\n  const [twitterAuthenticated, setTwitterAuthenticated] = useState(false);\n  const twitterAuthenticatedRef = useRef(twitterAuthenticated)\n\n  const [twitterAuthenticatedUser, setTwitterAuthenticatedUser  ] = useState(\"\");\n  const twitterAuthenticatedUserRef = useRef(twitterAuthenticatedUser)\n\n  const [status, setStatus] = useState(defaultStatus);\n  const statusRef = useRef(status)\n\n  const [statusHashtag, setStatusHashtag] = useState(false);\n  const statusHashtagRef = useRef(statusHashtag)\n\n  const [tweets, setTweets] = useState(defaultTweets);\n  const tweetsRef = useRef(tweets)\n\n  const [progress, setProgress] = useState(\"loading ...\");\n\n  const [displayNodeType, setDisplayNodeType] = useState(\"user\");\n  const displayNodeTypeRef = useRef(displayNodeType)\n\n  const [currentUsers, setUsers] = useState([]);\n  const currentUsersRef = useRef(currentUsers)\n\n  const [currentUser, setCurrentUser] = useState(defaultUser);\n  const currentUserRef = useRef(currentUser)\n\n  const [currentHashtag, setCurrentHashtag] = useState(defaultHashtag);\n  const currentHashtagRef = useRef(currentHashtag)\n  \n  useEffect(() => {\n    const tempHistoryArray = [...historyArrayRef.current]\n    if (tempHistoryArray.length > 0 && location.pathname !== tempHistoryArray[0]){\n      tempHistoryArray.push(location.pathname)\n      setHistoryArray(() => [...tempHistoryArray])\n      setHistoryArrayIndex(tempHistoryArray.length-1);\n      historyArrayRef.current = tempHistoryArray\n    }\n  }, [location.pathname])\n  \n  useEffect(() => { \n    twitterAuthenticatedUserRef.current = twitterAuthenticatedUser\n  }, [twitterAuthenticatedUser])\n  \n  useEffect(() => { \n    twitterAuthenticatedRef.current = twitterAuthenticated \n  }, [twitterAuthenticated])\n  \n  useEffect(() => { \n    displayNodeTypeRef.current = displayNodeType \n  }, [displayNodeType])\n  \n  useEffect(() => { \n    currentUsersRef.current = currentUsers \n  }, [currentUsers])\n  \n  useEffect(() => { \n    currentUserRef.current = currentUser\n  }, [currentUser])\n  \n  useEffect(() => { \n    currentHashtagRef.current = currentHashtag \n  }, [currentHashtag])\n  \n  useEffect(() => { \n    statusHashtagRef.current = statusHashtag\n  }, [statusHashtag])\n  \n  useEffect(() => { \n    statusRef.current = status \n  }, [status])\n  \n  useEffect(() => { \n    tweetsRef.current = tweets \n  }, [tweets])\n  \n  const currentNode = displayNodeTypeRef.current === \"user\" ? currentUserRef.current : currentHashtagRef.current;\n  // const currentNodeRouteSlug = displayNodeTypeRef.current === \"user\" ? currentUserRef.current.screenName : currentHashtagRef.current.nodeId;\n\n  // history.replace(`/categorize/${displayNodeTypeRef.current}/${currentNodeRouteSlug}`)\n\n  const handleTabChange = (event, newValue) => {\n    event.preventDefault()\n    console.log({newValue})\n    setDisplayNodeType(newValue === 0 ? \"user\" : \"hashtag\")\n    setTabValue(newValue);\n  }\n\n  const handleSearchNode = (searchString) => {\n    setProgress(progress => \"searchNode\");\n    const searchTerm = displayNodeType === \"user\" ? \"@\" + searchString : \"#\" + searchString\n    console.log(\"SEARCH TERM: \" + searchTerm)\n    socket.emit(\"TWITTER_SEARCH_NODE\", searchTerm)\n  }\n\n  const handleLoginLogout = useCallback((event) => {\n\n    event.preventDefault()\n    setProgress(progress => \"loginLogout\");\n\n    if (twitterAuthenticatedRef.current){\n      console.warn(\"LOGGING OUT\");\n      socket.emit(\"logout\", viewerObj);\n      setTwitterAuthenticated(false)\n      setTwitterAuthenticatedUser(\"\")\n      setProgress(progress => \"idle\");\n    }\n    else{\n      console.warn(\n        \"LOGIN: AUTH: \" +\n          twitterAuthenticatedRef.current +\n          \" | URL: \" +\n          DEFAULT_AUTH_URL\n      );\n      window.open(DEFAULT_AUTH_URL, \"LOGIN\", \"_new\");\n      socket.emit(\"login\", viewerObj);\n    }\n  }, []);\n\n  const currentUsersAvailable = (eventName) => {\n    if (currentUsersRef.current && currentUsersRef.current.length > 0){\n      const tempUsers = [...currentUsersRef.current]\n      const user = tempUsers.shift()\n      setUsers(tempUsers)\n      console.log(\"USING CURRENT USERS | CURRENT USERS: \" + tempUsers.length + \" | @\" + user.screenName)\n      setCurrentUser(user);\n      setProgress(\"idle\");\n      return tempUsers.length;\n    }\n    return 0;\n  }\n\n  const handleNodeChange = useCallback((event, node) => {\n\n    if (event.preventDefault !== undefined) { \n      event.preventDefault() \n    }\n\n    if (displayNodeTypeRef.current === \"user\"){\n      console.log(\"handleNodeChange | user: @\" + node.screenName)\n    }\n    else{\n      console.log(\"handleNodeChange | hashtag: #\" + node.nodeId)\n    }\n\n    if (event.persist !== undefined) { \n      event.persist() \n    }\n\n    // let eventName = event.currentTarget.name || \"nop\";\n    // let eventValue = event.currentTarget.value;\n    // let eventChecked = event.currentTarget.checked;\n\n    let eventName = event.target.name || \"nop\";\n    let eventValue = event.target.value;\n    let eventChecked = event.target.checked;\n\n    // if (event.currentTarget.name === undefined && event.code){\n    if (event.target.name === undefined && event.code){\n\n      switch (event.code){\n\n        case \"ArrowRight\":\n        case \"ArrowLeft\":\n          console.log(\"location.pathname: \" + location.pathname)\n          console.log({historyArrayRef})\n          console.log({historyArrayIndexRef})\n          eventName = \"history\"\n          if (event.code === \"ArrrowRight\"){\n          }\n          if (event.code === \"ArrowLeft\"){ \n            if (historyArrayRef.current.length > 0){\n              historyArrayRef.current.pop();\n              const nextRoute = historyArrayRef.current.pop();\n              history.push(nextRoute)\n              eventValue = nextRoute.split(\"/\").pop()\n            }\n          }\n          break;\n\n        case \"KeyA\":\n          eventName = \"all\"\n          break;\n\n        case \"KeyD\":\n        case \"KeyL\":\n          if (event.shiftKey){\n            eventName = \"category\"\n            eventValue = \"left\"\n          }\n          else{\n            eventName = \"left\"\n          }\n          break;\n\n        case \"KeyN\":\n          if (event.shiftKey){\n            eventName = \"category\"\n            eventValue = \"neutral\"\n          }\n          else{\n            eventName = \"neutral\"\n          }\n          break;\n\n        case \"KeyR\":\n          if (event.shiftKey){\n            eventName = \"category\"\n            eventValue = \"right\"\n          }\n          else{\n            eventName = \"right\"\n          }\n          break;\n\n        case \"KeyHyphen\":\n          if (event.shiftKey){\n            eventName = \"category\"\n            eventValue = \"negative\"\n          }\n          else{\n            eventName = \"negative\"\n          }\n          break;\n\n        case \"KeyEquals\":\n          if (event.shiftKey){\n            eventName = \"category\"\n            eventValue = \"positive\"\n          }\n          else{\n            eventName = \"positive\"\n          }\n          break;\n\n        case \"KeyI\":\n        case \"KeyX\":\n          if (event.shiftKey){\n            eventName = \"ignored\"\n            eventChecked = !node.ignored\n          }\n          break;\n\n        case \"KeyV\":\n          if (event.shiftKey){\n            eventName = \"catVerified\"\n            eventChecked = !node.categoryVerified\n          }\n          break;\n\n        case \"KeyB\":\n          if (event.shiftKey){\n            eventName = \"isBot\"\n            eventChecked = !node.isBot\n          }\n          break;\n\n        default:\n      }\n    }\n\n    let searchFilter;\n\n    if (node.nodeType === \"user\"){\n      searchFilter = \"@?\";\n      console.log(\"handleNodeChange | @\" + node.screenName + \" | name: \" + eventName + \" | value: \" + eventValue)\n    }\n    else{\n      searchFilter = \"#?\";\n      console.log(\"handleNodeChange | #\" + node.nodeId + \" | name: \" + eventName + \" | value: \" + eventValue)\n    }\n\n    setProgress(eventName);\n\n    let usersAvailable = 0;\n\n    switch (eventName){\n\n      case \"nop\":\n        break;\n\n      case \"history\":\n        if (node.nodeType === \"user\"){\n          console.log(\"handleNodeChange | history | @\" + node.screenName + \" | name: \" + eventName + \" | value: \" + eventValue)\n          socket.emit(\"TWITTER_SEARCH_NODE\", \"@\" + eventValue);\n        }\n        else{\n          console.log(\"handleNodeChange | history | #\" + node.nodeId + \" | name: \" + eventName + \" | value: \" + eventValue)\n          socket.emit(\"TWITTER_SEARCH_NODE\", \"#\" + eventValue);\n        }\n        break;\n\n      case \"all\":\n      case \"left\":\n      case \"neutral\":\n      case \"right\":\n      case \"positive\":\n      case \"negative\":\n\n        searchFilter += eventName\n\n        usersAvailable = currentUsersAvailable(eventName)\n\n        // if (eventName !== \"all\" || usersAvailable < 3){\n        if (usersAvailable < 3){\n          console.log(\"GET MORE USERS | usersAvailable: \" + usersAvailable)\n          socket.emit(\"TWITTER_SEARCH_NODE\", searchFilter);\n        }\n\n        break\n\n      case \"mismatch\":\n        if (node.nodeType === \"user\"){\n          socket.emit(\"TWITTER_SEARCH_NODE\", \"@?mm\");\n        }\n        break\n\n      case \"category\":\n        if (twitterAuthenticatedRef.current){\n          socket.emit(\"TWITTER_CATEGORIZE_NODE\", {\n            category: eventValue,\n            following: true,\n            node: node,\n          });\n        }\n        else{\n          alert(\"NOT AUTHENTICATED\")\n          setProgress(\"idle\")\n          return;\n        }\n        break\n\n      case \"isBot\":\n      case \"following\":\n      case \"catVerified\":\n      case \"ignored\":\n\n        if (!twitterAuthenticatedRef.current){\n          alert(\"NOT AUTHENTICATED\")\n          setProgress(\"idle\")\n          return;\n        }\n\n        if (eventName === \"ignored\"){\n          if (eventChecked){\n            socket.emit(\"TWITTER_IGNORE\", node);\n          }\n          else{\n            socket.emit(\"TWITTER_UNIGNORE\", node);\n          }\n          break\n        }\n\n        if (node.nodeType === \"user\"){\n\n          if (eventName === \"bot\"){\n            if (eventChecked){\n              socket.emit(\"TWITTER_BOT\", node);\n            }\n            else{\n              socket.emit(\"TWITTER_UNBOT\", node);\n            }\n          }\n\n          if (eventName === \"following\"){\n            if (eventChecked){\n              socket.emit(\"TWITTER_FOLLOW\", node);\n            }\n            else{\n              socket.emit(\"TWITTER_UNFOLLOW\", node);\n            }\n          }\n\n          if (eventName === \"catVerified\"){\n            if (eventChecked){\n              socket.emit(\"TWITTER_CATEGORY_VERIFIED\", node);\n            }\n            else{\n              socket.emit(\"TWITTER_CATEGORY_UNVERIFIED\", node);\n            }\n          }\n          \n        }\n\n        break\n\n      default:\n        console.log(\"handleNodeChange: UNKNOWN NAME: \" + eventName + \" | VALUE: \" + eventValue)\n        console.log({event})\n    }\n    \n  }, [history, location])\n\n  const nodeValid = (node) => {\n\n    if (node === undefined) return false\n    if (node.nodeId === undefined) return false\n\n    if (node.nodeType === \"user\"){\n      if (node.screenName === undefined) return false\n    } \n\n    return true\n  }\n\n  useEffect(() => {\n    if (displayNodeTypeRef.current === \"user\"){\n      console.log({history})\n      console.log(\"loc:  \" + location.pathname)\n      // if (!history.location.pathname.endsWith(\"/user/\" + currentUserRef.current.screenName)){\n      if (!location.pathname.endsWith(\"/user/\" + currentUserRef.current.screenName)){\n        console.log(\"history push: /categorize/user/\" + currentUserRef.current.screenName)\n        history.push(\"/categorize/user/\" + currentUserRef.current.screenName)\n      }\n    }\n  }, [history, currentUser, location.pathname])\n\n  useEffect(() => {\n    if (displayNodeTypeRef.current === \"hashtag\"){\n      console.log(\"history loc:  \" + history.location.pathname)\n      if (!history.location.pathname.endsWith(\"/hashtag/\" + currentHashtagRef.current.nodeId)){\n        console.log(\"history push: /categorize/hashtag/\" + currentHashtagRef.current.nodeId)\n        history.push(\"/categorize/hashtag/\" + currentHashtagRef.current.nodeId)\n      }\n    }\n  }, [history, currentHashtag, location.pathname])\n\n  useEffect(() => {\n\n    socket.on(\"connect\", ()=>{\n\n      console.log(\"CONNECTED: \" + socket.id)\n\n      setProgress(progress => \"authentication\");\n\n      socket.emit(\"authentication\", {\n        namespace: \"view\",\n        userId: \"test\",\n        password: \"0123456789\",\n      });\n    })\n\n    socket.on(\"TWITTER_USERS\", (response) => {\n\n      console.debug(\"RX TWITTER_USERS\");\n\n      if (response.nodes) {\n        console.debug(\"RX nodes: \" + response.nodes.length);\n        setUsers(users => [...users, ...response.nodes])\n      }\n\n      setProgress(progress => \"idle\");\n      setStatus(status => response.stats)\n    });\n\n    socket.on(\"SET_TWITTER_USER\", (response) => {\n\n      console.debug(\"RX SET_TWITTER_USER\");\n\n      if (response.nodes) {\n        setUsers(users => [...users, ...response.nodes])\n        console.debug(\"RX nodes: \" + response.nodes.length);\n      }\n      \n      if (nodeValid(response.node)) {\n        setCurrentUser(currentUser => response.node)\n        console.debug(\"new: @\" + response.node.screenName);\n      }\n      else{\n\n      }\n\n      setProgress(progress => \"idle\");\n      setStatus(status => response.stats)\n    });\n\n    socket.on(\"TWITTER_SEARCH_NODE_UNKNOWN_MODE\", (response) => {\n      console.debug(\"RX TWITTER_SEARCH_NODE_UNKNOWN_MODE\");\n      console.debug({response})\n      setProgress(progress => \"idle\");\n      setStatus(status => response.stats)\n    })\n\n    socket.on(\"TWITTER_HASHTAG_NOT_FOUND\", (response) => {\n      console.debug(\"RX TWITTER_HASHTAG_NOT_FOUND\");\n      console.debug({response})\n      setStatusHashtag(statusHashtag => \"notFound\")\n      setCurrentHashtag(currentHashtag => {\n        return {nodeId: response.searchNode.slice(1)}\n      }) \n      setTweets({ search_metadata: {}, statuses: [] })\n      setProgress(progress => \"idle\");\n      setStatus(status => response.stats)\n    })\n\n    socket.on(\"SET_TWITTER_HASHTAG\", (response) => {\n\n      console.debug(\"RX SET_TWITTER_HASHTAG\");\n\n      if (nodeValid(response.node)) { \n        setStatusHashtag(statusHashtag => \"found\")\n        setCurrentHashtag(currentHashtag => response.node) \n        console.debug(\"new: #\" + response.node.nodeId);\n        if (response.tweets) {\n          console.debug(\"RX SET_TWITTER_HASHTAG | SET TWEETS: \" + response.tweets.statuses.length);\n          setTweets(tweets => response.tweets)\n        }\n      }\n      else{\n        setStatusHashtag(statusHashtag => \"invalid\")\n        console.debug(\"INVALID HT NODE | RESULTS\");\n        console.debug({response})\n      }\n\n      setProgress(progress => \"idle\");\n      setStatus(status => response.stats)\n    });\n\n    socket.on(\"action\", (action) => {\n      \n      console.debug(\"RX ACTION | socket: \" + socket.id + \" | TYPE: \" + action.type);\n      console.debug(\"RX ACTION | \", action.data);\n\n      switch (action.type){\n\n        case \"user\":\n            setCurrentUser(currentUser => action.data)\n            console.log(\"USER: @\" + action.data.screenName + \" | \" + action.data.profileImageUrl)\n          break\n\n        case \"hashtag\":\n            console.log(\"HT: #\" + action.data.text)\n          break\n\n        case \"stats\":\n            setStatus(() => action.data)\n          break\n\n        default:\n      }\n\n    });   \n\n    socket.on(\"authenticated\", function () {\n      setProgress(progress => \"idle\");\n      console.debug(\"AUTHENTICATED | \" + socket.id);\n      socket.emit(\"TWITTER_SEARCH_NODE\", \"@?all\")\n      socket.emit(\"TWITTER_SEARCH_NODE\", \"@threecee\")\n      socket.emit(\"TWITTER_SEARCH_NODE\", \"#blacklivesmatter\")\n    });\n\n    socket.on(\"USER_AUTHENTICATED\", function (userObj) {\n      setProgress(progress => \"idle\");\n      setTwitterAuthenticated(() => true)\n      setTwitterAuthenticatedUser(twitterAuthenticatedUser => userObj.screenName)\n      console.log(\"RX TWITTER USER_AUTHENTICATED | USER: @\" + userObj.screenName);\n    });\n\n    socket.on(\"TWITTER_USER_NOT_FOUND\", (response) => {\n\n      console.debug(\"RX TWITTER_USER_NOT_FOUND\");\n      console.debug(response);\n\n      setStatus(status => response.stats);\n      if (response.searchNode.startsWith(\"@?\") && response.results && !response.results.endCursor){\n        console.debug(\"RETRY NEXT UNCAT: \" + response.searchNode);\n        socket.emit(\"TWITTER_SEARCH_NODE\", response.searchNode);\n      }\n      else{\n        setProgress(progress => \"idle\");\n      }\n    });\n    \n    setProgress(\"idle\")\n\n    return () => socket.disconnect();\n\n  }, [])\n\n  // history\n  // - back\n  useHotkeys('left', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // - forward\n  useHotkeys('right', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // all\n  useHotkeys('A', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // left\n  useHotkeys('L', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+L', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('D', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+D', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // right\n  useHotkeys('R', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+R', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // neutral\n  useHotkeys('N', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+N', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // negative\n  useHotkeys('-', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+-', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // positive\n  useHotkeys('=', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+=', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // ignore toggle\n  useHotkeys('shift+I', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+X', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // bot toggle\n  useHotkeys('shift+B', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // verified toggle\n  useHotkeys('shift+V', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n\n  const displayNode = (nodeType) => {\n    if (nodeType === \"user\"){\n      return <UserView user={currentUserRef.current} stats={statusRef.current} handleNodeChange={handleNodeChange} handleSearchNode={handleSearchNode}/>\n    }\n    else{\n      return <HashtagView hashtag={currentHashtagRef.current} statusHashtag={statusHashtagRef.current} stats={statusRef.current} tweets={tweetsRef.current} handleNodeChange={handleNodeChange} handleSearchNode={handleSearchNode}/>\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Container component=\"main\" maxWidth={false}>\n        <AppBar  className={classes.appBar} position=\"static\">\n          <Toolbar className={classes.toolBar}>\n\n            <Typography className={classes.title}>\n              {/* Categorizer | USER HISTORY: {userHistory.length} | PREV USER: {userHistory.length > 0 ? userHistory[userHistory.length-1] : \"\"} */}\n              CATEGORIZE\n            </Typography>\n            \n            <Tabs \n              className={classes.tabs}\n              value={tabValue} \n              onChange={handleTabChange}\n            >\n              <Tab label=\"User\" />\n              <Tab label=\"Hashtag\"/>\n            </Tabs>\n\n            {progress !== \"idle\" ? <><Typography className={classes.progress}>{`${progress} ...`}</Typography> <CircularProgress className={classes.progress}>{progress}</CircularProgress></> : <></>}\n\n            {/* <Typography  className={classes.serverStatus}>\n              NN: {status.bestNetwork.networkId}\n            </Typography>\n            <Typography  className={classes.serverStatus}>\n              {status.nodesPerMin} nodes/min (max: {status.maxNodesPerMin} | time: {formatDateTime(status.maxNodesPerMinTime)})\n            </Typography> */}\n\n            <Link\n              className={classes.twitterAuth}\n              href={\"http://twitter.com/\" + twitterAuthenticatedUserRef.current}\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              {twitterAuthenticatedUserRef.current ? \"@\" + twitterAuthenticatedUserRef.current : \"\"}\n            </Link>\n\n            <Button \n              className={classes.buttonLogin}\n              variant=\"contained\" \n              color=\"primary\" \n              size=\"small\" \n              onClick={event => { handleLoginLogout(event)}} \n              name=\"login\"\n              label=\"login\"\n            >\n              {twitterAuthenticatedRef.current ? \"LOGOUT\" : \"LOGIN TWITTER\"}\n            </Button>\n\n          </Toolbar>\n        </AppBar>\n        {displayNode(displayNodeTypeRef.current)}\n      </Container>\n    </div>\n  );\n}\n\nexport default App;","import React, { useState } from 'react';\nimport { Tweet } from 'react-twitter-widgets'\n\nimport Duration from 'duration';\n\nimport AppBar from '@material-ui/core/AppBar';\n// import Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Card from '@material-ui/core/Card';\n// import CardActionArea from '@material-ui/core/CardActionArea';\n// import CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n// import CardHeader from '@material-ui/core/CardHeader';\n// import CardMedia from '@material-ui/core/CardMedia';\n// import CheckBoxIcon from '@material-ui/icons/CheckBox';\n// import CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\n// import FormLabel from '@material-ui/core/FormLabel';\nimport Grid from '@material-ui/core/Grid';\n// import IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\n// import MenuIcon from '@material-ui/icons/Menu';\n// import Paper from '@material-ui/core/Paper';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\n// import TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TableHead } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 2,\n  },\n  grid: {\n    display: 'flex',\n  },\n  gridItem: {\n    margin: 5,\n  },  \n  card: {\n    raised: false,\n    maxWidth: 400,\n  },\n  table: {\n  },\n  tableRowGreen: {\n    backgroundColor: 'lightgreen',\n  },\n  appBar: {\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  statusBar: {\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    color: 'blue',\n  },\n  search: {\n    flexGrow: 1,\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: \"white\",\n    '&:hover': {\n      backgroundColor: \"lightgray\",\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'primary',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n\n  buttonGroupLabel: {\n    color: 'blue',\n    marginRight: theme.spacing(1),\n  },\n  buttonAll: {\n    color: 'black',\n  },\n  buttonLeft: {\n    color: 'blue',\n  },\n  buttonNeutral: {\n    color: 'gray',\n  },\n  buttonRight: {\n    color: 'red',\n  },\n  buttonMismatch: {\n    margin: 5\n  },\n\n  autoCategory:{\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n  },\n\n  left: {\n    backgroundColor: 'blue',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n  },\n  neutral: {\n    backgroundColor: 'gray',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n  },\n  right: {\n    backgroundColor: 'red',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n  },\n  none: {\n    backgroundColor: 'white',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n  },\n\n}));\n\nconst formatDate = (dateInput) => {\n  return new Date(dateInput).toLocaleDateString(\n    'en-gb',\n    {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }\n  );\n}\n\nconst HashtagView = (props) => {\n\n  const classes = useStyles();\n\n  const createdAt = props.hashtag.createdAt ? formatDate(props.hashtag.createdAt) : \"---\"\n  const lastSeen = props.hashtag.lastSeen ? formatDate(props.hashtag.lastSeen) : \"---\"\n \n  const lastSeenDuration = props.hashtag.lastSeen ? new Duration(new Date(props.hashtag.lastSeen)).toString(1, 4) : \"---\"\n  const twitterAge = props.hashtag.createdAt ? new Duration(new Date(props.hashtag.createdAt)) : \"---\"\n  const twitterAgeString = props.hashtag.createdAt ? twitterAge.toString(1, 4) : \"---\"\n\n  const [hashtagSearch, setHashtagSearch] = useState(\"\");\n\n  // useEffect(() => {\n  //   setHashtagSearch(props.hashtag.nodeId)\n  // }, [props])\n  \n  const handleChangeSearch = (event) => {\n    console.log(\"handleChangeSearch: \" + event.target.value)\n    setHashtagSearch(event.target.value);\n  }\n\n  const handleKeyPress = (event) => {\n    if (event.charCode === 13) { // enter key pressed\n      console.log(\"ENTER: hashtagSearch: \" + hashtagSearch)\n      props.handleSearchNode(hashtagSearch)\n    }\n  }\n\n  const openHashtagTwitterPage = () => {\n    console.log(\"open twitter\")\n    window.open(`https://twitter.com/search?f=tweets&q=%23${props.hashtag.nodeId || null}`, \"_blank\") //to open new page\n  }\n\n  const displayTweets = (tweets) => {\n    if (!tweets || tweets === undefined || tweets.statuses === undefined) { return <></>}\n    return tweets.statuses.map((tweet) => {\n      return <Tweet key={tweet.id_str} tweetId={tweet.id_str} options={{ width: \"400\" }} />\n    })\n  }\n\n  return (\n    <>\n      <AppBar  className={classes.appBar} position=\"static\">\n        <Toolbar variant=\"dense\">\n\n          {/* <Typography variant=\"h6\" className={classes.title}>\n            Hashtag\n          </Typography> */}\n\n          <div className={classes.search}>\n\n            <div className={classes.searchIcon}>\n              <SearchIcon color=\"primary\"/>\n            </div>\n\n            <InputBase\n              placeholder=\"search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n              value={hashtagSearch}\n              onKeyPress={handleKeyPress}\n              onChange={handleChangeSearch}\n            />\n\n          </div>\n\n          <Typography className={classes.buttonGroupLabel}>\n            UNCAT\n          </Typography>   \n\n          <ButtonGroup variant=\"contained\" color=\"primary\" size=\"small\" aria-label=\"small button group\">\n            <Button onClick={(event) => props.handleNodeChange(event, props.hashtag)} name=\"all\" >ALL: {props.stats.hashtag.uncategorized.all}</Button>\n          </ButtonGroup>\n\n        </Toolbar>\n      </AppBar>\n\n      <Grid className={classes.grid}>\n        <Grid item className={classes.gridItem} xs={3}>\n          <Card className={classes.card} variant=\"outlined\">\n            <CardContent onClick={openHashtagTwitterPage}>\n              <Typography variant=\"h6\">#{props.statusHashtag === \"notFound\" ? props.hashtag.nodeId + \" NOT FOUND\" : props.hashtag.nodeId}</Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item className={classes.gridItem} xs={3}>{displayTweets(props.tweets)}</Grid>\n\n        <Grid item className={classes.gridItem} xs={3}>\n          <TableContainer>\n            <Table className={classes.table} size=\"small\">\n              <TableBody>\n                <TableRow>\n                  <TableCell>id</TableCell><TableCell align=\"right\">{props.hashtag.nodeId}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>created</TableCell><TableCell align=\"right\">{createdAt}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>twitter age</TableCell><TableCell align=\"right\">{twitterAgeString}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>last seen</TableCell><TableCell align=\"right\">{lastSeen}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>last seen</TableCell><TableCell align=\"right\">{lastSeenDuration} ago</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>mentions</TableCell><TableCell align=\"right\">{props.hashtag.mentions ? props.hashtag.mentions : \"---\"}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>mentions/min</TableCell><TableCell align=\"right\">{props.hashtag.rate ? props.hashtag.rate.toFixed(1) : \"---\"}</TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item className={classes.gridItem} xs={2}>\n          <TableContainer>\n            <Table className={classes.table} size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>CAT</TableCell>\n                  <TableCell align=\"left\">MAN</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                <TableRow>\n                  <TableCell>left</TableCell>\n                  <TableCell align=\"right\">{props.stats.hashtag.manual.left}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>neutral</TableCell>\n                  <TableCell align=\"right\">{props.stats.hashtag.manual.neutral}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>right</TableCell>\n                  <TableCell align=\"right\">{props.stats.hashtag.manual.right}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>positive</TableCell>\n                  <TableCell align=\"right\">{props.stats.hashtag.manual.positive}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>negative</TableCell>\n                  <TableCell align=\"right\">{props.stats.hashtag.manual.negative}</TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item className={classes.gridItem} xs={1}>\n          <FormGroup>\n            <FormControl component=\"fieldset\">\n              <RadioGroup aria-label=\"category\" name=\"category\" value={props.hashtag.category || \"none\"} onChange={(event) => props.handleNodeChange(event, props.hashtag)}>\n                <FormControlLabel labelPlacement=\"start\" value=\"left\" control={<Radio />} label=\"left\"/>\n                <FormControlLabel labelPlacement=\"start\" value=\"neutral\" control={<Radio />} label=\"neutral\" />\n                <FormControlLabel labelPlacement=\"start\" value=\"right\" control={<Radio />} label=\"right\" />\n                <FormControlLabel labelPlacement=\"start\" value=\"positive\" control={<Radio />} label=\"positive\" />\n                <FormControlLabel labelPlacement=\"start\" value=\"negative\" control={<Radio />} label=\"negative\" />\n                <FormControlLabel labelPlacement=\"start\" value=\"none\" control={<Radio />} label=\"none\" />\n              </RadioGroup>\n            </FormControl>\n\n            <FormControlLabel\n              control={<Checkbox checked={props.hashtag.ignored || false} onChange={(event) => props.handleNodeChange(event, props.hashtag)} name=\"ignored\" />}\n              label=\"ignored\"\n              labelPlacement=\"start\"\n            />\n          </FormGroup>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default HashtagView;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// ReactDOM.render(\n//   <Router>\n//     <div>\n//       <Switch>\n//         <Route path=\"/categorize/user/:slug\">\n//           <App />\n//         </Route>\n//       </Switch>\n//     </div>\n//   </Router>,\n//   document.getElementById('root')\n// );\n\nReactDOM.render(\n  <Router>\n    <div>\n      <Switch>\n        <Route path=\"/categorize/user/:slug\">\n          <App />\n        </Route>\n        <Route path=\"/categorize/hashtag/:slug\">\n          <App />\n        </Route>\n        <Route >\n          <App />\n        </Route>\n      </Switch>\n    </div>\n  </Router>,\n  document.getElementById('root')\n);\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}