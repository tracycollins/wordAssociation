{"version":3,"sources":["App.js","User.js","reportWebVitals.js","index.js"],"names":["min","max","useStyles","makeStyles","theme","root","flexGrow","grid","display","gridItem","margin","card","raised","maxWidth","profileImage","maxHeight","bannerImage","height","table","tableRowGreen","backgroundColor","appBar","statusBar","menuButton","marginRight","spacing","title","color","search","position","borderRadius","shape","marginLeft","width","breakpoints","up","searchIcon","padding","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","buttonGroupLabel","buttonAll","buttonLeft","buttonNeutral","buttonRight","buttonMismatch","autoCategory","left","neutral","right","none","formatDate","dateInput","Date","toLocaleDateString","year","month","day","User","props","classes","createdAt","user","lastSeen","lastSeenDuration","Duration","toString","twitterAge","twitterAgeString","tweetRate","days","Math","ceil","statusesCount","useState","screenName","userSearch","setUserSearch","useEffect","AppBar","className","Toolbar","Typography","variant","InputBase","placeholder","input","inputProps","value","onKeyPress","event","charCode","console","log","handleSearchUser","onChange","target","ButtonGroup","size","aria-label","Button","onClick","handleUserChange","name","stats","uncategorized","all","mismatched","Grid","item","xs","Card","CardContent","window","open","CardMedia","src","profileImageUrl","component","onError","e","bannerImageUrl","description","dataSource","sourceType","options","TableContainer","Table","TableBody","TableRow","TableCell","align","nodeId","location","followersCount","friendsCount","mentions","rate","toFixed","TableHead","manual","auto","FormGroup","category","getCategoryClass","categoryAuto","toUpperCase","FormControl","RadioGroup","FormControlLabel","labelPlacement","control","Radio","label","Checkbox","checked","categoryVerified","following","ignored","isBot","DEFAULT_AUTH_URL","VIEWER_ID","floor","random","DEFAULT_VIEWER_OBJ","userId","viewerId","type","namespace","timeStamp","now","tags","mode","entity","socket","viewerObj","serverStatus","twitterAuth","buttonLogin","App","history","useHistory","twitterAuthenticated","setTwitterAuthenticated","twitterAuthenticatedUser","setTwitterAuthenticatedUser","nodesPerMin","maxNodesPerMin","maxNodesPerMinTime","bestNetwork","networkId","status","setStatus","progress","setProgress","tweets","age","rateMax","tweetsPerDay","categoryVerfied","currentUser","setCurrentUser","setUserHistory","useCallback","undefined","persist","preventDefault","eventName","currentTarget","eventValue","eventChecked","code","goForward","pathname","split","pop","goBack","shiftKey","searchFilter","emit","node","endsWith","push","socketClient","on","id","password","results","debug","prevUserHistory","action","data","text","userObj","disconnect","useHotkeys","Container","CircularProgress","hour","minute","Link","href","rel","warn","searchString","searchTerm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a2387013.chunk.js","sourcesContent":["import React, { useState, useEffect, useLayoutEffect, useCallback } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport socketClient from \"socket.io-client\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Container from '@material-ui/core/Container';\nimport AppBar from '@material-ui/core/AppBar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\n// import ButtonGroup from '@material-ui/core/ButtonGroup';\n// import InputBase from '@material-ui/core/InputBase';\n// import SearchIcon from '@material-ui/icons/Search';\nimport Link from '@material-ui/core/Link';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport './App.css';\nimport User from './User.js';\n\n// const ENDPOINT = \"http://mbp3:9997/view\";\nconst ENDPOINT = \"https://word.threeceelabs.com/view\";\nconst DEFAULT_AUTH_URL = \"http://word.threeceelabs.com/auth/twitter\";\n\nconst randomIntFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst randomId = randomIntFromInterval(1000000000, 9999999999);\nconst VIEWER_ID = \"viewer_\" + randomId;\n\nconst DEFAULT_VIEWER_OBJ = {\n  nodeId: VIEWER_ID,\n  userId: VIEWER_ID,\n  viewerId: VIEWER_ID,\n  screenName: VIEWER_ID,\n  type: \"viewer\",\n  namespace: \"view\",\n  timeStamp: Date.now(),\n  tags: {},\n};\n\nDEFAULT_VIEWER_OBJ.tags.type = \"viewer\";\n\nDEFAULT_VIEWER_OBJ.tags.mode = \"stream\";\nDEFAULT_VIEWER_OBJ.tags.entity = VIEWER_ID;\n\nconst viewerObj = DEFAULT_VIEWER_OBJ;\n\nconsole.log({viewerObj});\n\nlet socket;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  title: {\n    flexGrow: 1,\n    color: 'blue',\n  },\n  serverStatus: {\n    // flexGrow: 1,\n    color: 'gray',\n    padding: theme.spacing(1),\n  },\n  twitterAuth: {\n    // backgroundColor: 'black',\n    color: \"green\",\n    padding: theme.spacing(1),\n    marginRight: theme.spacing(2),\n  },  \n  buttonLogin: {\n    marginRight: theme.spacing(2),\n  },\n  statusBar: {\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: \"white\",\n    '&:hover': {\n      backgroundColor: \"lightgray\",\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'primary',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n\n}));\n\nconst formatDateTime = (dateInput) => {\n  return new Date(dateInput).toLocaleDateString(\n    'en-gb',\n    {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric'\n    }\n  );\n}\n\nconst App = () => {\n\n  const history = useHistory();\n\n  const classes = useStyles();\n\n  const defaultStatus = {\n    nodesPerMin: 0, \n    maxNodesPerMin: 0,\n    maxNodesPerMinTime: 0,\n    bestNetwork: {\n      networkId: \"\"\n    },\n    user: {\n      uncategorized: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        all: 0,\n        mismatched: 0\n      },\n      manual: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n      },\n      auto: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n      }\n    }\n  }\n\n  const defaultUser = {\n\n    nodeId: null, \n    screenName: \"threecee\",\n    name: \"\",\n    location: \"\",\n    description: \"\",\n    profileImageUrl: \"https://pbs.twimg.com/profile_images/1205585278565527559/GrTkBpzl.jpg\",\n    bannerImage: \"\",\n    createdAt: null,\n    followersCount: 0,\n    friendsCount: 0,\n    tweets: 0,\n\n    age: 0,\n    mentions: 0,\n    rate: 0,\n    rateMax: 0,\n    tweetsPerDay: 0,\n\n    lastSeen: null,\n    isBot: false,\n    following: false,\n    categoryVerfied: false,\n    category: \"none\",\n    categoryAuto: \"none\",\n  }\n\n  // const defaultHashtag = {\n  //   nodeId: null,\n  //   text: null,\n  //   categoryAuto: \"none\",\n  //   category: \"none\",\n    \n  //   lastSeen: null,\n  //   age: 0,\n  //   mentions: 0,\n  //   rate: 0,\n  //   rateMax: 0,\n  // }\n\n  const [twitterAuthenticated, setTwitterAuthenticated] = useState(false);\n  const [twitterAuthenticatedUser, setTwitterAuthenticatedUser  ] = useState(\"\");\n  const [status, setStatus] = useState(defaultStatus);\n  const [progress, setProgress] = useState(\"idle\");\n  const [currentUser, setCurrentUser] = useState(defaultUser);\n  const [userHistory, setUserHistory] = useState([]);\n  const [userHistoryIndex, setUserHistoryIndex] = useState(0);\n  // const [currentHashtag, setHashtag] = useState(defaultHashtag);\n  \n  // const startProgress = (op) => {\n  //   setProgress(op);\n  // }\n\n  // const stopProgress = (op) => {\n  //   setProgress(\"idle\");\n  // }\n\n  const handleSearchUser = (searchString) => {\n    const searchTerm = \"@\" + searchString\n    socket.emit(\"TWITTER_SEARCH_NODE\", searchTerm)\n  }\n\n  const handleLoginLogout = () => {\n    if (twitterAuthenticated){\n      console.warn(\n        \"LOGGING OUT\");\n      socket.emit(\"logout\", viewerObj);\n      setTwitterAuthenticated(false)\n      setTwitterAuthenticatedUser(\"\")\n    }\n    else{\n      console.warn(\n        \"LOGIN: AUTH: \" +\n          twitterAuthenticated +\n          \" | URL: \" +\n          DEFAULT_AUTH_URL\n      );\n      window.open(DEFAULT_AUTH_URL, \"LOGIN\", \"_new\");\n      socket.emit(\"login\", viewerObj);\n    }\n  }\n\n  const handleUserChange = useCallback((event, user) => {\n\n    console.log(\"handleUserChange | user: @\" + user.screenName)\n\n    if (event.persist !== undefined) { \n      event.persist() \n    }\n\n    if (event.preventDefault !== undefined) { \n      event.preventDefault() \n    }\n\n    let eventName = event.currentTarget.name || \"nop\";\n    let eventValue = event.currentTarget.value;\n    let eventChecked = event.currentTarget.checked;\n\n    if (event.currentTarget.name === undefined && event.code){\n      switch (event.code){\n        case \"ArrowRight\":\n          eventName = \"history\"\n          history.goForward()\n          eventValue = history.location.pathname.split(\"@\").pop()\n          break;\n        case \"ArrowLeft\":\n          eventName = \"history\"\n          history.goBack()\n          eventValue = history.location.pathname.split(\"@\").pop()\n          break;\n        case \"KeyA\":\n          eventName = \"all\"\n          break;\n        case \"KeyD\":\n        case \"KeyL\":\n          if (event.shiftKey){\n            eventName = \"category\"\n            eventValue = \"left\"\n          }\n          else{\n            eventName = \"left\"\n          }\n          break;\n        case \"KeyN\":\n          if (event.shiftKey){\n            eventName = \"category\"\n            eventValue = \"neutral\"\n          }\n          else{\n            eventName = \"neutral\"\n          }\n          break;\n        case \"KeyR\":\n          if (event.shiftKey){\n            eventName = \"category\"\n            eventValue = \"right\"\n          }\n          else{\n            eventName = \"right\"\n          }\n          break;\n        case \"KeyI\":\n        case \"KeyX\":\n          if (event.shiftKey){\n            eventName = \"ignored\"\n            eventChecked = !user.ignored\n          }\n          break;\n        case \"KeyV\":\n          if (event.shiftKey){\n            eventName = \"catVerified\"\n            eventChecked = !user.categoryVerified\n          }\n          break;\n        case \"KeyB\":\n          if (event.shiftKey){\n            eventName = \"isBot\"\n            eventChecked = !user.isBot\n          }\n          break;\n        default:\n      }\n    }\n\n    console.log(\"handleUserChange | @\" + user.screenName + \" | name: \" + eventName + \" | value: \" + eventValue)\n\n    let searchFilter = \"@?\";\n\n    setProgress(progress => eventName);\n\n    switch (eventName){\n      case \"nop\":\n        break;\n      case \"history\":\n        console.log(\"handleUserChange | history | @\" + user.screenName + \" | name: \" + eventName + \" | value: \" + eventValue)\n        socket.emit(\"TWITTER_SEARCH_NODE\", \"@\" + eventValue);\n        break;\n      case \"all\":\n      case \"left\":\n      case \"neutral\":\n      case \"right\":\n        searchFilter += eventName\n        socket.emit(\"TWITTER_SEARCH_NODE\", searchFilter);\n        break\n      case \"mismatch\":\n        socket.emit(\"TWITTER_SEARCH_NODE\", \"@?mm\");\n        break\n      case \"category\":\n        socket.emit(\"TWITTER_CATEGORIZE_NODE\", {\n          category: eventValue,\n          following: true,\n          node: user,\n        });\n        break\n      case \"isBot\":\n        if (eventChecked){\n          socket.emit(\"TWITTER_BOT\", user);\n        }\n        else{\n          socket.emit(\"TWITTER_UNBOT\", user);\n        }\n        break\n      case \"following\":\n        if (eventChecked){\n          socket.emit(\"TWITTER_FOLLOW\", user);\n        }\n        else{\n          socket.emit(\"TWITTER_UNFOLLOW\", user);\n        }\n        break\n      case \"catVerified\":\n        if (eventChecked){\n          socket.emit(\"TWITTER_CATEGORY_VERIFIED\", user);\n        }\n        else{\n          socket.emit(\"TWITTER_CATEGORY_UNVERIFIED\", user);\n        }\n        break\n      case \"ignored\":\n        if (eventChecked){\n          socket.emit(\"TWITTER_IGNORE\", user);\n        }\n        else{\n          socket.emit(\"TWITTER_UNIGNORE\", user);\n        }\n        break\n      default:\n        console.log(\"handleUserChange: UNKNOWN NAME: \" + eventName + \" | VALUE: \" + eventValue)\n        console.log({event})\n    }\n    \n  }, [history])\n\n  const nodeValid = (node) => {\n    if (node === undefined) return false\n    if (node.nodeId === undefined) return false\n    if (node.screenName === undefined) return false\n    return true\n  }\n\n  useEffect(() => {\n    if (!history.location.pathname.endsWith(\"@\" + currentUser.screenName)){\n      history.push(\"/user/@\" + currentUser.screenName)\n    }\n  }, [currentUser, history])\n\n  useEffect(() => {\n\n    socket = socketClient(ENDPOINT);\n\n    socket.on(\"connect\", ()=>{\n      console.log(\"CONNECTED: \" + socket.id)\n      setProgress(progress => \"authentication\");\n      socket.emit(\"authentication\", {\n        namespace: \"view\",\n        userId: \"test\",\n        password: \"0123456789\",\n      });\n    })\n\n    socket.on(\"SET_TWITTER_USER\", (results) => {\n\n      console.debug(\"RX SET_TWITTER_USER\");\n      // console.debug(results);\n      if (nodeValid(results.node)) { \n\n        setCurrentUser(currentUser => results.node) \n        \n        console.debug(\"new: @\" + results.node.screenName);\n        setUserHistory(prevUserHistory => [...prevUserHistory, results.node.screenName])\n\n      }\n      setProgress(progress => \"idle\");\n      setStatus(status => results.stats)\n    });\n\n    socket.on(\"action\", (action) => {\n      \n      console.debug(\"RX ACTION | socket: \" + socket.id + \" | TYPE: \" + action.type);\n      console.debug(\"RX ACTION | \", action.data);\n\n      switch (action.type){\n\n        case \"user\":\n            setCurrentUser(currentUser => action.data)\n            console.log(\"USER: @\" + action.data.screenName + \" | \" + action.data.profileImageUrl)\n          break\n\n        case \"hashtag\":\n            // setHashtag(action.data)\n            console.log(\"HT: #\" + action.data.text)\n          break\n\n        case \"stats\":\n            setStatus(status => action.data)\n          break\n\n        default:\n      }\n\n    });   \n\n    socket.on(\"authenticated\", function () {\n      setProgress(progress => \"idle\");\n      console.debug(\"AUTHENTICATED | \" + socket.id);\n\n      // statsObj.socketId = socket.id;\n      // statsObj.serverConnected = true;\n      // statsObj.userReadyTransmitted = false;\n      // statsObj.userReadyAck = false;\n      socket.emit(\"TWITTER_SEARCH_NODE\", \"@threecee\")\n    });\n\n    socket.on(\"USER_AUTHENTICATED\", function (userObj) {\n      setProgress(progress => \"idle\");\n      setTwitterAuthenticated(twitterAuthenticated => true)\n      setTwitterAuthenticatedUser(twitterAuthenticatedUser => userObj.screenName)\n      console.log(\"RX TWITTER USER_AUTHENTICATED | USER: @\" + userObj.screenName);\n    });\n\n    socket.on(\"TWITTER_USER_NOT_FOUND\", (results) => {\n      setProgress(progress => \"idle\");\n      console.debug(\"RX TWITTER_USER_NOT_FOUND\");\n      console.debug(results);\n      setStatus(status => results.stats)\n    });\n    \n    return () => socket.disconnect();\n\n  }, [])\n\n  useHotkeys('left', (event) => handleUserChange(event, currentUser), {}, [currentUser])\n  useHotkeys('right', (event) => handleUserChange(event, currentUser), {}, [currentUser])\n\n  useHotkeys('A', (event) => handleUserChange(event, currentUser), {}, [currentUser])\n\n  useHotkeys('L', (event) => handleUserChange(event, currentUser), {}, [currentUser])\n  useHotkeys('shift+L', (event) => handleUserChange(event, currentUser), {}, [currentUser])\n\n  useHotkeys('D', handleUserChange)\n  useHotkeys('shift+D', (event) => handleUserChange(event, currentUser), {}, [currentUser])\n\n  useHotkeys('R', handleUserChange)\n  useHotkeys('shift+R', (event) => handleUserChange(event, currentUser), {}, [currentUser])\n\n  useHotkeys('N', handleUserChange)\n  useHotkeys('shift+N', (event) => handleUserChange(event, currentUser), {}, [currentUser])\n\n  useHotkeys('shift+I', (event) => handleUserChange(event, currentUser), {}, [currentUser])\n  useHotkeys('shift+B', (event) => handleUserChange(event, currentUser), {}, [currentUser])\n  useHotkeys('shift+V', (event) => handleUserChange(event, currentUser), {}, [currentUser])\n  useHotkeys('shift+X', (event) => handleUserChange(event, currentUser), {}, [currentUser])\n\n  return (\n    <div className={classes.root}>\n      <Container component=\"main\" maxWidth={false}>\n        <AppBar  className={classes.appBar} position=\"static\">\n          <Toolbar>\n\n            <Typography variant=\"h6\" className={classes.title}>\n              {/* Categorizer | USER HISTORY: {userHistory.length} | PREV USER: {userHistory.length > 0 ? userHistory[userHistory.length-1] : \"\"} */}\n              Categorizer\n            </Typography>\n\n            {progress !== \"idle\" ? <CircularProgress /> : <></>}\n\n            <Typography  className={classes.serverStatus}>\n              NN: {status.bestNetwork.networkId}\n            </Typography>\n            <Typography  className={classes.serverStatus}>\n              {status.nodesPerMin} nodes/min (max: {status.maxNodesPerMin} | time: {formatDateTime(status.maxNodesPerMinTime)})\n            </Typography>\n\n\n            <Link\n              className={classes.twitterAuth}\n              href={\"http://twitter.com/\" + twitterAuthenticatedUser}\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              {twitterAuthenticatedUser ? \"@\" + twitterAuthenticatedUser : \"\"}\n            </Link>\n\n            <Button \n              className={classes.buttonLogin}\n              variant=\"contained\" \n              color=\"primary\" \n              size=\"small\" \n              onClick={handleLoginLogout} \n              name=\"login\"\n              label=\"login\"\n            >\n              {twitterAuthenticated ? \"LOGOUT\" : \"LOGIN TWITTER\"}\n            </Button>\n\n          </Toolbar>\n        </AppBar>\n        <User user={currentUser} stats={status} handleUserChange={handleUserChange} handleSearchUser={handleSearchUser}/>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;","import React, { useState, useEffect } from 'react';\nimport { Timeline } from 'react-twitter-widgets'\n\nimport Duration from 'duration';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Card from '@material-ui/core/Card';\n// import CardActionArea from '@material-ui/core/CardActionArea';\n// import CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n// import CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\n// import CheckBoxIcon from '@material-ui/icons/CheckBox';\n// import CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\n// import FormLabel from '@material-ui/core/FormLabel';\nimport Grid from '@material-ui/core/Grid';\n// import IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\n// import MenuIcon from '@material-ui/icons/Menu';\n// import Paper from '@material-ui/core/Paper';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\n// import TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TableHead } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 2,\n  },\n  grid: {\n    display: 'flex',\n  },\n  gridItem: {\n    margin: 5,\n  },  \n  card: {\n    raised: false,\n    maxWidth: 400,\n  },\n  profileImage: {\n    maxHeight: 400,\n  },\n  bannerImage: {\n    height: 80,\n  },\n  table: {\n  },\n  tableRowGreen: {\n    backgroundColor: 'lightgreen',\n  },\n  appBar: {\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  statusBar: {\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    color: 'blue',\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: \"white\",\n    '&:hover': {\n      backgroundColor: \"lightgray\",\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'primary',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n\n  buttonGroupLabel: {\n    color: 'blue',\n    marginRight: theme.spacing(1),\n  },\n  buttonAll: {\n    color: 'black',\n  },\n  buttonLeft: {\n    color: 'blue',\n  },\n  buttonNeutral: {\n    color: 'gray',\n  },\n  buttonRight: {\n    color: 'red',\n  },\n  buttonMismatch: {\n    margin: 5\n  },\n\n  autoCategory:{\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n  },\n\n  left: {\n    backgroundColor: 'blue',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n  },\n  neutral: {\n    backgroundColor: 'gray',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n  },\n  right: {\n    backgroundColor: 'red',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n  },\n  none: {\n    backgroundColor: 'white',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n  },\n\n}));\n\nconst formatDate = (dateInput) => {\n  return new Date(dateInput).toLocaleDateString(\n    'en-gb',\n    {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }\n  );\n}\n\nconst defaultProfileImage = \"logo192.png\"\nconst defaultBannerImage = \"logo192.png\"\n\nconst User = (props) => {\n\n  const classes = useStyles();\n\n  const createdAt = formatDate(props.user.createdAt)\n  const lastSeen = formatDate(props.user.lastSeen)\n \n  const lastSeenDuration = new Duration(new Date(props.user.lastSeen)).toString(1, 4)\n  const twitterAge = props.user.createdAt ? new Duration(new Date(props.user.createdAt)) : new Duration(new Date())\n  const twitterAgeString = twitterAge.toString(1, 4)\n\n  const tweetRate = twitterAge.days > 0 ? Math.ceil(props.user.statusesCount/twitterAge.days) : 0;\n\n  const [userSearch, setUserSearch] = useState(props.user.screenName);\n\n  \n  useEffect(() => {\n    setUserSearch(props.user.screenName)\n  }, [props])\n  \n  const handleChangeSearch = (event) => {\n    console.log(\"handleChangeSearch: \" + event.target.value)\n    setUserSearch(event.target.value);\n  }\n\n  const handleKeyPress = (event) => {\n    if (event.charCode === 13) { // enter key pressed\n      console.log(\"ENTER\")\n      props.handleSearchUser(userSearch)\n    }\n  }\n\n  const openUserTwitterPage = () => {\n    console.log(\"open twitter\")\n    window.open(`http://twitter.com/${props.user.screenName || null}`, \"_blank\") //to open new page\n  }\n\n  const getCategoryClass = (category) => {\n    switch (category){\n      case \"left\":\n      case \"neutral\":\n      case \"right\":\n        return classes[category]\n      default:\n        return classes.none\n    }\n  }\n\n  return (\n    <>\n      <AppBar  className={classes.appBar} position=\"static\">\n        <Toolbar>\n\n          <Typography variant=\"h6\" className={classes.title}>\n            User\n          </Typography>\n\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon color=\"primary\"/>\n            </div>\n            <InputBase\n              placeholder=\"search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n              value={userSearch}\n              onKeyPress={handleKeyPress}\n              onChange={handleChangeSearch}\n            />\n          </div>\n\n          <Typography className={classes.buttonGroupLabel}>\n            UNCAT\n          </Typography>   \n\n          <ButtonGroup variant=\"contained\" color=\"primary\" size=\"small\" aria-label=\"small button group\">\n\n            <Button onClick={props.handleUserChange} name=\"all\" >ALL: {props.stats.user.uncategorized.all}</Button>\n            <Button onClick={props.handleUserChange} name=\"left\" >LEFT: {props.stats.user.uncategorized.left}</Button>\n            <Button onClick={props.handleUserChange} name=\"neutral\" >NEUTRAL: {props.stats.user.uncategorized.neutral}</Button>\n            <Button onClick={props.handleUserChange} name=\"right\" >RIGHT: {props.stats.user.uncategorized.right}</Button>\n          </ButtonGroup>\n          <Button \n            variant=\"contained\" color=\"primary\" size=\"small\" onClick={props.handleUserChange} name=\"mismatch\" className={classes.buttonMismatch}>MISMATCH {props.stats.user.mismatched}\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <Grid className={classes.grid}>\n          <Grid item className={classes.gridItem} xs={3}>\n            <Card className={classes.card} variant=\"outlined\">\n              <CardContent\n                onClick={openUserTwitterPage}\n              >\n                <Typography\n                  variant=\"h6\"\n                >\n                  {props.user.name}\n                </Typography>\n                <Typography>\n                  @{props.user.screenName}\n                </Typography>\n              </CardContent>\n              <CardMedia\n                className={classes.profileImage}\n                src={props.user.profileImageUrl || defaultProfileImage}\n                component=\"img\"\n                onError={e => {\n                }}              \n              />\n              <br></br>\n              <CardMedia \n                className={classes.bannerImage} \n                src={props.user.bannerImageUrl || defaultBannerImage} \n                component=\"img\"\n                onError={e => {\n                }}              \n              />\n              <CardContent>\n                <Typography>\n                  {props.user.description}\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item className={classes.gridItem} xs={3}>\n            <Timeline\n              dataSource={{\n                sourceType: 'profile',\n                screenName: props.user.screenName\n              }}\n              options={{\n                height: '640'\n              }}\n            />\n          </Grid>\n          <Grid item className={classes.gridItem} xs={3}>\n            <TableContainer>\n              <Table className={classes.table} size=\"small\">\n                <TableBody>\n                  <TableRow>\n                    <TableCell>id</TableCell><TableCell align=\"right\">{props.user.nodeId}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>location</TableCell><TableCell align=\"right\">{props.user.location}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>created</TableCell><TableCell align=\"right\">{createdAt}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>twitter age</TableCell><TableCell align=\"right\">{twitterAgeString}</TableCell>\n                  </TableRow>\n                  <TableRow className={props.user.followersCount > 5000 ? classes.tableRowGreen : null}>\n                    <TableCell>followers</TableCell><TableCell align=\"right\">{props.user.followersCount}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>friends</TableCell><TableCell align=\"right\">{props.user.friendsCount}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>tweets</TableCell><TableCell align=\"right\">{props.user.statusesCount}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>tweets/day</TableCell><TableCell align=\"right\">{tweetRate}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>last seen</TableCell><TableCell align=\"right\">{lastSeen}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>last seen</TableCell><TableCell align=\"right\">{lastSeenDuration} ago</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>mentions</TableCell><TableCell align=\"right\">{props.user.mentions}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>mentions/min</TableCell><TableCell align=\"right\">{props.user.rate ? props.user.rate.toFixed(1) : 0}</TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Grid>\n          <Grid item className={classes.gridItem} xs={2}>\n            <TableContainer>\n              <Table className={classes.table} size=\"small\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>CAT</TableCell>\n                    <TableCell align=\"left\">MAN</TableCell>\n                    <TableCell align=\"left\">AUTO</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  <TableRow>\n                    <TableCell>left</TableCell>\n                    <TableCell align=\"right\">{props.stats.user.manual.left}</TableCell>\n                    <TableCell align=\"right\">{props.stats.user.auto.left}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>neutral</TableCell>\n                    <TableCell align=\"right\">{props.stats.user.manual.neutral}</TableCell>\n                    <TableCell align=\"right\">{props.stats.user.auto.neutral}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>right</TableCell>\n                    <TableCell align=\"right\">{props.stats.user.manual.right}</TableCell>\n                    <TableCell align=\"right\">{props.stats.user.auto.right}</TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Grid>\n          <Grid item className={classes.gridItem} xs={1}>\n            <FormGroup>\n\n              <Typography \n                className={getCategoryClass(props.user.categoryAuto)}\n                align=\"center\"\n              >\n                AUTO: {props.user.categoryAuto.toUpperCase() || \"NONE\"}\n              </Typography>\n\n              <FormControl component=\"fieldset\">\n                <RadioGroup aria-label=\"category\" name=\"category\" value={props.user.category || \"none\"} onChange={props.handleUserChange}>\n                  <FormControlLabel labelPlacement=\"start\" value=\"left\" control={<Radio />} label=\"left\"/>\n                  <FormControlLabel labelPlacement=\"start\" value=\"neutral\" control={<Radio />} label=\"neutral\" />\n                  <FormControlLabel labelPlacement=\"start\" value=\"right\" control={<Radio />} label=\"right\" />\n                  <FormControlLabel labelPlacement=\"start\" value=\"positive\" control={<Radio />} label=\"positive\" />\n                  <FormControlLabel labelPlacement=\"start\" value=\"negative\" control={<Radio />} label=\"negative\" />\n                  <FormControlLabel labelPlacement=\"start\" value=\"none\" control={<Radio />} label=\"none\" />\n                </RadioGroup>\n              </FormControl>\n\n              <FormControlLabel\n                control={<Checkbox checked={props.user.categoryVerified || false} onChange={props.handleUserChange} name=\"catVerified\" />}\n                label=\"verified\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox checked={props.user.following || false} onChange={props.handleUserChange} name=\"following\" />}\n                label=\"following\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox checked={props.user.ignored || false} onChange={props.handleUserChange} name=\"ignored\" />}\n                label=\"ignored\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox checked={props.user.isBot || false} onChange={props.handleUserChange} name=\"isBot\" />}\n                label=\"bot\"\n                labelPlacement=\"start\"\n              />\n            </FormGroup>\n          </Grid>\n        </Grid>\n    </>\n  );\n}\n\nexport default User;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  useLocation\n} from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}