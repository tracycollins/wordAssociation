{"version":3,"sources":["App.js","UserView.js","HashtagView.js","AuthUserView.js","reportWebVitals.js","index.js"],"names":["min","max","StyledTableCell","withStyles","theme","head","body","fontSize","TableCell","StyledTableRow","root","backgroundColor","grey","TableRow","useStyles","makeStyles","border","flexGrow","appBar","marginBottom","spacing","grid","display","alignItems","gridItem","margin","gridHeader","padding","paper","outlined","variant","card","alignSelf","profileImage","bannerImage","icon","borderRadius","width","height","boxShadow","backgroundImage","outline","outlineOffset","background","checkedIcon","content","selectCategory","shape","radioGroupCategory","maxWidth","checkbox","color","green","checked","radioButtonLabel","radioButton","table","tableHead","tableCell","tableCategorized","tableRowGreen","statusBar","raised","menuButton","marginRight","title","search","position","breakpoints","up","searchIcon","pointerEvents","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","buttonGroupLabel","buttonAll","buttonLeft","buttonNeutral","buttonRight","buttonMismatch","autoCategory","category","left","neutral","right","positive","negative","none","ignored","formatDate","dateInput","Date","toLocaleDateString","year","month","day","User","props","classes","createdAt","user","lastSeen","lastSeenDuration","Duration","toString","twitterAge","twitterAgeString","tweetRate","days","Math","ceil","statusesCount","getCategoryClass","Grid","className","item","xs","Card","CardContent","onClick","console","log","window","open","screenName","Typography","clsx","name","description","CardMedia","src","profileImageUrl","component","onError","e","bannerImageUrl","Paper","elevation","dataSource","sourceType","options","TableContainer","Table","size","TableHead","colSpan","TableBody","align","nodeId","location","followersCount","friendsCount","mentions","rate","toFixed","stats","manual","auto","FormGroup","FormControl","Select","labelId","id","value","onChange","event","handleNodeChange","MenuItem","dense","categoryAuto","toUpperCase","FormControlLabel","control","Checkbox","following","label","categoryVerified","isBot","filterLowFollowersCount","handleFilterChange","marginLeft","HashtagView","tweets","hashtag","statusHashtag","undefined","statuses","map","tweet","tweetId","id_str","InputLabel","tableBody","AuthUserView","authenticated","categorizedRate","total","today","periodCurrent","periodLast","categorized","authUser","categorizedBy","earned","paid","aria-label","DEFAULT_AUTH_URL","VIEWER_ID","floor","random","DEFAULT_VIEWER_OBJ","userId","viewerId","type","namespace","timeStamp","now","tags","mode","entity","viewerObj","socket","socketClient","tabs","tab","minWidth","toolBar","shadows","progress","serverStatus","twitterAuth","fontWeight","buttonLogin","App","history","useHistory","useLocation","useState","tabValue","setTabValue","setFilterLowFollowersCount","filterLowFollowersCountRef","useRef","pathname","historyArray","setHistoryArray","historyArrayRef","historyArrayIndex","setHistoryArrayIndex","historyArrayIndexRef","twitterAuthenticated","setTwitterAuthenticated","twitterAuthenticatedRef","twitterAuthenticatedUser","setTwitterAuthenticatedUser","twitterAuthenticatedUserRef","userSearch","setUserSearch","nodesPerMin","maxNodesPerMin","maxNodesPerMinTime","bestNetwork","networkId","uncategorized","all","mismatched","status","setStatus","statusRef","setStatusHashtag","statusHashtagRef","search_metadata","setTweets","tweetsRef","setProgress","currentTab","setCurrentTab","currentTabRef","currentUsers","setUsers","currentUsersRef","age","rateMax","tweetsPerDay","categoryVerfied","currentUser","setCurrentUser","currentUserRef","text","currentHashtag","setCurrentHashtag","currentHashtagRef","currentAccount","setCurrentAccount","useEffect","tempHistoryArray","current","length","push","currentNode","handleSearchNode","searchString","searchTerm","emit","searchNode","handleLoginLogout","useCallback","preventDefault","warn","node","persist","searchFilter","eventName","target","eventValue","eventChecked","code","split","pop","shiftKey","nodeType","usersAvailable","tempUsers","shift","currentUsersAvailable","alert","nodeValid","endsWith","on","password","response","debug","minFollowers","nodes","users","slice","action","data","userObj","startsWith","results","endCursor","disconnect","useHotkeys","Container","AppBar","Toolbar","Tabs","newValue","Tab","InputBase","placeholder","input","inputProps","onKeyPress","charCode","toLocaleString","CircularProgress","Link","href","rel","Button","UserView","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","path","document","getElementById"],"mappings":"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","file":"static/js/main.c85ccc28.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\n// import useSocket from 'use-socket.io-client';\n// import { useImmer } from 'use-immer';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport socketClient from \"socket.io-client\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Container from '@material-ui/core/Container';\nimport AppBar from '@material-ui/core/AppBar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\n// import ButtonGroup from '@material-ui/core/ButtonGroup';\n// import InputBase from '@material-ui/core/InputBase';\n// import SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\nimport Link from '@material-ui/core/Link';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport './App.css';\nimport UserView from './UserView.js';\nimport HashtagView from './HashtagView.js';\nimport AuthUserView from './AuthUserView.js';\n// import { ButtonGroup } from '@material-ui/core';\n\nconst MIN_USERS_AVAILABLE = 5;\nconst MIN_FOLLOWERS_COUNT = 5000;\n\n// const ENDPOINT = \"http://mbp3:9997/view\";\nconst ENDPOINT = \"https://word.threeceelabs.com/view\";\nconst DEFAULT_AUTH_URL = \"http://word.threeceelabs.com/auth/twitter\";\n\nconst randomIntFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min)\n};\n\nconst randomId = randomIntFromInterval(1000000000, 9999999999)\nconst VIEWER_ID = \"viewer_\" + randomId;\n\nconst DEFAULT_VIEWER_OBJ = {\n  nodeId: VIEWER_ID,\n  userId: VIEWER_ID,\n  viewerId: VIEWER_ID,\n  screenName: VIEWER_ID,\n  type: \"viewer\",\n  namespace: \"view\",\n  timeStamp: Date.now(),\n  tags: {},\n};\n\nDEFAULT_VIEWER_OBJ.tags.type = \"viewer\";\n\nDEFAULT_VIEWER_OBJ.tags.mode = \"stream\";\nDEFAULT_VIEWER_OBJ.tags.entity = VIEWER_ID;\n\nconst viewerObj = DEFAULT_VIEWER_OBJ;\n\nconsole.log({viewerObj})\n\nlet socket = socketClient(ENDPOINT)\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    flexGrow: 1,\n    boxShadow: 0,\n  },\n  appBar: {\n    backgroundColor: 'black',\n    marginBottom: theme.spacing(2),\n    boxShadow: 0,\n  },\n  tabs: {\n    color: 'white',\n  },\n  tab: {\n    minWidth: 100,\n    width: 100,\n  },\n  toolBar: {\n    shadows: 0,\n  },\n  title: {\n    // flexGrow: 1,\n    color: 'white',\n    marginRight: theme.spacing(2),\n  },\n  progress: {\n    // flexGrow: 1,\n    color: 'white',\n    marginRight: theme.spacing(2),\n  },\n  serverStatus: {\n    fontSize: \"0.85rem\",\n    flexGrow: 1,\n    color: 'lightgray',\n    padding: theme.spacing(1),\n  },\n  twitterAuth: {\n    // backgroundColor: 'black',\n    fontSize: \"1.2rem\",\n    fontWeight: 600,\n    color: \"green\",\n    padding: theme.spacing(1),\n    marginRight: theme.spacing(2),\n  },  \n  buttonLogin: {\n    // backgroundColor: \"green\",\n    marginRight: theme.spacing(2),\n  },\n  statusBar: {\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  search: {\n    // flexGrow: 1,\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: \"white\",\n    '&:hover': {\n      backgroundColor: \"lightgray\",\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '20%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'primary',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n\n}))\n\nconst formatDateTime = (dateInput) => {\n  return new Date(dateInput).toLocaleString()\n}\n\nconst App = () => {\n\n  const history = useHistory()\n  let location = useLocation()\n  // let { slug } = useParams()\n\n  // console.log({slug})\n\n  const classes = useStyles()\n\n  const defaultStatus = {\n    nodesPerMin: 0, \n    maxNodesPerMin: 0,\n    maxNodesPerMinTime: 0,\n    bestNetwork: {\n      networkId: \"\"\n    },\n    user: {\n      uncategorized: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        positive: 0,\n        negative: 0,\n        all: 0,\n        mismatched: 0\n      },\n      manual: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        positive: 0,\n        negative: 0,\n      },\n      auto: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        positive: 0,\n        negative: 0,\n      }\n    },\n    hashtag: {\n      uncategorized: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        positive: 0,\n        negative: 0,\n        all: 0,\n        mismatched: 0\n      },\n      manual: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        positive: 0,\n        negative: 0,\n      },\n      auto: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        positive: 0,\n        negative: 0,\n      }\n    }\n  }\n\n  const defaultUser = {\n\n    nodeId: null, \n    screenName: \"threecee\",\n    name: \"\",\n    location: \"\",\n    description: \"\",\n    profileImageUrl: \"https://pbs.twimg.com/profile_images/1205585278565527559/GrTkBpzl.jpg\",\n    bannerImage: \"\",\n    createdAt: null,\n    status: {},\n    followersCount: 0,\n    friendsCount: 0,\n    tweets: 0,\n\n    age: 0,\n    mentions: 0,\n    rate: 0,\n    rateMax: 0,\n    tweetsPerDay: 0,\n\n    lastSeen: null,\n    isBot: false,\n    following: false,\n    categoryVerfied: false,\n    category: \"none\",\n    categoryAuto: \"none\",\n  }\n\n  const defaultHashtag = {\n    nodeId: \"blacklivesmatter\",\n    text: \"BlackLivesMatter\",\n    categoryAuto: \"none\",\n    category: \"left\",\n    createdAt: 0,\n    lastSeen: 0,\n    age: 0,\n    mentions: 0,\n    rate: 0,\n    rateMax: 0,\n  }\n\n  const defaultAccount = {\n    screenName: \"\"\n  }\n\n  const defaultTweets = {\n    search_metadata: {},\n    statuses: []\n  }\n\n  const [tabValue, setTabValue] = useState(0)\n  // const tabValueRef = useRef(tabValue)\n\n  const [filterLowFollowersCount, setFilterLowFollowersCount] = useState(true)\n  const filterLowFollowersCountRef = useRef(filterLowFollowersCount)\n  \n  const [historyArray, setHistoryArray] = useState([location.pathname])\n  const historyArrayRef = useRef(historyArray)\n\n  const [historyArrayIndex, setHistoryArrayIndex] = useState(0)\n  const historyArrayIndexRef = useRef(historyArrayIndex)\n\n  const [twitterAuthenticated, setTwitterAuthenticated] = useState(false)\n  const twitterAuthenticatedRef = useRef(twitterAuthenticated)\n\n  const [twitterAuthenticatedUser, setTwitterAuthenticatedUser  ] = useState({})\n  const twitterAuthenticatedUserRef = useRef(twitterAuthenticatedUser)\n\n  const [userSearch, setUserSearch] = useState(\"\")\n  // const userSearchRef = useRef(userSearch)\n\n  const [status, setStatus] = useState(defaultStatus)\n  const statusRef = useRef(status)\n\n  const [statusHashtag, setStatusHashtag] = useState(false)\n  const statusHashtagRef = useRef(statusHashtag)\n\n  const [tweets, setTweets] = useState(defaultTweets)\n  const tweetsRef = useRef(tweets)\n\n  const [progress, setProgress] = useState(\"loading ...\")\n\n  const [currentTab, setCurrentTab] = useState(\"user\")\n  const currentTabRef = useRef(currentTab)\n\n  const [currentUsers, setUsers] = useState([])\n  const currentUsersRef = useRef(currentUsers)\n\n  const [currentUser, setCurrentUser] = useState(defaultUser)\n  const currentUserRef = useRef(currentUser)\n\n  const [currentHashtag, setCurrentHashtag] = useState(defaultHashtag)\n  const currentHashtagRef = useRef(currentHashtag)\n  \n  const [currentAccount, setCurrentAccount] = useState(defaultAccount)\n  // const currentAccountRef = useRef(currentAccount)\n  \n  useEffect(() => {\n    const tempHistoryArray = [...historyArrayRef.current]\n    if (tempHistoryArray.length > 0 && location.pathname !== tempHistoryArray[0]){\n      tempHistoryArray.push(location.pathname)\n      setHistoryArray(() => [...tempHistoryArray])\n      setHistoryArrayIndex(tempHistoryArray.length-1)\n      historyArrayRef.current = tempHistoryArray\n    }\n  }, [location.pathname])\n  \n  useEffect(() => { \n    filterLowFollowersCountRef.current = filterLowFollowersCount\n  }, [filterLowFollowersCount])\n  \n  useEffect(() => { \n    twitterAuthenticatedUserRef.current = twitterAuthenticatedUser\n  }, [twitterAuthenticatedUser])\n  \n  useEffect(() => { \n    twitterAuthenticatedRef.current = twitterAuthenticated \n  }, [twitterAuthenticated])\n  \n  useEffect(() => { \n    currentTabRef.current = currentTab \n  }, [currentTab])\n  \n  useEffect(() => { \n    currentUsersRef.current = currentUsers \n  }, [currentUsers])\n  \n  useEffect(() => { \n    currentUserRef.current = currentUser\n  }, [currentUser])\n  \n  useEffect(() => { \n    currentHashtagRef.current = currentHashtag \n  }, [currentHashtag])\n  \n  useEffect(() => { \n    statusHashtagRef.current = statusHashtag\n  }, [statusHashtag])\n  \n  useEffect(() => { \n    statusRef.current = status \n  }, [status])\n  \n  useEffect(() => { \n    tweetsRef.current = tweets \n  }, [tweets])\n  \n  const currentNode = currentTabRef.current === \"user\" ? currentUserRef.current : currentHashtagRef.current;\n\n  const handleTabChange = (event, newValue) => {\n\n    event.preventDefault()\n    console.log({newValue})\n\n    switch (newValue){\n      case 0:\n        setCurrentTab(\"user\")\n        break\n      case 1:\n        setCurrentTab(\"hashtag\")\n        break\n      case 2:\n        setCurrentTab(\"authUser\")\n        break\n      default:\n        setCurrentTab(\"user\")\n    }\n\n    setTabValue(newValue)\n  }\n\n  const handleSearchNode = (searchString) => {\n    setProgress(progress => \"searchNode\")\n    const searchTerm = currentTab === \"user\" ? \"@\" + searchString : \"#\" + searchString\n    console.log(\"SEARCH TERM: \" + searchTerm)\n    socket.emit(\"TWITTER_SEARCH_NODE\", {searchNode: searchTerm})\n  }\n\n  const handleLoginLogout = useCallback((event) => {\n\n    event.preventDefault()\n    setProgress(progress => \"loginLogout\")\n\n    if (twitterAuthenticatedRef.current){\n      console.warn(\"LOGGING OUT\")\n      socket.emit(\"logout\", viewerObj)\n      setTwitterAuthenticated(false)\n      setTwitterAuthenticatedUser({})\n      setCurrentAccount({})\n      setProgress(progress => \"idle\")\n    }\n    else{\n      console.warn(\"TWITTER_AUTHENTICATE: \" +twitterAuthenticatedRef.current + \" | URL: \" + DEFAULT_AUTH_URL)\n      window.open(DEFAULT_AUTH_URL, \"TWITTER_AUTHENTICATE\", \"_new\")\n      socket.emit(\"TWITTER_AUTHENTICATE\", viewerObj)\n    }\n  }, [])\n\n  const currentUsersAvailable = (eventName) => {\n    if (currentUsersRef.current && currentUsersRef.current.length > 0){\n      const tempUsers = [...currentUsersRef.current]\n      const user = tempUsers.shift()\n      setUsers(tempUsers)\n      console.log(\"USING CURRENT USERS | CURRENT USERS: \" + tempUsers.length + \" | @\" + user.screenName)\n      setCurrentUser(user)\n      setProgress(\"idle\")\n      return tempUsers.length\n    }\n    return 0;\n  }\n\n  const handleNodeChange = useCallback((event, node) => {\n\n    if (event.preventDefault !== undefined) { \n      event.preventDefault() \n    }\n\n    if (currentTabRef.current === \"user\"){\n      console.log(\"handleNodeChange | user: @\" + node.screenName)\n    }\n    else{\n      console.log(\"handleNodeChange | hashtag: #\" + node.nodeId)\n    }\n\n    if (event.persist !== undefined) { \n      event.persist() \n    }\n\n    let eventName = event.target.name || \"nop\";\n    let eventValue = event.target.value;\n    let eventChecked = event.target.checked;\n\n    if (event.target.name === undefined && event.code){\n\n      switch (event.code){\n\n        case \"ArrowRight\":\n        case \"ArrowLeft\":\n          console.log(\"location.pathname: \" + location.pathname)\n          console.log({historyArrayRef})\n          console.log({historyArrayIndexRef})\n          eventName = \"history\"\n          if (event.code === \"ArrrowRight\"){\n            // if (historyArrayRef.current.length > 0){\n              // historyArrayRef.current.pop()\n              // const nextRoute = historyArrayRef.current.pop()\n              // history.goForward()\n              eventValue = location.pathname.split(\"/\").pop()\n            // }\n          }\n          if (event.code === \"ArrowLeft\"){ \n            if (historyArrayRef.current.length > 0){\n              historyArrayRef.current.pop()\n              const nextRoute = historyArrayRef.current.pop()\n              // history.push(nextRoute)\n              eventValue = nextRoute.split(\"/\").pop()\n            }\n          }\n          break;\n\n        case \"KeyA\":\n          eventName = \"all\"\n          break;\n\n        case \"KeyD\":\n        case \"KeyL\":\n          if (event.shiftKey){\n            eventName = \"category\"\n            eventValue = \"left\"\n          }\n          else{\n            eventName = \"left\"\n          }\n          break;\n\n        case \"KeyN\":\n          if (event.shiftKey){\n            eventName = \"category\"\n            eventValue = \"neutral\"\n          }\n          else{\n            eventName = \"neutral\"\n          }\n          break;\n\n        case \"KeyR\":\n          if (event.shiftKey){\n            eventName = \"category\"\n            eventValue = \"right\"\n          }\n          else{\n            eventName = \"right\"\n          }\n          break;\n\n        case \"KeyHyphen\":\n          if (event.shiftKey){\n            eventName = \"category\"\n            eventValue = \"negative\"\n          }\n          else{\n            eventName = \"negative\"\n          }\n          break;\n\n        case \"KeyEquals\":\n          if (event.shiftKey){\n            eventName = \"category\"\n            eventValue = \"positive\"\n          }\n          else{\n            eventName = \"positive\"\n          }\n          break;\n\n        case \"KeyI\":\n        case \"KeyX\":\n          if (event.shiftKey){\n            eventName = \"ignored\"\n            eventChecked = !node.ignored\n          }\n          break;\n\n        case \"KeyV\":\n          if (event.shiftKey){\n            eventName = \"catVerified\"\n            eventChecked = !node.categoryVerified\n          }\n          break;\n\n        case \"KeyB\":\n          if (event.shiftKey){\n            eventName = \"isBot\"\n            eventChecked = !node.isBot\n          }\n          break;\n\n        default:\n      }\n    }\n\n    let searchFilter;\n\n    if (node.nodeType === \"user\"){\n      searchFilter = \"@?\";\n      console.log(\"handleNodeChange | @\" + node.screenName + \" | name: \" + eventName + \" | value: \" + eventValue)\n    }\n    else{\n      searchFilter = \"#?\";\n      console.log(\"handleNodeChange | #\" + node.nodeId + \" | name: \" + eventName + \" | value: \" + eventValue)\n    }\n\n    setProgress(eventName)\n\n    let usersAvailable = 0;\n\n    switch (eventName){\n\n      case \"nop\":\n        break;\n\n      case \"history\":\n        if (node.nodeType === \"user\"){\n          console.log(\"handleNodeChange | history | @\" + node.screenName + \" | name: \" + eventName + \" | value: \" + eventValue)\n          socket.emit(\"TWITTER_SEARCH_NODE\", {searchNode: \"@\" + eventValue})\n        }\n        else{\n          console.log(\"handleNodeChange | history | #\" + node.nodeId + \" | name: \" + eventName + \" | value: \" + eventValue)\n          socket.emit(\"TWITTER_SEARCH_NODE\", {searchNode: \"#\" + eventValue})\n        }\n        break;\n\n      case \"all\":\n      case \"left\":\n      case \"neutral\":\n      case \"right\":\n      case \"positive\":\n      case \"negative\":\n\n        searchFilter += eventName\n\n        usersAvailable = currentUsersAvailable(eventName)\n\n        // if (eventName !== \"all\" || usersAvailable < 3){\n        if (usersAvailable < MIN_USERS_AVAILABLE){\n          console.log(\"GET MORE USERS | usersAvailable: \" + usersAvailable)\n          socket.emit(\"TWITTER_SEARCH_NODE\", {searchNode: searchFilter})\n        }\n\n        break\n\n      case \"mismatch\":\n        if (node.nodeType === \"user\"){\n          socket.emit(\"TWITTER_SEARCH_NODE\", {searchNode: \"@?mm\"})\n        }\n        break\n\n      case \"category\":\n        if (twitterAuthenticatedRef.current){\n          socket.emit(\"TWITTER_CATEGORIZE_NODE\", {\n            categorizedBy: twitterAuthenticatedUserRef.current.screenName,\n            category: eventValue,\n            following: true,\n            node: node,\n          })\n        }\n        else{\n          alert(\"NOT AUTHENTICATED\")\n          setProgress(\"idle\")\n          return;\n        }\n        break\n\n      case \"isBot\":\n      case \"following\":\n      case \"catVerified\":\n      case \"ignored\":\n\n        if (!twitterAuthenticatedRef.current){\n          alert(\"NOT AUTHENTICATED\")\n          setProgress(\"idle\")\n          return;\n        }\n\n        if (eventName === \"ignored\"){\n          if (eventChecked){\n            socket.emit(\"TWITTER_IGNORE\", node)\n          }\n          else{\n            socket.emit(\"TWITTER_UNIGNORE\", node)\n          }\n          break\n        }\n\n        if (node.nodeType === \"user\"){\n\n          if (eventName === \"bot\"){\n            if (eventChecked){\n              socket.emit(\"TWITTER_BOT\", node)\n            }\n            else{\n              socket.emit(\"TWITTER_UNBOT\", node)\n            }\n          }\n\n          if (eventName === \"following\"){\n            if (eventChecked){\n              socket.emit(\"TWITTER_FOLLOW\", node)\n            }\n            else{\n              socket.emit(\"TWITTER_UNFOLLOW\", node)\n            }\n          }\n\n          if (eventName === \"catVerified\"){\n            if (eventChecked){\n              socket.emit(\"TWITTER_CATEGORY_VERIFIED\", node)\n            }\n            else{\n              socket.emit(\"TWITTER_CATEGORY_UNVERIFIED\", node)\n            }\n          }\n\n        }\n\n        break\n\n      default:\n        console.log(\"handleNodeChange: UNKNOWN NAME: \" + eventName + \" | VALUE: \" + eventValue)\n        console.log({event})\n    }\n    \n  }, [location])\n\n  const nodeValid = (node) => {\n\n    if (node === undefined) return false\n    if (node.nodeId === undefined) return false\n\n    if (node.nodeType === \"user\"){\n      if (node.screenName === undefined) return false\n    } \n\n    return true\n  }\n\n  useEffect(() => {\n    if (currentTabRef.current === \"user\"){\n      console.log({history})\n      console.log(\"loc:  \" + location.pathname)\n      if (!location.pathname.endsWith(\"/user/\" + currentUserRef.current.screenName)){\n        console.log(\"history push: /categorize/user/\" + currentUserRef.current.screenName)\n        history.push(\"/categorize/user/\" + currentUserRef.current.screenName)\n      }\n    }\n  }, [history, currentUser, location.pathname, tabValue])\n\n  useEffect(() => {\n    if (currentTabRef.current === \"hashtag\"){\n      console.log(\"history loc:  \" + history.location.pathname)\n      if (!history.location.pathname.endsWith(\"/hashtag/\" + currentHashtagRef.current.nodeId)){\n        console.log(\"history push: /categorize/hashtag/\" + currentHashtagRef.current.nodeId)\n        history.push(\"/categorize/hashtag/\" + currentHashtagRef.current.nodeId)\n      }\n    }\n  }, [history, currentHashtag, location.pathname, tabValue])\n\n  useEffect(() => {\n    if (currentTabRef.current === \"authUser\"){\n      console.log(\"history loc:  \" + history.location.pathname)\n      if (!history.location.pathname.endsWith(\"/account/\" + currentAccount.nodeId)){\n        if (twitterAuthenticated){\n          console.log(\"history push: /categorize/account/\" + currentAccount.nodeId)\n          history.push(\"/categorize/account/\" + currentAccount.nodeId)\n        }\n        else{\n          console.log(\"NOT AUTHENTICATED: history push: /categorize/account/\")\n          history.push(\"/categorize/account/\")\n        }\n      }\n    }\n  }, [history, currentAccount, location.pathname, tabValue, twitterAuthenticated])\n\n  useEffect(() => {\n\n    socket.on(\"connect\", ()=>{\n\n      console.log(\"CONNECTED: \" + socket.id)\n\n      setProgress(progress => \"authentication\")\n\n      socket.emit(\"authentication\", {\n        namespace: \"view\",\n        userId: \"test\",\n        password: \"0123456789\",\n      })\n    })\n\n    socket.on(\"TWITTER_USERS\", (response) => {\n\n      console.debug(\"RX TWITTER_USERS\")\n\n      let tempUsers = []\n      let minFollowers = filterLowFollowersCountRef.current ? 5000 : 0;\n\n      if (response.nodes && response.nodes.length > 0) {\n\n        console.debug(\"RX USERS: \" + response.nodes.length)\n\n        tempUsers = [...currentUsersRef.current];\n\n        for(const user of response.nodes){\n          if (user.screenName && user.screenName !== \"\"){\n            if (filterLowFollowersCountRef.current && user.followersCount < MIN_FOLLOWERS_COUNT){\n              console.log(\"LESS THAN MIN FOLLOWERS ... SKIPPING | @\" + user.screenName + \" | FOLLOWERS: \" + user.followersCount)\n            }\n            else {\n              console.log(\"+++ USER | @\" + user.screenName + \" | FOLLOWERS: \" + user.followersCount)\n              tempUsers.push(user)\n            }\n          }\n        }\n        console.debug(\"TOTAL USERS: \" + tempUsers.length)\n        setUsers(users => [...tempUsers])\n      }\n\n      if (tempUsers.length < MIN_USERS_AVAILABLE){\n        socket.emit(\"TWITTER_SEARCH_NODE\", {searchNode: response.searchNode, minFollowers: minFollowers})\n      }\n\n      setProgress(progress => \"idle\")\n      setStatus(status => response.stats)\n    })\n\n    socket.on(\"SET_TWITTER_USER\", (response) => {\n\n      console.debug(\"RX SET_TWITTER_USER\")\n\n      if (response.nodes) {\n        setUsers(users => [...users, ...response.nodes])\n        console.debug(\"RX nodes: \" + response.nodes.length)\n      }\n      \n      if (nodeValid(response.node)) {\n        setCurrentUser(currentUser => response.node)\n        console.debug(\"new: @\" + response.node.screenName)\n      }\n      else{\n\n      }\n\n      setProgress(progress => \"idle\")\n      setStatus(status => response.stats)\n    })\n\n    socket.on(\"TWITTER_SEARCH_NODE_UNKNOWN_MODE\", (response) => {\n      console.debug(\"RX TWITTER_SEARCH_NODE_UNKNOWN_MODE\")\n      console.debug({response})\n      setProgress(progress => \"idle\")\n      setStatus(status => response.stats)\n    })\n\n    socket.on(\"TWITTER_HASHTAG_NOT_FOUND\", (response) => {\n      console.debug(\"RX TWITTER_HASHTAG_NOT_FOUND\")\n      console.debug({response})\n      setStatusHashtag(statusHashtag => \"notFound\")\n      setCurrentHashtag(currentHashtag => {\n        return {nodeId: response.searchNode.slice(1)}\n      }) \n      setTweets({ search_metadata: {}, statuses: [] })\n      setProgress(progress => \"idle\")\n      setStatus(status => response.stats)\n    })\n\n    socket.on(\"SET_TWITTER_HASHTAG\", (response) => {\n\n      console.debug(\"RX SET_TWITTER_HASHTAG\")\n\n      if (nodeValid(response.node)) { \n        setStatusHashtag(statusHashtag => \"found\")\n        setCurrentHashtag(currentHashtag => response.node) \n        console.debug(\"new: #\" + response.node.nodeId)\n        if (response.tweets) {\n          console.debug(\"RX SET_TWITTER_HASHTAG | SET TWEETS: \" + response.tweets.statuses.length)\n          setTweets(tweets => response.tweets)\n        }\n      }\n      else{\n        setStatusHashtag(statusHashtag => \"invalid\")\n        console.debug(\"INVALID HT NODE | RESULTS\")\n        console.debug({response})\n      }\n\n      setProgress(progress => \"idle\")\n      setStatus(status => response.stats)\n    })\n\n    socket.on(\"action\", (action) => {\n      \n      console.debug(\"RX ACTION | socket: \" + socket.id + \" | TYPE: \" + action.type)\n      console.debug(\"RX ACTION | \", action.data)\n\n      switch (action.type){\n\n        case \"user\":\n            setCurrentUser(currentUser => action.data)\n            console.log(\"USER: @\" + action.data.screenName + \" | \" + action.data.profileImageUrl)\n          break\n\n        case \"hashtag\":\n            console.log(\"HT: #\" + action.data.text)\n          break\n\n        case \"stats\":\n            setStatus(() => action.data)\n          break\n\n        default:\n      }\n\n    })   \n\n    socket.on(\"authenticated\", function () {\n      setProgress(progress => \"idle\")\n      console.debug(\"AUTHENTICATED | \" + socket.id)\n      socket.emit(\"TWITTER_SEARCH_NODE\", {searchNode: \"@?all\"})\n      socket.emit(\"TWITTER_SEARCH_NODE\", {searchNode: \"@threecee\"})\n      socket.emit(\"TWITTER_SEARCH_NODE\", {searchNode: \"#blacklivesmatter\"})\n    })\n\n    socket.on(\"USER_AUTHENTICATED\", function (userObj) {\n      setProgress(progress => \"idle\")\n      setTwitterAuthenticated(() => true)\n      setTwitterAuthenticatedUser(twitterAuthenticatedUser => userObj)\n      setCurrentAccount(userObj)\n      console.log(\"RX TWITTER USER_AUTHENTICATED | USER: @\" + userObj.screenName)\n    })\n\n    socket.on(\"TWITTER_USER_NOT_FOUND\", (response) => {\n\n      console.debug(\"RX TWITTER_USER_NOT_FOUND\")\n      console.debug(response)\n\n      setStatus(status => response.stats)\n\n      if (response.searchNode.startsWith(\"@?\") && response.results && !response.results.endCursor){\n        console.debug(\"RETRY NEXT UNCAT: \" + response.searchNode)\n        socket.emit(\"TWITTER_SEARCH_NODE\", {searchNode: response.searchNode})\n      }\n      else{\n        setProgress(progress => \"idle\")\n      }\n    })\n    \n    setProgress(\"idle\")\n\n    return () => socket.disconnect()\n\n  }, [])\n\n  // history\n  // - back\n  useHotkeys('left', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // - forward\n  useHotkeys('right', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // all\n  useHotkeys('A', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // left\n  useHotkeys('L', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+L', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('D', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+D', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // right\n  useHotkeys('R', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+R', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // neutral\n  useHotkeys('N', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+N', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // negative\n  useHotkeys('-', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+-', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // positive\n  useHotkeys('=', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+=', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // ignore toggle\n  useHotkeys('shift+I', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+X', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // bot toggle\n  useHotkeys('shift+B', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // verified toggle\n  useHotkeys('shift+V', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  \n  const handleChangeSearch = (event) => {\n    console.log(\"handleChangeSearch: \" + event.target.value)\n    setUserSearch(event.target.value)\n  }\n\n  const handleKeyPress = (event) => {\n    if (event.charCode === 13) { // enter key pressed\n      console.log(\"ENTER\")\n      handleSearchNode(userSearch)\n    }\n  }\n\n  const handleFilterChange = (event) => {\n    event.persist()\n    setFilterLowFollowersCount(filterLowFollowersCountRef.current ? false : true)\n    console.log(`NAME: ${event.target.name} | CHECKED: ${event.target.checked} | filterLowFollowersCount: ${filterLowFollowersCount}`)\n  }\n\n  const displayTab = (tab) => {\n    if (tab === \"authUser\"){\n      return <AuthUserView authenticated={twitterAuthenticated} authUser={twitterAuthenticatedUser} stats={status}/>\n    }\n    else if (tab === \"user\"){\n      return <UserView \n        user={currentUser} \n        stats={status}\n        filterLowFollowersCount={filterLowFollowersCount}\n        handleNodeChange={handleNodeChange} \n        handleSearchNode={handleSearchNode}\n        handleFilterChange={handleFilterChange}\n      />\n    }\n    else{\n      return <HashtagView hashtag={currentHashtagRef.current} statusHashtag={statusHashtagRef.current} stats={statusRef.current} tweets={tweetsRef.current} handleNodeChange={handleNodeChange} handleSearchNode={handleSearchNode}/>\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Container component=\"main\" maxWidth={false}>\n        <AppBar  className={classes.appBar} position=\"static\">\n          <Toolbar className={classes.toolBar}>\n\n            <Typography className={classes.title}>\n              CATEGORIZE\n            </Typography>\n            \n            <Tabs \n              className={classes.tabs}\n              value={tabValue} \n              onChange={handleTabChange}\n            >\n              <Tab className={classes.tab} label=\"User\"/>\n              <Tab className={classes.tab} label=\"Hashtag\"/>\n              <Tab className={classes.tab} label=\"Account\"/>\n            </Tabs>\n\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon color=\"primary\"/>\n              </div>\n              <InputBase\n                // placeholder={currentTabRef.current === \"user\" ? \"user search...\" : \"hashtag search...\"}\n                placeholder={currentTab === \"user\" ? \"user search...\" : \"hashtag search...\"}\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                inputProps={{ 'aria-label': 'search' }}\n                value={userSearch}\n                onKeyPress={handleKeyPress}\n                onChange={handleChangeSearch}\n              />\n            </div>\n            \n            <Typography  className={classes.serverStatus}>\n              {status.nodesPerMin} NPM ( max: {status.maxNodesPerMin} at {formatDateTime(status.maxNodesPerMinTime)} )\n            </Typography>\n\n            {progress !== \"idle\" ? <><Typography className={classes.progress}>{`${progress} ...`}</Typography> <CircularProgress className={classes.progress}>{progress}</CircularProgress></> : <div className={classes.progress}></div>}\n\n            <Link\n              className={classes.twitterAuth}\n              href={\"http://twitter.com/\" + twitterAuthenticatedUser.screenName}\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              {twitterAuthenticatedUser.screenName ? \"@\" + twitterAuthenticatedUser.screenName : \"\"}\n            </Link>\n\n            <Button \n              className={classes.buttonLogin}\n              variant=\"contained\" \n              color={twitterAuthenticated ? \"secondary\" : \"primary\"} \n              size=\"small\" \n              onClick={event => { handleLoginLogout(event)}} \n              name=\"login\"\n              label=\"login\"\n            >\n              {twitterAuthenticated ? \"LOGOUT\" : \"LOGIN TWITTER\"}\n            </Button>\n\n          </Toolbar>\n        </AppBar>\n        {displayTab(currentTab)}\n      </Container>\n    </div>\n  )\n}\n\nexport default App;","// import React, { useState } from 'react';\nimport React from 'react';\nimport { green, grey } from '@material-ui/core/colors';\nimport clsx from 'clsx';\n\nimport { Timeline } from 'react-twitter-widgets'\n\nimport Duration from 'duration';\n\n// import AppBar from '@material-ui/core/AppBar';\n// import Button from '@material-ui/core/Button';\n// import ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Card from '@material-ui/core/Card';\n// import CardActionArea from '@material-ui/core/CardActionArea';\n// import CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n// import CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\n// import CheckBoxIcon from '@material-ui/icons/CheckBox';\n// import CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\n// import FormLabel from '@material-ui/core/FormLabel';\nimport Grid from '@material-ui/core/Grid';\n// import IconButton from '@material-ui/core/IconButton';\n// import InputBase from '@material-ui/core/InputBase';\n// import InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\n// import MenuIcon from '@material-ui/icons/Menu';\nimport Paper from '@material-ui/core/Paper';\n// import Radio from '@material-ui/core/Radio';\n// import RadioGroup from '@material-ui/core/RadioGroup';\n// import SearchIcon from '@material-ui/icons/Search';\nimport Select from '@material-ui/core/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n// import Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n  },\n  body: {\n    fontSize: 11,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    backgroundColor: grey,\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    border: 0,\n    flexGrow: 2,\n  },\n  appBar: {\n    border: 0,\n    backgroundColor: 'white',\n    marginBottom: theme.spacing(1),\n  },\n  grid: {\n    border: 0,\n    display: 'flex',\n    alignItems: 'stretch',\n  },\n  gridItem: {\n    border: 0,\n    margin: theme.spacing(1),\n  },\n  gridHeader: {\n    padding: theme.spacing(1),\n    border: 0,\n    marginBottom: theme.spacing(1),\n  },\n  paper: {\n    outlined: true,\n    variant: 'outlined',\n  },\n  card: {\n    alignSelf: \"center\",\n  },\n  profileImage: {\n    marginBottom: theme.spacing(1),\n  },\n  bannerImage: {\n    marginBottom: theme.spacing(1),\n  },\n  icon: {\n    borderRadius: '50%',\n    width: 16,\n    height: 16,\n    boxShadow: 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\n    backgroundColor: '#f5f8fa',\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\n    '$root.Mui-focusVisible &': {\n      outline: '2px auto rgba(19,124,189,.6)',\n      outlineOffset: 2,\n    },\n    'input:hover ~ &': {\n      backgroundColor: '#ebf1f5',\n    },\n    'input:disabled ~ &': {\n      boxShadow: 'none',\n      background: 'rgba(206,217,224,.5)',\n    },\n  },\n  checkedIcon: {\n    backgroundColor: '#137cbd',\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\n    '&:before': {\n      display: 'block',\n      width: 16,\n      height: 16,\n      backgroundImage: 'radial-gradient(#fff,#fff 28%,transparent 32%)',\n      content: '\"\"',\n    },\n    'input:hover ~ &': {\n      backgroundColor: '#106ba3',\n    },\n  },\n  selectCategory: {\n    fontSize: '0.9rem',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  radioGroupCategory: {\n    maxWidth: \"90%\",\n    fontSize: '0.5rem',\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n  },\n  checkbox: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n  radioButtonLabel: {\n    fontSize: '0.9rem'\n  },\n  radioButton: {\n  },\n  table: {\n    maxWidth: \"90%\",\n    padding: theme.spacing(1),\n  },\n  tableHead: {\n    backgroundColor: '#ddeeee',\n  },\n  tableCell: {\n  },\n  tableCategorized: {\n    backgroundColor: '#ddeeee',\n  },\n  tableRowGreen: {\n    backgroundColor: 'lightgreen',\n  },\n  statusBar: {\n    raised: false,\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    color: 'blue',\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: \"white\",\n    '&:hover': {\n      backgroundColor: \"#ddeeee\",\n    },\n    marginRight: theme.spacing(1),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'primary',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n\n  buttonGroupLabel: {\n    color: 'blue',\n    marginRight: theme.spacing(1),\n  },\n  buttonAll: {\n    color: 'black',\n  },\n  buttonLeft: {\n    color: 'blue',\n  },\n  buttonNeutral: {\n    color: 'gray',\n  },\n  buttonRight: {\n    color: 'red',\n  },\n  buttonMismatch: {\n    margin: 5\n  },\n  autoCategory:{\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n    marginBottom: theme.spacing(1),\n  },\n  category: {\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n\n  left: {\n    backgroundColor: 'blue',\n    color: 'white',\n  },\n  neutral: {\n    backgroundColor: 'darkgray',\n    color: 'white',\n  },\n  right: {\n    backgroundColor: 'red',\n    color: 'white',\n  },\n  positive: {\n    backgroundColor: 'green',\n    color: 'white',\n  },\n  negative: {\n    backgroundColor: 'yellow',\n    color: 'black',\n  },\n  none: {\n    backgroundColor: 'lightgray',\n    color: 'black',\n  },\n  ignored: {\n    backgroundColor: 'yellow',\n    color: 'black',\n  },\n\n}));\n\nconst formatDate = (dateInput) => {\n  return new Date(dateInput).toLocaleDateString(\n    'en-gb',\n    {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }\n  );\n}\n\nconst defaultProfileImage = \"logo192.png\"\nconst defaultBannerImage = \"logo192.png\"\n\nconst User = (props) => {\n\n  // const [filterLowFollowersCount, setFilterLowFollowersCount] = useState(true)\n  \n  const classes = useStyles();\n\n  const createdAt = formatDate(props.user.createdAt)\n  const lastSeen = formatDate(props.user.lastSeen)\n \n  const lastSeenDuration = new Duration(new Date(props.user.lastSeen)).toString(1, 4)\n  const twitterAge = props.user.createdAt ? new Duration(new Date(props.user.createdAt)) : new Duration(new Date())\n  const twitterAgeString = twitterAge.toString(1, 4)\n\n  const tweetRate = twitterAge.days > 0 ? Math.ceil(props.user.statusesCount/twitterAge.days) : 0;\n\n  const openUserTwitterPage = () => {\n    console.log(\"open twitter\")\n    window.open(`http://twitter.com/${props.user.screenName || null}`, \"_blank\") //to open new page\n  }\n\n  const getCategoryClass = (category) => {\n    switch (category){\n      case \"left\":\n      case \"neutral\":\n      case \"right\":\n      case \"positive\":\n      case \"negative\":\n      case \"ignored\":\n        return classes[category]\n      default:\n        return classes.none\n    }\n  }\n\n  return (\n    <>\n      <Grid className={classes.grid}>\n          <Grid item className={classes.gridItem} xs={3}>\n            <Card className={classes.card} variant=\"outlined\">\n\n              <CardContent onClick={openUserTwitterPage}>\n                  <Typography \n                    className={clsx(classes.category, props.user.ignored ? getCategoryClass(\"ignored\") : getCategoryClass(props.user.category))} \n                    variant=\"h6\"\n                  >\n                    {props.user.name}\n                  </Typography>\n                  <Typography variant=\"h6\">@{props.user.screenName} </Typography>\n              </CardContent>\n              <CardContent >\n                  <Typography>{props.user.description}</Typography>\n              </CardContent>\n\n              <CardMedia\n                className={classes.profileImage}\n                src={props.user.profileImageUrl || defaultProfileImage}\n                component=\"img\"\n                onError={e => {}}              \n              />\n              <CardMedia \n                className={classes.bannerImage} \n                src={props.user.bannerImageUrl || defaultBannerImage} \n                component=\"img\"\n                onError={e => {}}              \n              />\n            </Card>\n          </Grid>\n          <Grid item className={classes.gridItem} xs={3} >\n            <Paper className={classes.paper} elevation={0} variant=\"outlined\" >\n              <Timeline\n                dataSource={{\n                  sourceType: 'profile',\n                  screenName: props.user.screenName\n                }}\n                options={{width: '100%', height: '800'}}\n              />\n            </Paper>\n          </Grid>\n          <Grid item className={classes.gridItem} xs={3}>\n            <Paper className={classes.paper} elevation={0} variant=\"outlined\" >\n              <Typography\n                className={classes.gridHeader} \n              >\n                STATS\n              </Typography>\n              <TableContainer className={classes.table} >\n                <Table size=\"small\">\n                  <TableHead>\n                    <StyledTableRow className={classes.tableHead}>\n                      <StyledTableCell  colSpan={2}>@{props.user.screenName}</StyledTableCell>\n                    </StyledTableRow>\n                  </TableHead>\n                  <TableBody>\n                    <StyledTableRow>\n                      <StyledTableCell>Twitter ID</StyledTableCell><StyledTableCell align=\"right\">{props.user.nodeId}</StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow>\n                      <StyledTableCell>Location</StyledTableCell><StyledTableCell align=\"right\">{props.user.location}</StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow>\n                      <StyledTableCell>Created</StyledTableCell><StyledTableCell align=\"right\">{createdAt}</StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow>\n                      <StyledTableCell>Twitter age</StyledTableCell><StyledTableCell align=\"right\">{twitterAgeString}</StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow className={props.user.followersCount > 5000 ? classes.tableRowGreen : null}>\n                      <StyledTableCell>Followers</StyledTableCell><StyledTableCell align=\"right\">{props.user.followersCount}</StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow>\n                      <StyledTableCell>Friends</StyledTableCell><StyledTableCell align=\"right\">{props.user.friendsCount}</StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow>\n                      <StyledTableCell>Tweets</StyledTableCell><StyledTableCell align=\"right\">{props.user.statusesCount}</StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow>\n                      <StyledTableCell>Tweets/day</StyledTableCell><StyledTableCell align=\"right\">{tweetRate}</StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow>\n                      <StyledTableCell>Active</StyledTableCell><StyledTableCell align=\"right\">{lastSeen} ({lastSeenDuration} ago)</StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow>\n                      <StyledTableCell>Mentions</StyledTableCell><StyledTableCell align=\"right\">{props.user.mentions}</StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow>\n                      <StyledTableCell>Mentions/hour</StyledTableCell><StyledTableCell align=\"right\">{props.user.rate ? 60*props.user.rate.toFixed(2) : 0}</StyledTableCell>\n                    </StyledTableRow>\n                  </TableBody>\n                </Table>\n                <Table size=\"small\">\n                  <TableHead>\n                    <StyledTableRow className={classes.tableHead}>\n                      <StyledTableCell colSpan={3}>ALL USERS</StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow>\n                      <StyledTableCell>CAT</StyledTableCell>\n                      <StyledTableCell align=\"right\">MAN</StyledTableCell>\n                      <StyledTableCell align=\"right\">AUTO</StyledTableCell>\n                    </StyledTableRow>\n                  </TableHead>\n                  <TableBody>\n                    <StyledTableRow > \n                      <StyledTableCell>LEFT</StyledTableCell>\n                      <StyledTableCell align=\"right\">{props.stats.user.manual.left}</StyledTableCell>\n                      <StyledTableCell align=\"right\">{props.stats.user.auto.left}</StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow>\n                      <StyledTableCell >RIGHT</StyledTableCell>\n                      <StyledTableCell align=\"right\">{props.stats.user.manual.right}</StyledTableCell>\n                      <StyledTableCell align=\"right\">{props.stats.user.auto.right}</StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow>\n                      <StyledTableCell >NEUTRAL</StyledTableCell>\n                      <StyledTableCell align=\"right\">{props.stats.user.manual.neutral}</StyledTableCell>\n                      <StyledTableCell align=\"right\">{props.stats.user.auto.neutral}</StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow>\n                      <StyledTableCell >POSITIVE</StyledTableCell>\n                      <StyledTableCell align=\"right\">{props.stats.user.manual.positive}</StyledTableCell>\n                      <StyledTableCell align=\"right\">{props.stats.user.auto.positive}</StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow>\n                      <StyledTableCell >NEGATIVE</StyledTableCell>\n                      <StyledTableCell align=\"right\">{props.stats.user.manual.negative}</StyledTableCell>\n                      <StyledTableCell align=\"right\">{props.stats.user.auto.negative}</StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow>\n                      <StyledTableCell >NONE</StyledTableCell>\n                      <StyledTableCell align=\"right\">{props.stats.user.manual.none}</StyledTableCell>\n                      <StyledTableCell align=\"right\">{props.stats.user.auto.none}</StyledTableCell>\n                    </StyledTableRow>\n                  </TableBody>\n                </Table>\n              </TableContainer>          \n            </Paper>\n          </Grid>\n          <Grid item className={classes.gridItem} xs={2}>\n            <Paper className={classes.paper}  elevation={0} variant=\"outlined\">\n              <Typography\n                className={classes.gridHeader} \n              >\n                SETTINGS\n              </Typography>\n              <FormGroup align=\"center\">\n                <FormControl align=\"center\">\n                  <Select\n                    labelId=\"category-manual-label\"\n                    id=\"category-manual\"\n                    name=\"category\"\n                    className={clsx(classes.selectCategory, getCategoryClass(props.user.category))} \n                    value={props.user.category || \"none\"}\n                    onChange={(event) => props.handleNodeChange(event, props.user)}\n                  >\n                    <MenuItem dense={true} value={\"none\"} >NONE</MenuItem>\n                    <MenuItem dense={true} value={\"left\"} >LEFT</MenuItem>\n                    <MenuItem dense={true} value={\"neutral\"}>NEUTRAL</MenuItem>\n                    <MenuItem dense={true} value={\"right\"}>RIGHT</MenuItem>\n                    <MenuItem dense={true} value={\"positive\"}>POSITIVE</MenuItem>\n                    <MenuItem dense={true} value={\"negative\"}>NEGATIVE</MenuItem>\n\n                  </Select>\n                </FormControl>\n\n                <Typography\n                  className={clsx(classes.selectCategory, getCategoryClass(props.user.categoryAuto))} \n                >\n                  AUTO: {props.user.categoryAuto ? props.user.categoryAuto.toUpperCase() : \"NONE\"}\n                </Typography>\n\n                <FormControl component=\"fieldset\" className={classes.radioGroupCategory} size=\"small\">\n                  <FormControlLabel\n                    control={<Checkbox className={classes.checkbox} size=\"small\" checked={props.user.following || false} onChange={(event) => props.handleNodeChange(event, props.user)} name=\"following\" />}\n                    label={<Typography className={classes.radioButtonLabel}>FOLLOWING</Typography>}\n                  />\n                  <FormControlLabel\n                    control={<Checkbox className={classes.checkbox} size=\"small\" checked={props.user.categoryVerified || false} onChange={(event) => props.handleNodeChange(event, props.user)} name=\"catVerified\" />}\n                    label={<Typography className={classes.radioButtonLabel}>VERIFIED</Typography>}\n                  />\n                  <FormControlLabel\n                    control={<Checkbox className={classes.checkbox} size=\"small\" checked={props.user.ignored || false} onChange={(event) => props.handleNodeChange(event, props.user)} name=\"ignored\" />}\n                    label={<Typography className={classes.radioButtonLabel}>IGNORED</Typography>}\n                  />\n                  <FormControlLabel\n                    control={<Checkbox className={classes.checkbox} size=\"small\" checked={props.user.isBot || false} onChange={(event) => props.handleNodeChange(event, props.user)} name=\"isBot\" />}\n                    label={<Typography className={classes.radioButtonLabel}>BOT</Typography>}\n                  />\n                </FormControl>\n\n                <FormControl component=\"fieldset\" className={classes.radioGroupCategory} size=\"small\">\n                  <FormControlLabel\n                    control={<Checkbox className={classes.checkbox} size=\"small\" checked={props.filterLowFollowersCount || false} onChange={(event) => props.handleFilterChange(event)} name=\"filterLowFollowersCount\" />}\n                    label={<Typography className={classes.radioButtonLabel}>FILTER LOW FOLLOWERS</Typography>}\n                  />\n                </FormControl>\n\n              </FormGroup>\n            </Paper>\n          </Grid>\n        </Grid>\n    </>\n  );\n}\n\nexport default User;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Tweet } from 'react-twitter-widgets'\n\nimport Duration from 'duration';\nimport { green } from '@material-ui/core/colors';\n\n// import AppBar from '@material-ui/core/AppBar';\n// // import Box from '@material-ui/core/Box';\n// import Button from '@material-ui/core/Button';\n// import ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Card from '@material-ui/core/Card';\n// import CardActionArea from '@material-ui/core/CardActionArea';\n// import CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n// import CardHeader from '@material-ui/core/CardHeader';\n// import CardMedia from '@material-ui/core/CardMedia';\n// import CheckBoxIcon from '@material-ui/icons/CheckBox';\n// import CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\n// import FormLabel from '@material-ui/core/FormLabel';\nimport Grid from '@material-ui/core/Grid';\n// import IconButton from '@material-ui/core/IconButton';\n// import InputBase from '@material-ui/core/InputBase';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\n// import MenuIcon from '@material-ui/icons/Menu';\n// import Paper from '@material-ui/core/Paper';\n// import Radio from '@material-ui/core/Radio';\n// import RadioGroup from '@material-ui/core/RadioGroup';\n// import SearchIcon from '@material-ui/icons/Search';\nimport Select from '@material-ui/core/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\n// import TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n// import Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TableHead } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 2,\n  },\n  grid: {\n    display: 'flex',\n  },\n  gridItem: {\n    margin: 5,\n  },  \n  card: {\n    raised: false,\n    maxWidth: 400,\n  },\n  table: {\n  },\n  tableRowGreen: {\n    backgroundColor: 'lightgreen',\n  },\n  appBar: {\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  statusBar: {\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    color: 'blue',\n  },\n  search: {\n    flexGrow: 1,\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: \"white\",\n    '&:hover': {\n      backgroundColor: \"lightgray\",\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'primary',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  selectCategory: {\n    fontSize: '0.5rem',\n    backgroundColor: '#ddeeee',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  radioGroupCategory: {\n    fontSize: '0.5rem',\n    backgroundColor: '#ddeeee',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n  },\n  checkbox: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n  radioButtonLabel: {\n    fontSize: '0.9rem'\n  },\n  radioButton: {\n  },\n\n  buttonGroupLabel: {\n    color: 'blue',\n    marginRight: theme.spacing(1),\n  },\n  buttonAll: {\n    color: 'black',\n  },\n  buttonLeft: {\n    color: 'blue',\n  },\n  buttonNeutral: {\n    color: 'gray',\n  },\n  buttonRight: {\n    color: 'red',\n  },\n  buttonMismatch: {\n    margin: 5\n  },\n\n  autoCategory:{\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n  },\n\n  category: {\n    // fontSize: fontSizeCategory,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n\n  left: {\n    backgroundColor: 'blue',\n    color: 'white',\n  },\n  neutral: {\n    backgroundColor: 'darkgray',\n    color: 'white',\n  },\n  right: {\n    backgroundColor: 'red',\n    color: 'white',\n  },\n  positive: {\n    backgroundColor: 'green',\n    color: 'white',\n  },\n  negative: {\n    backgroundColor: 'yellow',\n    color: 'black',\n  },\n  none: {\n    backgroundColor: 'lightgray',\n    color: 'black',\n  },\n  ignored: {\n    backgroundColor: 'yellow',\n    color: 'black',\n  },\n\n}));\n\nconst formatDate = (dateInput) => {\n  return new Date(dateInput).toLocaleDateString(\n    'en-gb',\n    {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }\n  );\n}\n\nconst HashtagView = (props) => {\n\n  const classes = useStyles();\n\n  const createdAt = props.hashtag.createdAt ? formatDate(props.hashtag.createdAt) : \"---\"\n  const lastSeen = props.hashtag.lastSeen ? formatDate(props.hashtag.lastSeen) : \"---\"\n \n  const lastSeenDuration = props.hashtag.lastSeen ? new Duration(new Date(props.hashtag.lastSeen)).toString(1, 4) : \"---\"\n  const twitterAge = props.hashtag.createdAt ? new Duration(new Date(props.hashtag.createdAt)) : \"---\"\n  const twitterAgeString = props.hashtag.createdAt ? twitterAge.toString(1, 4) : \"---\"\n\n  const openHashtagTwitterPage = () => {\n    console.log(\"open twitter\")\n    window.open(`https://twitter.com/search?f=tweets&q=%23${props.hashtag.nodeId || null}`, \"_blank\") //to open new page\n  }\n\n  const displayTweets = (tweets) => {\n    if (!tweets || tweets === undefined || tweets.statuses === undefined) { return <></>}\n    return tweets.statuses.map((tweet) => {\n      return <Tweet key={tweet.id_str} tweetId={tweet.id_str} options={{ width: \"400\" }} />\n    })\n  }\n\n  const getCategoryClass = (category) => {\n    switch (category){\n      case \"left\":\n      case \"neutral\":\n      case \"right\":\n      case \"positive\":\n      case \"negative\":\n      case \"ignored\":\n        return classes[category]\n      default:\n        return classes.none\n    }\n  }\n\n  return (\n    <>\n      <Grid className={classes.grid}>\n        <Grid item className={classes.gridItem} xs={3}>\n          <Card className={classes.card} variant=\"outlined\">\n            <CardContent onClick={openHashtagTwitterPage}>\n              <Typography \n                className={clsx(classes.category, props.hashtag.ignored ? getCategoryClass(\"ignored\") : getCategoryClass(props.hashtag.category))} \n                variant=\"h6\"\n              >\n                #{props.statusHashtag === \"notFound\" ? props.hashtag.nodeId + \" NOT FOUND\" : props.hashtag.nodeId}\n            </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item className={classes.gridItem} xs={3}>{displayTweets(props.tweets)}</Grid>\n\n        <Grid item className={classes.gridItem} xs={3}>\n          <TableContainer>\n            <Table className={classes.table} size=\"small\">\n              <TableBody>\n                <TableRow>\n                  <TableCell>id</TableCell><TableCell align=\"right\">{props.hashtag.nodeId}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>created</TableCell><TableCell align=\"right\">{createdAt}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>twitter age</TableCell><TableCell align=\"right\">{twitterAgeString}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>last seen</TableCell><TableCell align=\"right\">{lastSeen}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>last seen</TableCell><TableCell align=\"right\">{lastSeenDuration} ago</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>mentions</TableCell><TableCell align=\"right\">{props.hashtag.mentions ? props.hashtag.mentions : \"---\"}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>mentions/min</TableCell><TableCell align=\"right\">{props.hashtag.rate ? props.hashtag.rate.toFixed(1) : \"---\"}</TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item className={classes.gridItem} xs={2}>\n          <TableContainer>\n            <Table className={classes.table} size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>CAT</TableCell>\n                  <TableCell align=\"left\">MAN</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                <TableRow>\n                  <TableCell>left</TableCell>\n                  <TableCell align=\"right\">{props.stats.hashtag.manual.left}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>neutral</TableCell>\n                  <TableCell align=\"right\">{props.stats.hashtag.manual.neutral}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>right</TableCell>\n                  <TableCell align=\"right\">{props.stats.hashtag.manual.right}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>positive</TableCell>\n                  <TableCell align=\"right\">{props.stats.hashtag.manual.positive}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>negative</TableCell>\n                  <TableCell align=\"right\">{props.stats.hashtag.manual.negative}</TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item className={classes.gridItem} xs={1}>\n\n          <FormGroup>\n            <FormControl >\n              <InputLabel id=\"category-manual\">CATEGORY</InputLabel>\n              <Select\n                labelId=\"category-manual-label\"\n                id=\"category-manual\"\n                name=\"category\"\n                className={clsx(classes.category, getCategoryClass(props.hashtag.category))} \n                align=\"center\"\n                value={props.hashtag.category || \"none\"}\n                onChange={(event) => props.handleNodeChange(event, props.hashtag)}\n              >\n                <MenuItem dense={true} value={\"none\"} >NONE</MenuItem>\n                <MenuItem dense={true} value={\"left\"} >LEFT</MenuItem>\n                <MenuItem dense={true} value={\"neutral\"}>NEUTRAL</MenuItem>\n                <MenuItem dense={true} value={\"right\"}>RIGHT</MenuItem>\n                <MenuItem dense={true} value={\"positive\"}>POSITIVE</MenuItem>\n                <MenuItem dense={true} value={\"negative\"}>NEGATIVE</MenuItem>\n\n              </Select>\n            </FormControl>\n\n            <Typography\n              className={clsx(classes.autoCategory, getCategoryClass(props.hashtag.categoryAuto))} \n              align=\"center\"\n            >\n              AUTO: {props.hashtag.categoryAuto ? props.hashtag.categoryAuto.toUpperCase() : \"NONE\"}\n            </Typography>\n\n            <FormControl \n              component=\"fieldset\"\n              className={classes.radioGroupCategory}\n              size=\"small\"\n            >\n\n              <FormControlLabel\n                control={<Checkbox className={classes.checkbox} size=\"small\" checked={props.hashtag.ignored || false} onChange={(event) => props.handleNodeChange(event, props.hashtag)} name=\"ignored\" />}\n                label={<Typography className={classes.radioButtonLabel}>IGNORED</Typography>}\n              />\n\n            </FormControl>\n          </FormGroup>\n\n          {/* <FormGroup>\n            <FormControl component=\"fieldset\">\n              <RadioGroup aria-label=\"category\" name=\"category\" value={props.hashtag.category || \"none\"} onChange={(event) => props.handleNodeChange(event, props.hashtag)}>\n                <FormControlLabel labelPlacement=\"start\" value=\"left\" control={<Radio />} label=\"left\"/>\n                <FormControlLabel labelPlacement=\"start\" value=\"neutral\" control={<Radio />} label=\"neutral\" />\n                <FormControlLabel labelPlacement=\"start\" value=\"right\" control={<Radio />} label=\"right\" />\n                <FormControlLabel labelPlacement=\"start\" value=\"positive\" control={<Radio />} label=\"positive\" />\n                <FormControlLabel labelPlacement=\"start\" value=\"negative\" control={<Radio />} label=\"negative\" />\n                <FormControlLabel labelPlacement=\"start\" value=\"none\" control={<Radio />} label=\"none\" />\n              </RadioGroup>\n            </FormControl>\n\n            <FormControlLabel\n              control={<Checkbox checked={props.hashtag.ignored || false} onChange={(event) => props.handleNodeChange(event, props.hashtag)} name=\"ignored\" />}\n              label=\"ignored\"\n              labelPlacement=\"start\"\n            />\n          </FormGroup>\n */}\n\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default HashtagView;\n","import React from 'react';\nimport clsx from 'clsx';\n// import { Tweet } from 'react-twitter-widgets'\nimport { green } from '@material-ui/core/colors';\n\nimport Duration from 'duration';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\n// import Checkbox from '@material-ui/core/Checkbox';\n// import FormControl from '@material-ui/core/FormControl';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import FormGroup from '@material-ui/core/FormGroup';\nimport Grid from '@material-ui/core/Grid';\n// import InputLabel from '@material-ui/core/InputLabel';\n// import MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\n// import Select from '@material-ui/core/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 2,\n  },\n  grid: {\n    display: 'flex',\n  },\n  gridItem: {\n    margin: 5,\n  },  \n  card: {\n    raised: false,\n    maxWidth: 400,\n  },\n  paper: {\n    outlined: true,\n    variant: 'outlined',\n  },\n  table: {\n    // minWidth: 500,\n  },\n  tableHead: {\n    backgroundColor: 'lightgreen',\n  },\n  tableBody: {\n    // backgroundColor: 'gray',\n  },\n  appBar: {\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  statusBar: {\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    color: 'blue',\n  },\n  search: {\n    flexGrow: 1,\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: \"white\",\n    '&:hover': {\n      backgroundColor: \"lightgray\",\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'primary',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  selectCategory: {\n    fontSize: '0.5rem',\n    backgroundColor: '#ddeeee',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  radioGroupCategory: {\n    fontSize: '0.5rem',\n    backgroundColor: '#ddeeee',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n  },\n  checkbox: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n  radioButtonLabel: {\n    fontSize: '0.9rem'\n  },\n  radioButton: {\n  },\n\n  buttonGroupLabel: {\n    color: 'blue',\n    marginRight: theme.spacing(1),\n  },\n  buttonAll: {\n    color: 'black',\n  },\n  buttonLeft: {\n    color: 'blue',\n  },\n  buttonNeutral: {\n    color: 'gray',\n  },\n  buttonRight: {\n    color: 'red',\n  },\n  buttonMismatch: {\n    margin: 5\n  },\n\n  autoCategory:{\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n  },\n\n  category: {\n    // fontSize: fontSizeCategory,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n\n  left: {\n    backgroundColor: 'blue',\n    color: 'white',\n  },\n  neutral: {\n    backgroundColor: 'darkgray',\n    color: 'white',\n  },\n  right: {\n    backgroundColor: 'red',\n    color: 'white',\n  },\n  positive: {\n    backgroundColor: 'green',\n    color: 'white',\n  },\n  negative: {\n    backgroundColor: 'yellow',\n    color: 'black',\n  },\n  none: {\n    backgroundColor: 'lightgray',\n    color: 'black',\n  },\n  ignored: {\n    backgroundColor: 'yellow',\n    color: 'black',\n  },\n\n}));\n\nconst formatDate = (dateInput) => {\n  return new Date(dateInput).toLocaleDateString(\n    'en-gb',\n    {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }\n  );\n}\nconst defaultProfileImage = \"logo192.png\"\nconst defaultBannerImage = \"logo192.png\"\n\nconst AuthUserView = (props) => {\n\n  const authenticated = props.authenticated || false;\n\n  const classes = useStyles();\n\n  const defaultCategorizedRate = {\n    total: 0.05,\n    today: 0.05,\n    periodCurrent: 0.05,\n    periodLast: 0.05,\n  }\n\n  const categorizedRate = props.categorizedRate || defaultCategorizedRate;\n\n  const categorized = {};\n  categorized.total = props.authUser.screenName ? props.stats.user.categorizedBy[props.authUser.screenName].total : 0\n  categorized.today = props.authUser.screenName ? props.stats.user.categorizedBy[props.authUser.screenName].today : 0\n  categorized.periodCurrent = props.authUser.screenName ? props.stats.user.categorizedBy[props.authUser.screenName].periodCurrent : 0\n  categorized.periodLast = props.authUser.screenName ? props.stats.user.categorizedBy[props.authUser.screenName].periodLast || 0 : 0\n\n  const defaultEarned = {\n    total: 0,\n    today: 0,\n    periodCurrent: 0,\n    periodLast: 0,\n  };\n\n  let earned = props.earned || defaultEarned;\n\n  const defaultPaid = {\n    total: 0,\n    today: 0,\n    periodCurrent: 0,\n    periodLast: 0,\n  };\n\n  let paid = props.paid || defaultPaid;\n\n  const createdAt = formatDate(props.authUser.createdAt)\n  const lastSeen = formatDate(props.authUser.lastSeen)\n \n  const lastSeenDuration = props.authUser.lastSeen ? new Duration(new Date(props.authUser.lastSeen)).toString(1, 4) : \"---\"\n  const twitterAge = props.authUser.createdAt ? new Duration(new Date(props.authUser.createdAt)) : new Duration(new Date())\n  const twitterAgeString = twitterAge.toString(1, 4)\n\n  const tweetRate = twitterAge.days > 0 ? Math.ceil(props.authUser.statusesCount/twitterAge.days) : 0;\n\n  const openUserTwitterPage = () => {\n    console.log(\"open twitter\")\n    window.open(`http://twitter.com/${props.authUser.screenName || null}`, \"_blank\") //to open new page\n  }\n\n  const getCategoryClass = (category) => {\n    switch (category){\n      case \"left\":\n      case \"neutral\":\n      case \"right\":\n      case \"positive\":\n      case \"negative\":\n      case \"ignored\":\n        return classes[category]\n      default:\n        return classes.none\n    }\n  }\n  return (\n    authenticated ?\n    <>\n      <Grid className={classes.grid}>\n        <Grid item className={classes.gridItem} xs={3}>\n          <Card className={classes.card} variant=\"outlined\">\n\n            <CardContent onClick={openUserTwitterPage}>\n                <Typography \n                  className={clsx(classes.category, props.authUser.ignored ? getCategoryClass(\"ignored\") : getCategoryClass(props.authUser.category))} \n                  variant=\"h6\"\n                >\n                  {props.authUser.name}\n                </Typography>\n                <Typography variant=\"h6\">@{props.authUser.screenName} </Typography>\n            </CardContent>\n            <CardContent >\n                <Typography>{props.authUser.description}</Typography>\n            </CardContent>\n\n            <CardMedia\n              className={classes.profileImage}\n              src={props.authUser.profileImageUrl || defaultProfileImage}\n              component=\"img\"\n              onError={e => {}}              \n            />\n            <CardMedia \n              className={classes.bannerImage} \n              src={props.authUser.bannerImageUrl || defaultBannerImage} \n              component=\"img\"\n              onError={e => {}}              \n            />\n          </Card>        </Grid>\n        <Grid item className={classes.gridItem} xs={3}>\n          <Paper className={classes.paper}  elevation={0} variant=\"outlined\">\n            <TableContainer>\n              <Table  className={classes.table}  size=\"small\">\n                <TableHead className={classes.tableHead}>\n                  <TableRow>\n                    <TableCell>@{props.authUser.screenName}</TableCell><TableCell align=\"right\"></TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody className={classes.tableBody}>\n                  <TableRow>\n                    <TableCell>Twitter ID</TableCell><TableCell align=\"right\">{props.authUser.nodeId}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Location</TableCell><TableCell align=\"right\">{props.authUser.location}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Created</TableCell><TableCell align=\"right\">{createdAt}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Twitter age</TableCell><TableCell align=\"right\">{twitterAgeString}</TableCell>\n                  </TableRow>\n                  <TableRow className={props.authUser.followersCount > 5000 ? classes.tableRowGreen : null}>\n                    <TableCell>Followers</TableCell><TableCell align=\"right\">{props.authUser.followersCount}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Friends</TableCell><TableCell align=\"right\">{props.authUser.friendsCount}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Tweets</TableCell><TableCell align=\"right\">{props.authUser.statusesCount}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Tweets/day</TableCell><TableCell align=\"right\">{tweetRate}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Active</TableCell><TableCell align=\"right\">{lastSeen} ({lastSeenDuration} ago)</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Mentions</TableCell><TableCell align=\"right\">{props.authUser.mentions}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Mentions/hour</TableCell><TableCell align=\"right\">{props.authUser.rate ? 60*props.authUser.rate.toFixed(2) : 0}</TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </TableContainer>              \n          </Paper>\n        </Grid>\n        <Grid item className={classes.gridItem} xs={5}>\n\n          <Paper className={classes.paper}  elevation={0} variant=\"outlined\">\n\n            <TableContainer>\n\n              <Table className={classes.table} size=\"small\"  aria-label=\"simple table\">\n\n                <TableHead className={classes.tableHead}>\n                  <TableRow>\n                    <TableCell>CATEGORIZED</TableCell>\n                    <TableCell align=\"right\">USERS</TableCell>\n                    <TableCell align=\"right\">RATE ($)</TableCell>\n                    <TableCell align=\"right\">EARNED ($)</TableCell>\n                    <TableCell align=\"right\">PAID ($)</TableCell>\n                  </TableRow>\n                </TableHead>\n\n                <TableBody>\n                  <TableRow>\n                    <TableCell >TOTAL</TableCell>\n                    <TableCell align=\"right\">{categorized.total || \"---\"}</TableCell>\n                    <TableCell align=\"right\">{categorizedRate.total || \"---\"}</TableCell>\n                    <TableCell align=\"right\">{earned.total || (categorized.total * categorizedRate.total).toFixed(2)}</TableCell>\n                    <TableCell align=\"right\">{paid.total || \"---\"}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell >Today</TableCell>\n                    <TableCell align=\"right\">{categorized.today || \"---\"}</TableCell>\n                    <TableCell align=\"right\">{categorizedRate.today || \"---\"}</TableCell>\n                    <TableCell align=\"right\">{earned.today || (categorized.today * categorizedRate.today).toFixed(2)}</TableCell>\n                    <TableCell align=\"right\">{paid.today || \"---\"}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell >Current Period</TableCell>\n                    <TableCell align=\"right\">{categorized.periodCurrent || \"---\"}</TableCell>\n                    <TableCell align=\"right\">{categorizedRate.periodCurrent || \"---\"}</TableCell>\n                    <TableCell align=\"right\">{earned.periodCurrent || (categorized.periodCurrent * categorizedRate.periodCurrent).toFixed(2)}</TableCell>\n                    <TableCell align=\"right\">{paid.periodCurrent || \"---\"}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell >Last Period</TableCell>\n                    <TableCell align=\"right\">{categorized.periodLast || \"---\"}</TableCell>\n                    <TableCell align=\"right\">{categorizedRate.periodLast || \"---\"}</TableCell>\n                    <TableCell align=\"right\">{earned.periodLast || (categorized.periodLast * categorizedRate.periodLast).toFixed(2)}</TableCell>\n                    <TableCell align=\"right\">{paid.periodLast || \"---\"}</TableCell>\n                  </TableRow>\n                </TableBody>\n\n              </Table>\n            </TableContainer>              \n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n    :\n    <h3>\n      NOT AUTHENTICATED\n    </h3>\n  );\n}\n\nexport default AuthUserView;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// ReactDOM.render(\n//   <Router>\n//     <div>\n//       <Switch>\n//         <Route path=\"/categorize/user/:slug\">\n//           <App />\n//         </Route>\n//       </Switch>\n//     </div>\n//   </Router>,\n//   document.getElementById('root')\n// );\n\nReactDOM.render(\n  <Router>\n    <div>\n      <Switch>\n        <Route path=\"/categorize/user/:slug\">\n          <App />\n        </Route>\n        <Route path=\"/categorize/hashtag/:slug\">\n          <App />\n        </Route>\n        <Route path=\"/categorize/account/:slug\">\n          <App />\n        </Route>\n        <Route >\n          <App />\n        </Route>\n      </Switch>\n    </div>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}