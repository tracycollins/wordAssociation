{"version":3,"sources":["App.js","User.js","reportWebVitals.js","index.js"],"names":["min","max","useStyles","makeStyles","theme","root","flexGrow","grid","display","gridItem","margin","card","raised","maxWidth","profileImage","height","bannerImage","table","tableRowGreen","backgroundColor","appBar","statusBar","menuButton","marginRight","spacing","title","color","search","position","borderRadius","shape","marginLeft","width","breakpoints","up","searchIcon","padding","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","buttonGroupLabel","buttonAll","buttonLeft","buttonNeutral","buttonRight","buttonMismatch","left","neutral","right","none","formatDate","dateInput","Date","toLocaleDateString","year","month","day","User","props","classes","createdAt","user","lastSeen","lastSeenDuration","Duration","toString","twitterAge","twitterAgeString","tweetRate","days","Math","ceil","statusesCount","useState","screenName","userSearch","setUserSearch","useEffect","AppBar","className","Toolbar","Typography","variant","InputBase","placeholder","input","inputProps","value","onKeyPress","event","charCode","console","log","handleSearchUser","onChange","target","ButtonGroup","size","aria-label","Button","onClick","handleUserChange","name","stats","uncategorized","all","mismatched","Grid","item","xs","Card","CardContent","window","open","CardMedia","src","profileImageUrl","component","onError","e","bannerImageUrl","description","dataSource","sourceType","options","TableContainer","Table","TableBody","TableRow","TableCell","align","nodeId","location","followersCount","friendsCount","mentions","rate","toFixed","TableHead","manual","auto","FormGroup","category","getCategoryClass","categoryAuto","toUpperCase","FormControl","RadioGroup","FormControlLabel","labelPlacement","control","Radio","label","Checkbox","checked","categoryVerified","following","ignored","isBot","DEFAULT_AUTH_URL","VIEWER_ID","floor","random","DEFAULT_VIEWER_OBJ","userId","viewerId","type","namespace","timeStamp","now","tags","mode","entity","viewerObj","statsObj","socket","socketClient","twitterFeedPreviousUserArray","twitterAuth","buttonLogin","App","twitterAuthenticated","setTwitterAuthenticated","twitterAuthenticatedUser","setTwitterAuthenticatedUser","nodesPerMin","maxNodesPerMin","bestNetworkId","status","setStatus","tweets","age","rateMax","tweetsPerDay","categoryVerfied","currentUser","setCurrentUser","previousUser","setPreviousUser","text","currentHashtag","setHashtag","useCallback","undefined","persist","preventDefault","eventName","currentTarget","eventValue","eventChecked","code","shiftKey","searchFilter","emit","node","on","results","debug","action","id","data","includes","push","password","disconnect","socketId","serverConnected","userReadyTransmitted","userReadyAck","userObj","useHotkeys","Container","warn","isAuthenticated","searchString","searchTerm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dea02249.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport socketClient from \"socket.io-client\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Container from '@material-ui/core/Container';\nimport AppBar from '@material-ui/core/AppBar';\n// import CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\n// import ButtonGroup from '@material-ui/core/ButtonGroup';\n// import InputBase from '@material-ui/core/InputBase';\n// import SearchIcon from '@material-ui/icons/Search';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport './App.css';\nimport User from './User.js';\n\n// const ENDPOINT = \"http://mbp3:9997/view\";\nconst ENDPOINT = \"https://word.threeceelabs.com/view\";\nconst DEFAULT_AUTH_URL = \"http://word.threeceelabs.com/auth/twitter\";\n\nconst randomIntFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst randomId = randomIntFromInterval(1000000000, 9999999999);\nconst VIEWER_ID = \"viewer_\" + randomId;\n\nconst DEFAULT_VIEWER_OBJ = {\n  nodeId: VIEWER_ID,\n  userId: VIEWER_ID,\n  viewerId: VIEWER_ID,\n  screenName: VIEWER_ID,\n  type: \"viewer\",\n  namespace: \"view\",\n  timeStamp: Date.now(),\n  tags: {},\n};\n\nDEFAULT_VIEWER_OBJ.tags.type = \"viewer\";\n\nDEFAULT_VIEWER_OBJ.tags.mode = \"stream\";\nDEFAULT_VIEWER_OBJ.tags.entity = VIEWER_ID;\n\nconst viewerObj = DEFAULT_VIEWER_OBJ;\n\nconsole.log({viewerObj});\n\nconst statsObj = {};\nstatsObj.isAuthenticated = false;\nstatsObj.viewerReadyTransmitted = false;\n\nconst socket = socketClient(ENDPOINT);\nconst twitterFeedPreviousUserArray = [];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  title: {\n    flexGrow: 1,\n    color: 'blue',\n  },\n  twitterAuth: {\n    // backgroundColor: 'black',\n    color: \"gray\",\n    padding: theme.spacing(1),\n    marginRight: theme.spacing(2),\n  },  \n  buttonLogin: {\n    marginRight: theme.spacing(2),\n  },\n  statusBar: {\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: \"white\",\n    '&:hover': {\n      backgroundColor: \"lightgray\",\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'primary',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n\n}));\n\nconst App = () => {\n\n  const classes = useStyles();\n\n  const defaultStatus = {\n    nodesPerMin: 0, \n    maxNodesPerMin: 0,\n    bestNetworkId: \"\",\n    user: {\n      uncategorized: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        all: 0,\n        mismatched: 0\n      },\n      manual: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n      },\n      auto: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n      }\n    }\n  }\n\n  const defaultUser = {\n\n    nodeId: null, \n    screenName: \"threecee\",\n    name: \"\",\n    location: \"\",\n    description: \"\",\n    profileImageUrl: \"https://pbs.twimg.com/profile_images/1205585278565527559/GrTkBpzl.jpg\",\n    bannerImage: \"\",\n    createdAt: null,\n    followersCount: 0,\n    friendsCount: 0,\n    tweets: 0,\n\n    age: 0,\n    mentions: 0,\n    rate: 0,\n    rateMax: 0,\n    tweetsPerDay: 0,\n\n    lastSeen: null,\n    isBot: false,\n    following: false,\n    categoryVerfied: false,\n    category: \"none\",\n    categoryAuto: \"none\",\n  }\n\n  const defaultHashtag = {\n    nodeId: null,\n    text: null,\n    categoryAuto: \"none\",\n    category: \"none\",\n    \n    lastSeen: null,\n    age: 0,\n    mentions: 0,\n    rate: 0,\n    rateMax: 0,\n  }\n\n  const [twitterAuthenticated, setTwitterAuthenticated] = useState(false);\n  const [twitterAuthenticatedUser, setTwitterAuthenticatedUser  ] = useState(false);\n  const [status, setStatus] = useState(defaultStatus);\n  const [currentUser, setCurrentUser] = useState(defaultUser);\n  const [previousUser, setPreviousUser] = useState({nodeId: false});\n  const [currentHashtag, setHashtag] = useState(defaultHashtag);\n  \n  const handleSearchUser = (searchString) => {\n    const searchTerm = \"@\" + searchString\n    socket.emit(\"TWITTER_SEARCH_NODE\", searchTerm)\n  }\n\n  const handleLogin = () => {\n      console.warn(\n      \"LOGIN: AUTH: \" +\n        statsObj.isAuthenticated +\n        \" | URL: \" +\n        DEFAULT_AUTH_URL\n    );\n    window.open(DEFAULT_AUTH_URL, \"LOGIN\", \"_new\");\n    socket.emit(\"login\", viewerObj);\n  }\n\n  const handleUserChange = useCallback((event) => {\n\n    // console.log(\"handleUserChange | currentUser: @\" + currentUser.screenName)\n\n    if (event.persist !== undefined) { \n      event.persist() \n    }\n\n    if (event.preventDefault !== undefined) { \n      event.preventDefault() \n    }\n\n    let eventName = event.currentTarget.name;\n    let eventValue = event.currentTarget.value;\n    let eventChecked = event.currentTarget.checked;\n\n    if (event.currentTarget.name === undefined && event.code){\n      switch (event.code){\n        case \"ArrowRight\":\n          eventName = \"all\"\n          break;\n        case \"ArrowLeft\":\n          eventName = \"all\"\n          break;\n        case \"KeyD\":\n        case \"KeyL\":\n          if (event.shiftKey){\n            eventName = \"category\"\n            eventValue = \"left\"\n          }\n          else{\n            eventName = \"left\"\n          }\n          break;\n        case \"KeyN\":\n          if (event.shiftKey){\n            eventName = \"category\"\n            eventValue = \"neutral\"\n          }\n          else{\n            eventName = \"neutral\"\n          }\n          break;\n        case \"KeyR\":\n          if (event.shiftKey){\n            eventName = \"category\"\n            eventValue = \"right\"\n          }\n          else{\n            eventName = \"right\"\n          }\n          break;\n        case \"KeyI\":\n          if (event.shiftKey){\n            eventName = \"ignored\"\n            eventChecked = !currentUser.ignored\n          }\n          break;\n        case \"KeyV\":\n          if (event.shiftKey){\n            eventName = \"catVerified\"\n            eventChecked = !currentUser.categoryVerified\n          }\n          break;\n        case \"KeyB\":\n          if (event.shiftKey){\n            eventName = \"isBot\"\n            eventChecked = !currentUser.isBot\n          }\n          break;\n        default:\n      }\n    }\n\n    console.log(\"handleUserChange | @\" + currentUser.screenName + \" | name: \" + eventName + \" | value: \" + eventValue)\n\n    let searchFilter = \"@?\";\n\n    switch (eventName){\n      case \"all\":\n      case \"left\":\n      case \"neutral\":\n      case \"right\":\n        searchFilter += eventName\n        socket.emit(\"TWITTER_SEARCH_NODE\", searchFilter);\n        break\n      case \"mismatch\":\n        socket.emit(\"TWITTER_SEARCH_NODE\", \"@?mm\");\n        break\n      case \"category\":\n        socket.emit(\"TWITTER_CATEGORIZE_NODE\", {\n          category: eventValue,\n          following: true,\n          node: currentUser,\n        });\n        break\n      case \"isBot\":\n        if (eventChecked){\n          socket.emit(\"TWITTER_BOT\", currentUser);\n        }\n        else{\n          socket.emit(\"TWITTER_UNBOT\", currentUser);\n        }\n        break\n      case \"following\":\n        if (eventChecked){\n          socket.emit(\"TWITTER_FOLLOW\", currentUser);\n        }\n        else{\n          socket.emit(\"TWITTER_UNFOLLOW\", currentUser);\n        }\n        break\n      case \"catVerified\":\n        if (eventChecked){\n          socket.emit(\"TWITTER_CATEGORY_VERIFIED\", currentUser);\n        }\n        else{\n          socket.emit(\"TWITTER_CATEGORY_UNVERIFIED\", currentUser);\n        }\n        break\n      case \"ignored\":\n        if (eventChecked){\n          socket.emit(\"TWITTER_IGNORE\", currentUser);\n        }\n        else{\n          socket.emit(\"TWITTER_UNIGNORE\", currentUser);\n        }\n        break\n      default:\n        console.log(\"handleUserChange: UNKNOWN NAME: \" + eventName + \" | VALUE: \" + eventValue)\n        console.log({event})\n    }\n    \n  }, [currentUser])\n\n  const nodeValid = (node) => {\n    if (node === undefined) return false\n    if (node.nodeId === undefined) return false\n    if (node.screenName === undefined) return false\n    return true\n  }\n  \n  useEffect(() => {\n    socket.on(\"SET_TWITTER_USER\", (results) => {\n      console.debug(\"RX SET_TWITTER_USER\");\n      console.debug(results);\n      if (nodeValid(results.node)) { setCurrentUser(results.node) }\n      setStatus(results.stats)\n    });\n  }, [])\n\n  useEffect(() => {\n    socket.on(\"action\", (action) => {\n      console.debug(\"RX ACTION | \" + socket.id + \" | TYPE: \" + action.type);\n      console.debug(\"RX ACTION | \", action.data);\n\n      switch (action.type){\n        case \"user\":\n            setCurrentUser(action.data)\n\n            if (previousUser.nodeId \n              && (currentUser.nodeId !== previousUser.nodeId) \n              && !twitterFeedPreviousUserArray.includes(previousUser.nodeId)\n            ){\n              twitterFeedPreviousUserArray.push(previousUser.nodeId);\n            }\n            if (previousUser.nodeId !== currentUser.nodeId){\n              setPreviousUser(currentUser);\n            }\n\n            console.log(\"USER: @\" + action.data.screenName + \" | \" + action.data.profileImageUrl)\n          break\n        case \"hashtag\":\n            setHashtag({})\n            console.log(\"HT: #\" + currentHashtag.text)\n          break\n        case \"stats\":\n            setStatus(action.data)\n          break\n          default:\n      }\n\n    });   \n     \n  }, [])\n\n  useEffect(() => {\n    socket.on(\"connect\", ()=>{\n      console.log(\"CONNECTED: \" + socket.id)\n      socket.emit(\"authentication\", {\n        namespace: \"view\",\n        userId: \"test\",\n        password: \"0123456789\",\n      });\n    })\n    return () => socket.disconnect();\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"authenticated\", function () {\n      console.debug(\"AUTHENTICATED | \" + socket.id);\n\n      statsObj.socketId = socket.id;\n      statsObj.serverConnected = true;\n      statsObj.userReadyTransmitted = false;\n      statsObj.userReadyAck = false;\n      socket.emit(\"TWITTER_SEARCH_NODE\", \"@threecee\")\n    });\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"USER_AUTHENTICATED\", function (userObj) {\n      setTwitterAuthenticated(true)\n      setTwitterAuthenticatedUser(userObj.screenName)\n      console.log(\"RX TWITTER USER_AUTHENTICATED | USER: @\" + userObj.screenName);\n    });\n  }, []);\n\n\n  useHotkeys('right', handleUserChange) // next uncat any\n  useHotkeys('left', handleUserChange) // prev uncat any\n\n  useHotkeys('L', handleUserChange)\n  useHotkeys('shift+L', (event) => handleUserChange(event), {}, [currentUser])\n\n  useHotkeys('D', handleUserChange)\n  useHotkeys('shift+D', (event) => handleUserChange(event), {}, [currentUser])\n\n  useHotkeys('R', handleUserChange)\n  useHotkeys('shift+R', (event) => handleUserChange(event), {}, [currentUser])\n\n  useHotkeys('N', handleUserChange)\n  useHotkeys('shift+N', (event) => handleUserChange(event), {}, [currentUser])\n\n  useHotkeys('shift+I', (event) => handleUserChange(event), {}, [currentUser])\n  useHotkeys('shift+B', (event) => handleUserChange(event), {}, [currentUser])\n  useHotkeys('shift+V', (event) => handleUserChange(event), {}, [currentUser])\n\n  return (\n    <div className={classes.root}>\n      <Container component=\"main\" maxWidth={false}>\n        <AppBar  className={classes.appBar} position=\"static\">\n          <Toolbar>\n\n            <Typography variant=\"h6\" className={classes.title}>\n              Categorizer\n            </Typography>\n\n            <Typography className={classes.twitterAuth}>\n              {twitterAuthenticatedUser ? \"@\" + twitterAuthenticatedUser : \"logged out\"}\n            </Typography>\n\n            <Button \n              className={classes.buttonLogin}\n              variant=\"contained\" \n              color=\"primary\" \n              size=\"small\" \n              onClick={handleLogin} \n              name=\"login\"\n              label=\"login\"\n            >\n              {twitterAuthenticated ? \"LOGOUT\" : \"LOGIN TWITTER\"}\n            </Button>\n\n          </Toolbar>\n        </AppBar>\n        <User user={currentUser} stats={status} handleUserChange={handleUserChange} handleSearchUser={handleSearchUser}/>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;","import React, { useState, useEffect } from 'react';\nimport { Timeline } from 'react-twitter-widgets'\n\nimport Duration from 'duration';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Card from '@material-ui/core/Card';\n// import CardActionArea from '@material-ui/core/CardActionArea';\n// import CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n// import CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\n// import CheckBoxIcon from '@material-ui/icons/CheckBox';\n// import CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\n// import FormLabel from '@material-ui/core/FormLabel';\nimport Grid from '@material-ui/core/Grid';\n// import IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\n// import MenuIcon from '@material-ui/icons/Menu';\n// import Paper from '@material-ui/core/Paper';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\n// import TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TableHead } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 2,\n  },\n  grid: {\n    display: 'flex',\n  },\n  gridItem: {\n    margin: 5,\n  },  \n  card: {\n    raised: false,\n    maxWidth: 300,\n  },\n  profileImage: {\n    height: 300,\n  },\n  bannerImage: {\n    height: 80,\n  },\n  table: {\n  },\n  tableRowGreen: {\n    backgroundColor: 'lightgreen',\n  },\n  appBar: {\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  statusBar: {\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    color: 'blue',\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: \"white\",\n    '&:hover': {\n      backgroundColor: \"lightgray\",\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'primary',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n\n  buttonGroupLabel: {\n    color: 'blue',\n    marginRight: theme.spacing(1),\n  },\n  buttonAll: {\n    color: 'black',\n  },\n  buttonLeft: {\n    color: 'blue',\n  },\n  buttonNeutral: {\n    color: 'gray',\n  },\n  buttonRight: {\n    color: 'red',\n  },\n  buttonMismatch: {\n    margin: 5\n  },\n\n  left: {\n    color: 'white',\n    backgroundColor: 'blue',\n  },\n  neutral: {\n    color: 'white',\n    backgroundColor: 'gray',\n  },\n  right: {\n    color: 'white',\n    backgroundColor: 'red',\n  },\n  none: {\n    color: 'black',\n    backgroundColor: 'white',\n  },\n\n}));\n\nconst formatDate = (dateInput) => {\n  return new Date(dateInput).toLocaleDateString(\n    'en-gb',\n    {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }\n  );\n}\n\nconst defaultProfileImage = \"logo192.png\"\nconst defaultBannerImage = \"logo192.png\"\n\nconst User = (props) => {\n\n  const classes = useStyles();\n\n  const createdAt = formatDate(props.user.createdAt)\n  const lastSeen = formatDate(props.user.lastSeen)\n \n  const lastSeenDuration = new Duration(new Date(props.user.lastSeen)).toString(1, 4)\n  const twitterAge = props.user.createdAt ? new Duration(new Date(props.user.createdAt)) : new Duration(new Date())\n  const twitterAgeString = twitterAge.toString(1, 4)\n\n  const tweetRate = twitterAge.days > 0 ? Math.ceil(props.user.statusesCount/twitterAge.days) : 0;\n\n  const [userSearch, setUserSearch] = useState(props.user.screenName);\n\n  \n  useEffect(() => {\n    setUserSearch(props.user.screenName)\n  }, [props])\n  \n  const handleChangeSearch = (event) => {\n    console.log(\"handleChangeSearch: \" + event.target.value)\n    setUserSearch(event.target.value);\n  }\n\n  const handleKeyPress = (event) => {\n    if (event.charCode === 13) { // enter key pressed\n      console.log(\"ENTER\")\n      props.handleSearchUser(userSearch)\n    }\n  }\n\n  const openUserTwitterPage = () => {\n    console.log(\"open twitter\")\n    window.open(`http://twitter.com/${props.user.screenName || null}`, \"_blank\") //to open new page\n  }\n\n  const getCategoryClass = (category) => {\n    switch (category){\n      case \"left\":\n      case \"neutral\":\n      case \"right\":\n        return classes[category]\n      default:\n        return classes.none\n    }\n  }\n\n  return (\n    <div>\n      <AppBar  className={classes.appBar} position=\"static\">\n        <Toolbar>\n\n          <Typography variant=\"h6\" className={classes.title}>\n            User\n          </Typography>\n\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon color=\"primary\"/>\n            </div>\n            <InputBase\n              placeholder=\"search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n              value={userSearch}\n              onKeyPress={handleKeyPress}\n              onChange={handleChangeSearch}\n            />\n          </div>\n\n          <Typography className={classes.buttonGroupLabel}>\n            UNCAT\n          </Typography>   \n\n          <ButtonGroup variant=\"contained\" color=\"primary\" size=\"small\" aria-label=\"small button group\">\n\n            <Button onClick={props.handleUserChange} name=\"all\" >ALL: {props.stats.user.uncategorized.all}</Button>\n            <Button onClick={props.handleUserChange} name=\"left\" >LEFT: {props.stats.user.uncategorized.left}</Button>\n            <Button onClick={props.handleUserChange} name=\"neutral\" >NEUTRAL: {props.stats.user.uncategorized.neutral}</Button>\n            <Button onClick={props.handleUserChange} name=\"right\" >RIGHT: {props.stats.user.uncategorized.right}</Button>\n          </ButtonGroup>\n          <Button \n            variant=\"contained\" color=\"primary\" size=\"small\" onClick={props.handleUserChange} name=\"mismatch\" className={classes.buttonMismatch}>MISMATCH {props.stats.user.mismatched}\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <Grid className={classes.grid}>\n          <Grid item className={classes.gridItem} xs={3}>\n            <Card className={classes.card} variant=\"outlined\">\n              <CardContent\n                onClick={openUserTwitterPage}\n              >\n                <Typography\n                  variant=\"h6\"\n                >\n                  {props.user.name}\n                </Typography>\n                <Typography>\n                  @{props.user.screenName}\n                </Typography>\n              </CardContent>\n              <CardMedia\n                className={classes.profileImage}\n                src={props.user.profileImageUrl || defaultProfileImage}\n                component=\"img\"\n                onError={e => {\n                }}              \n              />\n              <br></br>\n              <CardMedia \n                className={classes.bannerImage} \n                src={props.user.bannerImageUrl || defaultBannerImage} \n                component=\"img\"\n                onError={e => {\n                }}              \n              />\n              <CardContent>\n                <Typography>\n                  {props.user.description}\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item className={classes.gridItem} xs={3}>\n            <Timeline\n              dataSource={{\n                sourceType: 'profile',\n                screenName: props.user.screenName\n              }}\n              options={{\n                height: '640'\n              }}\n            />\n          </Grid>\n          <Grid item className={classes.gridItem} xs={3}>\n            <TableContainer>\n              <Table className={classes.table} size=\"small\">\n                <TableBody>\n                  <TableRow>\n                    <TableCell>id</TableCell><TableCell align=\"right\">{props.user.nodeId}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>location</TableCell><TableCell align=\"right\">{props.user.location}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>created</TableCell><TableCell align=\"right\">{createdAt}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>twitter age</TableCell><TableCell align=\"right\">{twitterAgeString}</TableCell>\n                  </TableRow>\n                  <TableRow className={props.user.followersCount > 5000 ? classes.tableRowGreen : null}>\n                    <TableCell>followers</TableCell><TableCell align=\"right\">{props.user.followersCount}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>friends</TableCell><TableCell align=\"right\">{props.user.friendsCount}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>tweets</TableCell><TableCell align=\"right\">{props.user.statusesCount}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>tweets/day</TableCell><TableCell align=\"right\">{tweetRate}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>last seen</TableCell><TableCell align=\"right\">{lastSeen}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>last seen</TableCell><TableCell align=\"right\">{lastSeenDuration} ago</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>mentions</TableCell><TableCell align=\"right\">{props.user.mentions}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>mentions/min</TableCell><TableCell align=\"right\">{props.user.rate ? props.user.rate.toFixed(1) : 0}</TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Grid>\n          <Grid item className={classes.gridItem} xs={2}>\n            <TableContainer>\n              <Table className={classes.table} size=\"small\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>CAT</TableCell>\n                    <TableCell align=\"left\">MAN</TableCell>\n                    <TableCell align=\"left\">AUTO</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  <TableRow>\n                    <TableCell>left</TableCell>\n                    <TableCell align=\"right\">{props.stats.user.manual.left}</TableCell>\n                    <TableCell align=\"right\">{props.stats.user.auto.left}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>neutral</TableCell>\n                    <TableCell align=\"right\">{props.stats.user.manual.neutral}</TableCell>\n                    <TableCell align=\"right\">{props.stats.user.auto.neutral}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>right</TableCell>\n                    <TableCell align=\"right\">{props.stats.user.manual.right}</TableCell>\n                    <TableCell align=\"right\">{props.stats.user.auto.right}</TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Grid>\n          <Grid item className={classes.gridItem} xs={1}>\n            <FormGroup>\n              <Button className={getCategoryClass(props.user.categoryAuto)}>\n                AUTO: {props.user.categoryAuto.toUpperCase() || \"NONE\"}\n              </Button>\n\n              <FormControl component=\"fieldset\">\n                <RadioGroup aria-label=\"category\" name=\"category\" value={props.user.category || \"none\"} onChange={props.handleUserChange}>\n                  <FormControlLabel labelPlacement=\"start\" value=\"left\" control={<Radio />} label=\"left\"/>\n                  <FormControlLabel labelPlacement=\"start\" value=\"neutral\" control={<Radio />} label=\"neutral\" />\n                  <FormControlLabel labelPlacement=\"start\" value=\"right\" control={<Radio />} label=\"right\" />\n                  <FormControlLabel labelPlacement=\"start\" value=\"positive\" control={<Radio />} label=\"positive\" />\n                  <FormControlLabel labelPlacement=\"start\" value=\"negative\" control={<Radio />} label=\"negative\" />\n                  <FormControlLabel labelPlacement=\"start\" value=\"none\" control={<Radio />} label=\"none\" />\n                </RadioGroup>\n              </FormControl>\n\n              <FormControlLabel\n                control={<Checkbox checked={props.user.categoryVerified || false} onChange={props.handleUserChange} name=\"catVerified\" />}\n                label=\"verified\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox checked={props.user.following || false} onChange={props.handleUserChange} name=\"following\" />}\n                label=\"following\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox checked={props.user.ignored || false} onChange={props.handleUserChange} name=\"ignored\" />}\n                label=\"ignored\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox checked={props.user.isBot || false} onChange={props.handleUserChange} name=\"isBot\" />}\n                label=\"bot\"\n                labelPlacement=\"start\"\n              />\n            </FormGroup>\n          </Grid>\n        </Grid>\n    </div>\n  );\n}\n\nexport default User;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}