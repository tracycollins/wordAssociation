{"version":3,"sources":["App.js","UserView.js","HashtagView.js","reportWebVitals.js","index.js"],"names":["min","max","useStyles","makeStyles","theme","root","flexGrow","grid","display","gridItem","margin","card","raised","maxWidth","profileImage","maxHeight","bannerImage","height","table","tableRowGreen","backgroundColor","appBar","statusBar","menuButton","marginRight","spacing","title","color","search","position","borderRadius","shape","marginLeft","width","breakpoints","up","searchIcon","padding","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","buttonGroupLabel","buttonAll","buttonLeft","buttonNeutral","buttonRight","buttonMismatch","autoCategory","left","neutral","right","none","formatDate","dateInput","Date","toLocaleDateString","year","month","day","User","props","classes","createdAt","user","lastSeen","lastSeenDuration","Duration","toString","twitterAge","twitterAgeString","tweetRate","days","Math","ceil","statusesCount","useState","screenName","userSearch","setUserSearch","useEffect","AppBar","className","Toolbar","Typography","variant","InputBase","placeholder","input","inputProps","value","onKeyPress","event","charCode","console","log","handleSearchNode","onChange","target","ButtonGroup","size","aria-label","Button","onClick","handleNodeChange","name","stats","uncategorized","all","mismatched","Grid","item","xs","Card","CardContent","window","open","category","getCategoryClass","categoryAuto","align","toUpperCase","CardMedia","src","profileImageUrl","component","onError","e","bannerImageUrl","description","dataSource","sourceType","options","TableContainer","Table","TableBody","TableRow","TableCell","nodeId","location","followersCount","friendsCount","mentions","rate","toFixed","TableHead","manual","auto","FormGroup","FormControl","RadioGroup","FormControlLabel","labelPlacement","control","Radio","label","Checkbox","checked","categoryVerified","following","ignored","isBot","HashtagView","hashtag","hashtagSearch","setHashtagSearch","tweets","undefined","statuses","map","tweet","tweetId","id_str","positive","negative","DEFAULT_AUTH_URL","VIEWER_ID","floor","random","DEFAULT_VIEWER_OBJ","userId","viewerId","type","namespace","timeStamp","now","tags","mode","entity","socket","viewerObj","buttonNodeType","serverStatus","twitterAuth","buttonLogin","App","history","useHistory","twitterAuthenticated","setTwitterAuthenticated","twitterAuthenticatedUser","setTwitterAuthenticatedUser","nodesPerMin","maxNodesPerMin","maxNodesPerMinTime","bestNetwork","networkId","status","setStatus","search_metadata","setTweets","progress","setProgress","displayNodeType","setDisplayNodeType","age","rateMax","tweetsPerDay","categoryVerfied","currentUser","setCurrentUser","text","currentHashtag","setCurrentHashtag","currentNode","searchString","searchTerm","emit","useCallback","node","persist","preventDefault","searchFilter","eventName","currentTarget","eventValue","eventChecked","code","goForward","goBack","pathname","split","pop","shiftKey","nodeType","nodeValid","endsWith","push","socketClient","on","id","password","results","debug","action","data","userObj","disconnect","useHotkeys","Container","CircularProgress","hour","minute","Link","href","rel","warn","UserView","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e53f3ef3.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport socketClient from \"socket.io-client\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Container from '@material-ui/core/Container';\nimport AppBar from '@material-ui/core/AppBar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\n// import ButtonGroup from '@material-ui/core/ButtonGroup';\n// import InputBase from '@material-ui/core/InputBase';\n// import SearchIcon from '@material-ui/icons/Search';\nimport Link from '@material-ui/core/Link';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport './App.css';\nimport UserView from './UserView.js';\nimport HashtagView from './HashtagView.js';\nimport { ButtonGroup } from '@material-ui/core';\n\n// const ENDPOINT = \"http://mbp3:9997/view\";\nconst ENDPOINT = \"https://word.threeceelabs.com/view\";\nconst DEFAULT_AUTH_URL = \"http://word.threeceelabs.com/auth/twitter\";\n\nconst randomIntFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst randomId = randomIntFromInterval(1000000000, 9999999999);\nconst VIEWER_ID = \"viewer_\" + randomId;\n\nconst DEFAULT_VIEWER_OBJ = {\n  nodeId: VIEWER_ID,\n  userId: VIEWER_ID,\n  viewerId: VIEWER_ID,\n  screenName: VIEWER_ID,\n  type: \"viewer\",\n  namespace: \"view\",\n  timeStamp: Date.now(),\n  tags: {},\n};\n\nDEFAULT_VIEWER_OBJ.tags.type = \"viewer\";\n\nDEFAULT_VIEWER_OBJ.tags.mode = \"stream\";\nDEFAULT_VIEWER_OBJ.tags.entity = VIEWER_ID;\n\nconst viewerObj = DEFAULT_VIEWER_OBJ;\n\nconsole.log({viewerObj});\n\nlet socket;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  buttonNodeType: {\n    flexGrow: 1,\n  },\n  title: {\n    // flexGrow: 1,\n    color: 'blue',\n    marginRight: theme.spacing(2),\n  },\n  serverStatus: {\n    // flexGrow: 1,\n    color: 'gray',\n    padding: theme.spacing(1),\n  },\n  twitterAuth: {\n    // backgroundColor: 'black',\n    color: \"green\",\n    padding: theme.spacing(1),\n    marginRight: theme.spacing(2),\n  },  \n  buttonLogin: {\n    marginRight: theme.spacing(2),\n  },\n  statusBar: {\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: \"white\",\n    '&:hover': {\n      backgroundColor: \"lightgray\",\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'primary',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n\n}));\n\nconst formatDateTime = (dateInput) => {\n  return new Date(dateInput).toLocaleDateString(\n    'en-gb',\n    {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric'\n    }\n  );\n}\n\nconst App = () => {\n\n  const history = useHistory();\n\n  const classes = useStyles();\n\n  const defaultStatus = {\n    nodesPerMin: 0, \n    maxNodesPerMin: 0,\n    maxNodesPerMinTime: 0,\n    bestNetwork: {\n      networkId: \"\"\n    },\n    user: {\n      uncategorized: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        positive: 0,\n        negative: 0,\n        all: 0,\n        mismatched: 0\n      },\n      manual: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        positive: 0,\n        negative: 0,\n      },\n      auto: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        positive: 0,\n        negative: 0,\n      }\n    },\n    hashtag: {\n      uncategorized: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        positive: 0,\n        negative: 0,\n        all: 0,\n        mismatched: 0\n      },\n      manual: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        positive: 0,\n        negative: 0,\n      },\n      auto: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        positive: 0,\n        negative: 0,\n      }\n    }\n  }\n\n  const defaultUser = {\n\n    nodeId: null, \n    screenName: \"threecee\",\n    name: \"\",\n    location: \"\",\n    description: \"\",\n    profileImageUrl: \"https://pbs.twimg.com/profile_images/1205585278565527559/GrTkBpzl.jpg\",\n    bannerImage: \"\",\n    createdAt: null,\n    followersCount: 0,\n    friendsCount: 0,\n    tweets: 0,\n\n    age: 0,\n    mentions: 0,\n    rate: 0,\n    rateMax: 0,\n    tweetsPerDay: 0,\n\n    lastSeen: null,\n    isBot: false,\n    following: false,\n    categoryVerfied: false,\n    category: \"none\",\n    categoryAuto: \"none\",\n  }\n\n  const defaultHashtag = {\n    nodeId: \"blacklivesmatter\",\n    text: \"BlackLivesMatter\",\n    categoryAuto: \"none\",\n    category: \"left\",\n    createdAt: 0,\n    lastSeen: 0,\n    age: 0,\n    mentions: 0,\n    rate: 0,\n    rateMax: 0,\n  }\n\n  const defaultTweets = {\n    search_metadata: {},\n    statuses: []\n  }\n\n  const [twitterAuthenticated, setTwitterAuthenticated] = useState(false);\n  const [twitterAuthenticatedUser, setTwitterAuthenticatedUser  ] = useState(\"\");\n  const [status, setStatus] = useState(defaultStatus);\n  const [tweets, setTweets] = useState(defaultTweets);\n  const [progress, setProgress] = useState(\"idle\");\n\n  const [displayNodeType, setDisplayNodeType] = useState(\"user\");\n\n  const [currentUser, setCurrentUser] = useState(defaultUser);\n  // const [userHistory, setUserHistory] = useState([]);\n  // const [userHistoryIndex, setUserHistoryIndex] = useState(0);\n\n  const [currentHashtag, setCurrentHashtag] = useState(defaultHashtag);\n\n  const currentNode = displayNodeType === \"user\" ? currentUser : currentHashtag;\n\n  const handleSearchNode = (searchString) => {\n    const searchTerm = displayNodeType === \"user\" ? \"@\" + searchString : \"#\" + searchString\n    console.log(\"SEARCH TERM: \" + searchTerm)\n    socket.emit(\"TWITTER_SEARCH_NODE\", searchTerm)\n  }\n\n  const handleLoginLogout = () => {\n    if (twitterAuthenticated){\n      console.warn(\n        \"LOGGING OUT\");\n      socket.emit(\"logout\", viewerObj);\n      setTwitterAuthenticated(false)\n      setTwitterAuthenticatedUser(\"\")\n    }\n    else{\n      console.warn(\n        \"LOGIN: AUTH: \" +\n          twitterAuthenticated +\n          \" | URL: \" +\n          DEFAULT_AUTH_URL\n      );\n      window.open(DEFAULT_AUTH_URL, \"LOGIN\", \"_new\");\n      socket.emit(\"login\", viewerObj);\n    }\n  }\n\n  const handleNodeChange = useCallback((event, node) => {\n\n    if (displayNodeType === \"user\"){\n      console.log(\"handleNodeChange | user: @\" + node.screenName)\n    }\n    else{\n      console.log(\"handleNodeChange | hashtag: #\" + node.nodeId)\n    }\n\n    if (event.persist !== undefined) { \n      event.persist() \n    }\n\n    if (event.preventDefault !== undefined) { \n      event.preventDefault() \n    }\n\n    let eventName = event.currentTarget.name || \"nop\";\n    let eventValue = event.currentTarget.value;\n    let eventChecked = event.currentTarget.checked;\n\n    if (event.currentTarget.name === undefined && event.code){\n\n      switch (event.code){\n\n        case \"ArrowRight\":\n        case \"ArrowLeft\":\n          eventName = \"history\"\n          if (event.code === \"ArrrowRight\"){ history.goForward(); }\n          if (event.code === \"ArrowLeft\"){ history.goBack(); }\n          eventValue = history.location.pathname.split(\"/\").pop()\n          break;\n\n        case \"KeyA\":\n          eventName = \"all\"\n          break;\n\n        case \"KeyD\":\n        case \"KeyL\":\n          if (event.shiftKey){\n            eventName = \"category\"\n            eventValue = \"left\"\n          }\n          else{\n            eventName = \"left\"\n          }\n          break;\n\n        case \"KeyN\":\n          if (event.shiftKey){\n            eventName = \"category\"\n            eventValue = \"neutral\"\n          }\n          else{\n            eventName = \"neutral\"\n          }\n          break;\n\n        case \"KeyR\":\n          if (event.shiftKey){\n            eventName = \"category\"\n            eventValue = \"right\"\n          }\n          else{\n            eventName = \"right\"\n          }\n          break;\n\n        case \"KeyHyphen\":\n          if (event.shiftKey){\n            eventName = \"category\"\n            eventValue = \"negative\"\n          }\n          else{\n            eventName = \"negative\"\n          }\n          break;\n\n        case \"KeyEquals\":\n          if (event.shiftKey){\n            eventName = \"category\"\n            eventValue = \"positive\"\n          }\n          else{\n            eventName = \"positive\"\n          }\n          break;\n\n        case \"KeyI\":\n        case \"KeyX\":\n          if (event.shiftKey){\n            eventName = \"ignored\"\n            eventChecked = !node.ignored\n          }\n          break;\n\n        case \"KeyV\":\n          if (event.shiftKey){\n            eventName = \"catVerified\"\n            eventChecked = !node.categoryVerified\n          }\n          break;\n\n        case \"KeyB\":\n          if (event.shiftKey){\n            eventName = \"isBot\"\n            eventChecked = !node.isBot\n          }\n          break;\n\n        default:\n      }\n    }\n\n    let searchFilter;\n\n    if (node.nodeType === \"user\"){\n      searchFilter = \"@?\";\n      console.log(\"handleNodeChange | @\" + node.screenName + \" | name: \" + eventName + \" | value: \" + eventValue)\n    }\n    else{\n      searchFilter = \"#?\";\n      console.log(\"handleNodeChange | #\" + node.nodeId + \" | name: \" + eventName + \" | value: \" + eventValue)\n    }\n\n    setProgress(progress => eventName);\n\n    switch (eventName){\n\n      case \"nop\":\n        break;\n\n      case \"history\":\n        if (node.nodeType === \"user\"){\n          console.log(\"handleNodeChange | history | @\" + node.screenName + \" | name: \" + eventName + \" | value: \" + eventValue)\n          socket.emit(\"TWITTER_SEARCH_NODE\", \"@\" + eventValue);\n        }\n        else{\n          console.log(\"handleNodeChange | history | #\" + node.nodeId + \" | name: \" + eventName + \" | value: \" + eventValue)\n          socket.emit(\"TWITTER_SEARCH_NODE\", \"#\" + eventValue);\n        }\n        break;\n\n      case \"all\":\n      case \"left\":\n      case \"neutral\":\n      case \"right\":\n      case \"positive\":\n      case \"negative\":\n        searchFilter += eventName\n        socket.emit(\"TWITTER_SEARCH_NODE\", searchFilter);\n        break\n\n      case \"mismatch\":\n        if (node.nodeType === \"user\"){\n          socket.emit(\"TWITTER_SEARCH_NODE\", \"@?mm\");\n        }\n        break\n\n      case \"category\":\n        socket.emit(\"TWITTER_CATEGORIZE_NODE\", {\n          category: eventValue,\n          following: true,\n          node: node,\n        });\n        break\n\n      case \"isBot\":\n        if (node.nodeType === \"user\"){\n          if (eventChecked){\n            socket.emit(\"TWITTER_BOT\", node);\n          }\n          else{\n            socket.emit(\"TWITTER_UNBOT\", node);\n          }\n        }\n        break\n\n      case \"following\":\n        if (node.nodeType === \"user\"){\n          if (eventChecked){\n            socket.emit(\"TWITTER_FOLLOW\", node);\n          }\n          else{\n            socket.emit(\"TWITTER_UNFOLLOW\", node);\n          }\n        }\n        break\n\n      case \"catVerified\":\n        if (node.nodeType === \"user\"){\n          if (eventChecked){\n            socket.emit(\"TWITTER_CATEGORY_VERIFIED\", node);\n          }\n          else{\n            socket.emit(\"TWITTER_CATEGORY_UNVERIFIED\", node);\n          }\n        }\n        break\n\n      case \"ignored\":\n        if (eventChecked){\n          socket.emit(\"TWITTER_IGNORE\", node);\n        }\n        else{\n          socket.emit(\"TWITTER_UNIGNORE\", node);\n        }\n        break\n\n      default:\n        console.log(\"handleNodeChange: UNKNOWN NAME: \" + eventName + \" | VALUE: \" + eventValue)\n        console.log({event})\n    }\n    \n  }, [displayNodeType, history])\n\n  const nodeValid = (node) => {\n    if (node === undefined) return false\n    if (node.nodeId === undefined) return false\n\n    if (node.nodeType === \"user\"){\n      if (node.screenName === undefined) return false\n    } \n\n    return true\n  }\n\n  useEffect(() => {\n    if (displayNodeType === \"user\"){\n      if (!history.location.pathname.endsWith(\"/user/\" + currentUser.screenName)){\n        history.push(\"/user/\" + currentUser.screenName)\n      }\n    }\n    if (displayNodeType === \"hashtag\"){\n      if (!history.location.pathname.endsWith(\"/hashtag/\" + currentHashtag.nodeId)){\n        history.push(\"/hashtag/\" + currentHashtag.nodeId)\n      }\n    }\n  }, [currentUser, currentHashtag, displayNodeType, history])\n\n  useEffect(() => {\n\n    socket = socketClient(ENDPOINT);\n\n    socket.on(\"connect\", ()=>{\n      console.log(\"CONNECTED: \" + socket.id)\n      setProgress(progress => \"authentication\");\n      socket.emit(\"authentication\", {\n        namespace: \"view\",\n        userId: \"test\",\n        password: \"0123456789\",\n      });\n    })\n\n    socket.on(\"SET_TWITTER_USER\", (results) => {\n\n      console.debug(\"RX SET_TWITTER_USER\");\n\n      if (nodeValid(results.node)) { \n        setCurrentUser(currentUser => results.node) \n        console.debug(\"new: @\" + results.node.screenName);\n      }\n      setProgress(progress => \"idle\");\n      setStatus(status => results.stats)\n    });\n\n    socket.on(\"SET_TWITTER_HASHTAG\", (results) => {\n\n      console.debug(\"RX SET_TWITTER_HASHTAG\");\n      if (nodeValid(results.node)) { \n        setCurrentHashtag(currentHashtag => results.node) \n        console.debug(\"new: #\" + results.node.nodeId);\n        setTweets(tweets => results.tweets)\n      }\n      setProgress(progress => \"idle\");\n      setStatus(status => results.stats)\n    });\n\n    socket.on(\"action\", (action) => {\n      \n      console.debug(\"RX ACTION | socket: \" + socket.id + \" | TYPE: \" + action.type);\n      console.debug(\"RX ACTION | \", action.data);\n\n      switch (action.type){\n\n        case \"user\":\n            setCurrentUser(currentUser => action.data)\n            console.log(\"USER: @\" + action.data.screenName + \" | \" + action.data.profileImageUrl)\n          break\n\n        case \"hashtag\":\n            console.log(\"HT: #\" + action.data.text)\n          break\n\n        case \"stats\":\n            setStatus(status => action.data)\n          break\n\n        default:\n      }\n\n    });   \n\n    socket.on(\"authenticated\", function () {\n      setProgress(progress => \"idle\");\n      console.debug(\"AUTHENTICATED | \" + socket.id);\n\n      // statsObj.socketId = socket.id;\n      // statsObj.serverConnected = true;\n      // statsObj.userReadyTransmitted = false;\n      // statsObj.userReadyAck = false;\n      socket.emit(\"TWITTER_SEARCH_NODE\", \"@threecee\")\n    });\n\n    socket.on(\"USER_AUTHENTICATED\", function (userObj) {\n      setProgress(progress => \"idle\");\n      setTwitterAuthenticated(twitterAuthenticated => true)\n      setTwitterAuthenticatedUser(twitterAuthenticatedUser => userObj.screenName)\n      console.log(\"RX TWITTER USER_AUTHENTICATED | USER: @\" + userObj.screenName);\n    });\n\n    socket.on(\"TWITTER_USER_NOT_FOUND\", (results) => {\n      setProgress(progress => \"idle\");\n      console.debug(\"RX TWITTER_USER_NOT_FOUND\");\n      console.debug(results);\n      setStatus(status => results.stats)\n    });\n    \n    return () => socket.disconnect();\n\n  }, [])\n\n  // history\n  // - back\n  useHotkeys('left', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // - forward\n  useHotkeys('right', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n\n  // all\n  useHotkeys('A', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n\n  // left\n  useHotkeys('L', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+L', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('D', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+D', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n\n  // right\n  useHotkeys('R', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+R', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n\n  // neutral\n  useHotkeys('N', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+N', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n\n  // negative\n  useHotkeys('-', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+-', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n\n  // positive\n  useHotkeys('=', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+=', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n\n  // ignore toggle\n  useHotkeys('shift+I', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+X', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // bot toggle\n  useHotkeys('shift+B', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // verified toggle\n  useHotkeys('shift+V', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n\n  const displayNode = (nodeType) => {\n    if (nodeType === \"user\"){\n      return <UserView user={currentUser} stats={status} handleNodeChange={handleNodeChange} handleSearchNode={handleSearchNode}/>\n    }\n    else{\n      return <HashtagView hashtag={currentHashtag} stats={status} tweets={tweets} handleNodeChange={handleNodeChange} handleSearchNode={handleSearchNode}/>\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Container component=\"main\" maxWidth={false}>\n        <AppBar  className={classes.appBar} position=\"static\">\n          <Toolbar>\n\n            <Typography variant=\"h6\" className={classes.title}>\n              {/* Categorizer | USER HISTORY: {userHistory.length} | PREV USER: {userHistory.length > 0 ? userHistory[userHistory.length-1] : \"\"} */}\n              Categorizer\n            </Typography>\n\n            <ButtonGroup                \n              className={classes.buttonNodeType}\n            >\n              <Button \n                variant=\"contained\" \n                color=\"primary\" \n                size=\"small\" \n                name=\"user\"\n                label=\"user\"\n                onClick={() => setDisplayNodeType(\"user\")}\n              >\n                User\n              </Button>\n              <Button \n                variant=\"contained\" \n                color=\"primary\" \n                size=\"small\" \n                name=\"hashtag\"\n                label=\"hashtag\"\n                onClick={() => setDisplayNodeType(\"hashtag\")}\n              >\n                Hashtag\n              </Button>\n            </ButtonGroup>\n\n            {progress !== \"idle\" ? <CircularProgress /> : <></>}\n\n            <Typography  className={classes.serverStatus}>\n              NN: {status.bestNetwork.networkId}\n            </Typography>\n            <Typography  className={classes.serverStatus}>\n              {status.nodesPerMin} nodes/min (max: {status.maxNodesPerMin} | time: {formatDateTime(status.maxNodesPerMinTime)})\n            </Typography>\n\n\n            <Link\n              className={classes.twitterAuth}\n              href={\"http://twitter.com/\" + twitterAuthenticatedUser}\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              {twitterAuthenticatedUser ? \"@\" + twitterAuthenticatedUser : \"\"}\n            </Link>\n\n            <Button \n              className={classes.buttonLogin}\n              variant=\"contained\" \n              color=\"primary\" \n              size=\"small\" \n              onClick={handleLoginLogout} \n              name=\"login\"\n              label=\"login\"\n            >\n              {twitterAuthenticated ? \"LOGOUT\" : \"LOGIN TWITTER\"}\n            </Button>\n\n          </Toolbar>\n        </AppBar>\n        {displayNode(displayNodeType)}\n      </Container>\n    </div>\n  );\n}\n\nexport default App;","import React, { useState, useEffect } from 'react';\nimport { Timeline } from 'react-twitter-widgets'\n\nimport Duration from 'duration';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Card from '@material-ui/core/Card';\n// import CardActionArea from '@material-ui/core/CardActionArea';\n// import CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n// import CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\n// import CheckBoxIcon from '@material-ui/icons/CheckBox';\n// import CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\n// import FormLabel from '@material-ui/core/FormLabel';\nimport Grid from '@material-ui/core/Grid';\n// import IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\n// import MenuIcon from '@material-ui/icons/Menu';\n// import Paper from '@material-ui/core/Paper';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\n// import TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TableHead } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 2,\n  },\n  grid: {\n    display: 'flex',\n  },\n  gridItem: {\n    margin: 5,\n  },  \n  card: {\n    raised: false,\n    maxWidth: 400,\n  },\n  profileImage: {\n    maxHeight: 400,\n  },\n  bannerImage: {\n    height: 80,\n  },\n  table: {\n  },\n  tableRowGreen: {\n    backgroundColor: 'lightgreen',\n  },\n  appBar: {\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  statusBar: {\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    color: 'blue',\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: \"white\",\n    '&:hover': {\n      backgroundColor: \"lightgray\",\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'primary',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n\n  buttonGroupLabel: {\n    color: 'blue',\n    marginRight: theme.spacing(1),\n  },\n  buttonAll: {\n    color: 'black',\n  },\n  buttonLeft: {\n    color: 'blue',\n  },\n  buttonNeutral: {\n    color: 'gray',\n  },\n  buttonRight: {\n    color: 'red',\n  },\n  buttonMismatch: {\n    margin: 5\n  },\n\n  autoCategory:{\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n  },\n\n  left: {\n    backgroundColor: 'blue',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n  },\n  neutral: {\n    backgroundColor: 'gray',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n  },\n  right: {\n    backgroundColor: 'red',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n  },\n  none: {\n    backgroundColor: 'white',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n  },\n\n}));\n\nconst formatDate = (dateInput) => {\n  return new Date(dateInput).toLocaleDateString(\n    'en-gb',\n    {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }\n  );\n}\n\nconst defaultProfileImage = \"logo192.png\"\nconst defaultBannerImage = \"logo192.png\"\n\nconst User = (props) => {\n\n  const classes = useStyles();\n\n  const createdAt = formatDate(props.user.createdAt)\n  const lastSeen = formatDate(props.user.lastSeen)\n \n  const lastSeenDuration = new Duration(new Date(props.user.lastSeen)).toString(1, 4)\n  const twitterAge = props.user.createdAt ? new Duration(new Date(props.user.createdAt)) : new Duration(new Date())\n  const twitterAgeString = twitterAge.toString(1, 4)\n\n  const tweetRate = twitterAge.days > 0 ? Math.ceil(props.user.statusesCount/twitterAge.days) : 0;\n\n  const [userSearch, setUserSearch] = useState(props.user.screenName);\n\n  \n  useEffect(() => {\n    setUserSearch(props.user.screenName)\n  }, [props])\n  \n  const handleChangeSearch = (event) => {\n    console.log(\"handleChangeSearch: \" + event.target.value)\n    setUserSearch(event.target.value);\n  }\n\n  const handleKeyPress = (event) => {\n    if (event.charCode === 13) { // enter key pressed\n      console.log(\"ENTER\")\n      props.handleSearchNode(userSearch)\n    }\n  }\n\n  const openUserTwitterPage = () => {\n    console.log(\"open twitter\")\n    window.open(`http://twitter.com/${props.user.screenName || null}`, \"_blank\") //to open new page\n  }\n\n  const getCategoryClass = (category) => {\n    switch (category){\n      case \"left\":\n      case \"neutral\":\n      case \"right\":\n        return classes[category]\n      default:\n        return classes.none\n    }\n  }\n\n  return (\n    <>\n      <AppBar  className={classes.appBar} position=\"static\">\n        <Toolbar>\n\n          <Typography variant=\"h6\" className={classes.title}>\n            User\n          </Typography>\n\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon color=\"primary\"/>\n            </div>\n            <InputBase\n              placeholder=\"search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n              value={userSearch}\n              onKeyPress={handleKeyPress}\n              onChange={handleChangeSearch}\n            />\n          </div>\n\n          <Typography className={classes.buttonGroupLabel}>UNCAT</Typography>   \n\n          <ButtonGroup variant=\"contained\" color=\"primary\" size=\"small\" aria-label=\"small button group\">\n            <Button onClick={(event) => props.handleNodeChange(event, props.user)} name=\"all\" >ALL: {props.stats.user.uncategorized.all}</Button>\n            <Button onClick={(event) => props.handleNodeChange(event, props.user)} name=\"left\" >LEFT: {props.stats.user.uncategorized.left}</Button>\n            <Button onClick={(event) => props.handleNodeChange(event, props.user)} name=\"neutral\" >NEUTRAL: {props.stats.user.uncategorized.neutral}</Button>\n            <Button onClick={(event) => props.handleNodeChange(event, props.user)} name=\"right\" >RIGHT: {props.stats.user.uncategorized.right}</Button>\n          </ButtonGroup>\n          <Button \n            className={classes.buttonMismatch}\n            variant=\"contained\" \n            color=\"primary\" \n            size=\"small\" \n            onClick={(event) => props.handleNodeChange(event, props.user)} \n            name=\"mismatch\" \n          >\n            MISMATCH {props.stats.user.mismatched}\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <Grid className={classes.grid}>\n          <Grid item className={classes.gridItem} xs={3}>\n            <Card className={classes.card} variant=\"outlined\">\n              <CardContent onClick={openUserTwitterPage}>\n                <span>\n                  <Typography className={getCategoryClass(props.user.categoryAuto)} align=\"center\">\n                    AUTO: {props.user.categoryAuto.toUpperCase() || \"NONE\"}\n                  </Typography>\n                  <Typography variant=\"h6\">{props.user.name}</Typography>\n                  <Typography>@{props.user.screenName}</Typography>\n                </span>\n              </CardContent>\n              <CardMedia\n                className={classes.profileImage}\n                src={props.user.profileImageUrl || defaultProfileImage}\n                component=\"img\"\n                onError={e => {}}              \n              />\n              <br></br>\n              <CardMedia \n                className={classes.bannerImage} \n                src={props.user.bannerImageUrl || defaultBannerImage} \n                component=\"img\"\n                onError={e => {}}              \n              />\n              <CardContent>\n                <Typography>\n                  {props.user.description}\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item className={classes.gridItem} xs={3}>\n            <Timeline\n              dataSource={{\n                sourceType: 'profile',\n                screenName: props.user.screenName\n              }}\n              options={{height: '640'}}\n            />\n          </Grid>\n          <Grid item className={classes.gridItem} xs={3}>\n            <TableContainer>\n              <Table className={classes.table} size=\"small\">\n                <TableBody>\n                  <TableRow>\n                    <TableCell>id</TableCell><TableCell align=\"right\">{props.user.nodeId}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>location</TableCell><TableCell align=\"right\">{props.user.location}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>created</TableCell><TableCell align=\"right\">{createdAt}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>twitter age</TableCell><TableCell align=\"right\">{twitterAgeString}</TableCell>\n                  </TableRow>\n                  <TableRow className={props.user.followersCount > 5000 ? classes.tableRowGreen : null}>\n                    <TableCell>followers</TableCell><TableCell align=\"right\">{props.user.followersCount}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>friends</TableCell><TableCell align=\"right\">{props.user.friendsCount}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>tweets</TableCell><TableCell align=\"right\">{props.user.statusesCount}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>tweets/day</TableCell><TableCell align=\"right\">{tweetRate}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>last seen</TableCell><TableCell align=\"right\">{lastSeen}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>last seen</TableCell><TableCell align=\"right\">{lastSeenDuration} ago</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>mentions</TableCell><TableCell align=\"right\">{props.user.mentions}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>mentions/min</TableCell><TableCell align=\"right\">{props.user.rate ? props.user.rate.toFixed(1) : 0}</TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Grid>\n          <Grid item className={classes.gridItem} xs={2}>\n            <TableContainer>\n              <Table className={classes.table} size=\"small\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>CAT</TableCell>\n                    <TableCell align=\"left\">MAN</TableCell>\n                    <TableCell align=\"left\">AUTO</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  <TableRow>\n                    <TableCell>left</TableCell>\n                    <TableCell align=\"right\">{props.stats.user.manual.left}</TableCell>\n                    <TableCell align=\"right\">{props.stats.user.auto.left}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>neutral</TableCell>\n                    <TableCell align=\"right\">{props.stats.user.manual.neutral}</TableCell>\n                    <TableCell align=\"right\">{props.stats.user.auto.neutral}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>right</TableCell>\n                    <TableCell align=\"right\">{props.stats.user.manual.right}</TableCell>\n                    <TableCell align=\"right\">{props.stats.user.auto.right}</TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Grid>\n          <Grid item className={classes.gridItem} xs={1}>\n            <FormGroup>\n\n              {/* <Typography \n                className={getCategoryClass(props.user.categoryAuto)}\n                align=\"center\"\n              >\n                AUTO: {props.user.categoryAuto.toUpperCase() || \"NONE\"}\n              </Typography> */}\n\n              <FormControl component=\"fieldset\">\n                <RadioGroup aria-label=\"category\" name=\"category\" value={props.user.category || \"none\"} onChange={(event) => props.handleNodeChange(event, props.user)}>\n                  <FormControlLabel labelPlacement=\"start\" value=\"left\" control={<Radio />} label=\"left\"/>\n                  <FormControlLabel labelPlacement=\"start\" value=\"neutral\" control={<Radio />} label=\"neutral\" />\n                  <FormControlLabel labelPlacement=\"start\" value=\"right\" control={<Radio />} label=\"right\" />\n                  <FormControlLabel labelPlacement=\"start\" value=\"positive\" control={<Radio />} label=\"positive\" />\n                  <FormControlLabel labelPlacement=\"start\" value=\"negative\" control={<Radio />} label=\"negative\" />\n                  <FormControlLabel labelPlacement=\"start\" value=\"none\" control={<Radio />} label=\"none\" />\n                </RadioGroup>\n              </FormControl>\n\n              <FormControlLabel\n                control={<Checkbox checked={props.user.categoryVerified || false} onChange={(event) => props.handleNodeChange(event, props.user)} name=\"catVerified\" />}\n                label=\"verified\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox checked={props.user.following || false} onChange={(event) => props.handleNodeChange(event, props.user)} name=\"following\" />}\n                label=\"following\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox checked={props.user.ignored || false} onChange={(event) => props.handleNodeChange(event, props.user)} name=\"ignored\" />}\n                label=\"ignored\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                control={<Checkbox checked={props.user.isBot || false} onChange={(event) => props.handleNodeChange(event, props.user)} name=\"isBot\" />}\n                label=\"bot\"\n                labelPlacement=\"start\"\n              />\n            </FormGroup>\n          </Grid>\n        </Grid>\n    </>\n  );\n}\n\nexport default User;\n","import React, { useState, useEffect } from 'react';\nimport { Tweet } from 'react-twitter-widgets'\n\nimport Duration from 'duration';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Card from '@material-ui/core/Card';\n// import CardActionArea from '@material-ui/core/CardActionArea';\n// import CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n// import CardHeader from '@material-ui/core/CardHeader';\n// import CardMedia from '@material-ui/core/CardMedia';\n// import CheckBoxIcon from '@material-ui/icons/CheckBox';\n// import CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\n// import FormLabel from '@material-ui/core/FormLabel';\nimport Grid from '@material-ui/core/Grid';\n// import IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\n// import MenuIcon from '@material-ui/icons/Menu';\n// import Paper from '@material-ui/core/Paper';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\n// import TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TableHead } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 2,\n  },\n  grid: {\n    display: 'flex',\n  },\n  gridItem: {\n    margin: 5,\n  },  \n  card: {\n    raised: false,\n    maxWidth: 400,\n  },\n  table: {\n  },\n  tableRowGreen: {\n    backgroundColor: 'lightgreen',\n  },\n  appBar: {\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  statusBar: {\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    color: 'blue',\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: \"white\",\n    '&:hover': {\n      backgroundColor: \"lightgray\",\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'primary',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n\n  buttonGroupLabel: {\n    color: 'blue',\n    marginRight: theme.spacing(1),\n  },\n  buttonAll: {\n    color: 'black',\n  },\n  buttonLeft: {\n    color: 'blue',\n  },\n  buttonNeutral: {\n    color: 'gray',\n  },\n  buttonRight: {\n    color: 'red',\n  },\n  buttonMismatch: {\n    margin: 5\n  },\n\n  autoCategory:{\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n  },\n\n  left: {\n    backgroundColor: 'blue',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n  },\n  neutral: {\n    backgroundColor: 'gray',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n  },\n  right: {\n    backgroundColor: 'red',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n  },\n  none: {\n    backgroundColor: 'white',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n  },\n\n}));\n\nconst formatDate = (dateInput) => {\n  return new Date(dateInput).toLocaleDateString(\n    'en-gb',\n    {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }\n  );\n}\n\nconst HashtagView = (props) => {\n\n  const classes = useStyles();\n\n  const createdAt = formatDate(props.hashtag.createdAt)\n  const lastSeen = formatDate(props.hashtag.lastSeen)\n \n  const lastSeenDuration = new Duration(new Date(props.hashtag.lastSeen)).toString(1, 4)\n  const twitterAge = props.hashtag.createdAt ? new Duration(new Date(props.hashtag.createdAt)) : new Duration(new Date())\n  const twitterAgeString = twitterAge.toString(1, 4)\n\n  const [hashtagSearch, setHashtagSearch] = useState(props.hashtag.nodeId);\n\n  useEffect(() => {\n    setHashtagSearch(props.hashtag.nodeId)\n  }, [props])\n  \n  const handleChangeSearch = (event) => {\n    console.log(\"handleChangeSearch: \" + event.target.value)\n    setHashtagSearch(event.target.value);\n  }\n\n  const handleKeyPress = (event) => {\n    if (event.charCode === 13) { // enter key pressed\n      console.log(\"ENTER: hashtagSearch: \" + hashtagSearch)\n      props.handleSearchNode(hashtagSearch)\n    }\n  }\n\n  const openHashtagTwitterPage = () => {\n    console.log(\"open twitter\")\n    window.open(`https://twitter.com/search?f=tweets&q=%23${props.hashtag.nodeId || null}`, \"_blank\") //to open new page\n  }\n\n  const displayTweets = (tweets) => {\n    if (tweets.statuses === undefined) { return <></>}\n    return tweets.statuses.map((tweet) => {\n      return <Tweet key={tweet.id_str} tweetId={tweet.id_str} options={{ width: \"400\" }} />\n    })\n  }\n\n  return (\n    <>\n      <AppBar  className={classes.appBar} position=\"static\">\n        <Toolbar>\n\n          <Typography variant=\"h6\" className={classes.title}>\n            Hashtag\n          </Typography>\n\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon color=\"primary\"/>\n            </div>\n            <InputBase\n              placeholder=\"search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n              value={hashtagSearch}\n              onKeyPress={handleKeyPress}\n              onChange={handleChangeSearch}\n            />\n          </div>\n\n          <Typography className={classes.buttonGroupLabel}>\n            UNCAT\n          </Typography>   \n\n          <ButtonGroup variant=\"contained\" color=\"primary\" size=\"small\" aria-label=\"small button group\">\n            <Button onClick={(event) => props.handleNodeChange(event, props.hashtag)} name=\"all\" >ALL: {props.stats.hashtag.uncategorized.all}</Button>\n          </ButtonGroup>\n\n        </Toolbar>\n      </AppBar>\n      <Grid className={classes.grid}>\n        <Grid item className={classes.gridItem} xs={3}>\n          <Card className={classes.card} variant=\"outlined\">\n            <CardContent onClick={openHashtagTwitterPage}>\n              <Typography variant=\"h6\">#{props.hashtag.nodeId}</Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item className={classes.gridItem} xs={3}>\n          {displayTweets(props.tweets)}\n        </Grid>\n        <Grid item className={classes.gridItem} xs={3}>\n          <TableContainer>\n            <Table className={classes.table} size=\"small\">\n              <TableBody>\n                <TableRow>\n                  <TableCell>id</TableCell><TableCell align=\"right\">{props.hashtag.nodeId}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>created</TableCell><TableCell align=\"right\">{createdAt}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>twitter age</TableCell><TableCell align=\"right\">{twitterAgeString}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>last seen</TableCell><TableCell align=\"right\">{lastSeen}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>last seen</TableCell><TableCell align=\"right\">{lastSeenDuration} ago</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>mentions</TableCell><TableCell align=\"right\">{props.hashtag.mentions}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>mentions/min</TableCell><TableCell align=\"right\">{props.hashtag.rate ? props.hashtag.rate.toFixed(1) : 0}</TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item className={classes.gridItem} xs={2}>\n          <TableContainer>\n            <Table className={classes.table} size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>CAT</TableCell>\n                  <TableCell align=\"left\">MAN</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                <TableRow>\n                  <TableCell>left</TableCell>\n                  <TableCell align=\"right\">{props.stats.hashtag.manual.left}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>neutral</TableCell>\n                  <TableCell align=\"right\">{props.stats.hashtag.manual.neutral}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>right</TableCell>\n                  <TableCell align=\"right\">{props.stats.hashtag.manual.right}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>positive</TableCell>\n                  <TableCell align=\"right\">{props.stats.hashtag.manual.positive}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>negative</TableCell>\n                  <TableCell align=\"right\">{props.stats.hashtag.manual.negative}</TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item className={classes.gridItem} xs={1}>\n          <FormGroup>\n            <FormControl component=\"fieldset\">\n              <RadioGroup aria-label=\"category\" name=\"category\" value={props.hashtag.category || \"none\"} onChange={(event) => props.handleNodeChange(event, props.hashtag)}>\n                <FormControlLabel labelPlacement=\"start\" value=\"left\" control={<Radio />} label=\"left\"/>\n                <FormControlLabel labelPlacement=\"start\" value=\"neutral\" control={<Radio />} label=\"neutral\" />\n                <FormControlLabel labelPlacement=\"start\" value=\"right\" control={<Radio />} label=\"right\" />\n                <FormControlLabel labelPlacement=\"start\" value=\"positive\" control={<Radio />} label=\"positive\" />\n                <FormControlLabel labelPlacement=\"start\" value=\"negative\" control={<Radio />} label=\"negative\" />\n                <FormControlLabel labelPlacement=\"start\" value=\"none\" control={<Radio />} label=\"none\" />\n              </RadioGroup>\n            </FormControl>\n\n            <FormControlLabel\n              control={<Checkbox checked={props.hashtag.ignored || false} onChange={(event) => props.handleNodeChange(event, props.hashtag)} name=\"ignored\" />}\n              label=\"ignored\"\n              labelPlacement=\"start\"\n            />\n          </FormGroup>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default HashtagView;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  useLocation\n} from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}