{"version":3,"sources":["App.js","UserView.js","HashtagView.js","reportWebVitals.js","index.js"],"names":["min","max","StyledTableCell","withStyles","theme","head","body","fontSize","TableCell","StyledTableRow","root","TableRow","useStyles","makeStyles","flexGrow","appBar","backgroundColor","marginBottom","spacing","grid","display","alignItems","gridItem","margin","card","alignSelf","profileImage","bannerImage","icon","borderRadius","width","height","boxShadow","backgroundImage","outline","outlineOffset","background","checkedIcon","content","selectCategory","shape","padding","radioGroupCategory","checkbox","color","green","checked","radioButtonLabel","radioButton","table","tableHead","tableCell","tableCategorized","tableRowGreen","statusBar","raised","menuButton","marginRight","title","search","position","breakpoints","up","searchIcon","pointerEvents","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","buttonGroupLabel","buttonAll","buttonLeft","buttonNeutral","buttonRight","buttonMismatch","autoCategory","category","left","neutral","right","positive","negative","none","ignored","formatDate","dateInput","Date","toLocaleDateString","year","month","day","User","props","classes","createdAt","user","lastSeen","lastSeenDuration","Duration","toString","twitterAge","twitterAgeString","tweetRate","days","Math","ceil","statusesCount","getCategoryClass","Grid","className","item","xs","Card","variant","CardContent","onClick","console","log","window","open","screenName","Typography","clsx","name","description","CardMedia","src","profileImageUrl","component","onError","e","bannerImageUrl","dataSource","sourceType","options","TableContainer","Table","size","TableHead","align","TableBody","nodeId","location","followersCount","friendsCount","mentions","rate","toFixed","colSpan","stats","manual","auto","FormGroup","FormControl","InputLabel","id","Select","labelId","value","onChange","event","handleNodeChange","MenuItem","dense","categoryAuto","toUpperCase","FormControlLabel","control","Checkbox","following","label","categoryVerified","isBot","maxWidth","marginLeft","HashtagView","tweets","hashtag","statusHashtag","undefined","statuses","map","tweet","tweetId","id_str","DEFAULT_AUTH_URL","VIEWER_ID","floor","random","DEFAULT_VIEWER_OBJ","userId","viewerId","type","namespace","timeStamp","now","tags","mode","entity","viewerObj","socket","socketClient","tabs","toolBar","shadows","progress","serverStatus","twitterAuth","fontWeight","buttonLogin","App","history","useHistory","useLocation","useState","tabValue","setTabValue","useRef","pathname","historyArray","setHistoryArray","historyArrayRef","historyArrayIndex","setHistoryArrayIndex","historyArrayIndexRef","twitterAuthenticated","setTwitterAuthenticated","twitterAuthenticatedRef","twitterAuthenticatedUser","setTwitterAuthenticatedUser","twitterAuthenticatedUserRef","userSearch","setUserSearch","nodesPerMin","maxNodesPerMin","maxNodesPerMinTime","bestNetwork","networkId","uncategorized","all","mismatched","status","setStatus","statusRef","setStatusHashtag","statusHashtagRef","search_metadata","setTweets","tweetsRef","setProgress","displayNodeType","setDisplayNodeType","displayNodeTypeRef","currentUsers","setUsers","currentUsersRef","age","rateMax","tweetsPerDay","categoryVerfied","currentUser","setCurrentUser","currentUserRef","text","currentHashtag","setCurrentHashtag","currentHashtagRef","useEffect","tempHistoryArray","current","length","push","currentNode","handleSearchNode","searchString","searchTerm","emit","handleLoginLogout","useCallback","preventDefault","warn","node","persist","searchFilter","eventName","target","eventValue","eventChecked","code","pop","nextRoute","split","shiftKey","nodeType","usersAvailable","tempUsers","shift","currentUsersAvailable","alert","nodeValid","endsWith","on","password","response","debug","nodes","users","searchNode","slice","action","data","userObj","startsWith","results","endCursor","disconnect","useHotkeys","Container","AppBar","Toolbar","Tabs","newValue","Tab","InputBase","placeholder","input","inputProps","onKeyPress","charCode","toLocaleString","CircularProgress","Link","href","rel","Button","UserView","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","path","document","getElementById"],"mappings":"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","file":"static/js/main.f8a16080.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\n// import useSocket from 'use-socket.io-client';\n// import { useImmer } from 'use-immer';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport socketClient from \"socket.io-client\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Container from '@material-ui/core/Container';\nimport AppBar from '@material-ui/core/AppBar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\n// import ButtonGroup from '@material-ui/core/ButtonGroup';\n// import InputBase from '@material-ui/core/InputBase';\n// import SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\nimport Link from '@material-ui/core/Link';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport './App.css';\nimport UserView from './UserView.js';\nimport HashtagView from './HashtagView.js';\n// import { ButtonGroup } from '@material-ui/core';\n\n// const ENDPOINT = \"http://mbp3:9997/view\";\nconst ENDPOINT = \"https://word.threeceelabs.com/view\";\nconst DEFAULT_AUTH_URL = \"http://word.threeceelabs.com/auth/twitter\";\n\nconst randomIntFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst randomId = randomIntFromInterval(1000000000, 9999999999);\nconst VIEWER_ID = \"viewer_\" + randomId;\n\nconst DEFAULT_VIEWER_OBJ = {\n  nodeId: VIEWER_ID,\n  userId: VIEWER_ID,\n  viewerId: VIEWER_ID,\n  screenName: VIEWER_ID,\n  type: \"viewer\",\n  namespace: \"view\",\n  timeStamp: Date.now(),\n  tags: {},\n};\n\nDEFAULT_VIEWER_OBJ.tags.type = \"viewer\";\n\nDEFAULT_VIEWER_OBJ.tags.mode = \"stream\";\nDEFAULT_VIEWER_OBJ.tags.entity = VIEWER_ID;\n\nconst viewerObj = DEFAULT_VIEWER_OBJ;\n\nconsole.log({viewerObj});\n\nlet socket = socketClient(ENDPOINT);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    flexGrow: 1,\n    boxShadow: 0,\n  },\n  appBar: {\n    backgroundColor: 'black',\n    marginBottom: theme.spacing(2),\n    boxShadow: 0,\n  },\n  tabs: {\n    // flexGrow: 1,\n    color: 'white',\n  },\n  toolBar: {\n    shadows: 0,\n  },\n  title: {\n    // flexGrow: 1,\n    color: 'white',\n    marginRight: theme.spacing(2),\n  },\n  progress: {\n    // flexGrow: 1,\n    color: 'white',\n    marginRight: theme.spacing(2),\n  },\n  serverStatus: {\n    fontSize: \"0.75rem\",\n    flexGrow: 1,\n    color: 'lightgray',\n    padding: theme.spacing(1),\n  },\n  twitterAuth: {\n    // backgroundColor: 'black',\n    fontSize: \"1.2rem\",\n    fontWeight: 600,\n    color: \"green\",\n    padding: theme.spacing(1),\n    marginRight: theme.spacing(2),\n  },  \n  buttonLogin: {\n    // backgroundColor: \"green\",\n    marginRight: theme.spacing(2),\n  },\n  statusBar: {\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  search: {\n    // flexGrow: 1,\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: \"white\",\n    '&:hover': {\n      backgroundColor: \"lightgray\",\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '20%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'primary',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n\n}));\n\nconst formatDateTime = (dateInput) => {\n  return new Date(dateInput).toLocaleString();\n}\n\nconst App = () => {\n\n  const history = useHistory();\n  let location = useLocation()\n  // let { slug } = useParams();\n\n  // // console.log({slug})\n\n  const classes = useStyles();\n\n  const defaultStatus = {\n    nodesPerMin: 0, \n    maxNodesPerMin: 0,\n    maxNodesPerMinTime: 0,\n    bestNetwork: {\n      networkId: \"\"\n    },\n    user: {\n      uncategorized: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        positive: 0,\n        negative: 0,\n        all: 0,\n        mismatched: 0\n      },\n      manual: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        positive: 0,\n        negative: 0,\n      },\n      auto: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        positive: 0,\n        negative: 0,\n      }\n    },\n    hashtag: {\n      uncategorized: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        positive: 0,\n        negative: 0,\n        all: 0,\n        mismatched: 0\n      },\n      manual: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        positive: 0,\n        negative: 0,\n      },\n      auto: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        positive: 0,\n        negative: 0,\n      }\n    }\n  }\n\n  const defaultUser = {\n\n    nodeId: null, \n    screenName: \"threecee\",\n    name: \"\",\n    location: \"\",\n    description: \"\",\n    profileImageUrl: \"https://pbs.twimg.com/profile_images/1205585278565527559/GrTkBpzl.jpg\",\n    bannerImage: \"\",\n    createdAt: null,\n    status: {},\n    followersCount: 0,\n    friendsCount: 0,\n    tweets: 0,\n\n    age: 0,\n    mentions: 0,\n    rate: 0,\n    rateMax: 0,\n    tweetsPerDay: 0,\n\n    lastSeen: null,\n    isBot: false,\n    following: false,\n    categoryVerfied: false,\n    category: \"none\",\n    categoryAuto: \"none\",\n  }\n\n  const defaultHashtag = {\n    nodeId: \"blacklivesmatter\",\n    text: \"BlackLivesMatter\",\n    categoryAuto: \"none\",\n    category: \"left\",\n    createdAt: 0,\n    lastSeen: 0,\n    age: 0,\n    mentions: 0,\n    rate: 0,\n    rateMax: 0,\n  }\n\n  const defaultTweets = {\n    search_metadata: {},\n    statuses: []\n  }\n\n  const [tabValue, setTabValue] = useState(0);\n  const tabValueRef = useRef(tabValue)\n\n  const [historyArray, setHistoryArray] = useState([location.pathname])\n  const historyArrayRef = useRef(historyArray)\n\n  const [historyArrayIndex, setHistoryArrayIndex] = useState(0)\n  const historyArrayIndexRef = useRef(historyArrayIndex)\n\n  const [twitterAuthenticated, setTwitterAuthenticated] = useState(false);\n  const twitterAuthenticatedRef = useRef(twitterAuthenticated)\n\n  const [twitterAuthenticatedUser, setTwitterAuthenticatedUser  ] = useState(\"\");\n  const twitterAuthenticatedUserRef = useRef(twitterAuthenticatedUser)\n\n  const [userSearch, setUserSearch] = useState(\"\");\n  const userSearchRef = useRef(userSearch)\n\n  const [status, setStatus] = useState(defaultStatus);\n  const statusRef = useRef(status)\n\n  const [statusHashtag, setStatusHashtag] = useState(false);\n  const statusHashtagRef = useRef(statusHashtag)\n\n  const [tweets, setTweets] = useState(defaultTweets);\n  const tweetsRef = useRef(tweets)\n\n  const [progress, setProgress] = useState(\"loading ...\");\n\n  const [displayNodeType, setDisplayNodeType] = useState(\"user\");\n  const displayNodeTypeRef = useRef(displayNodeType)\n\n  const [currentUsers, setUsers] = useState([]);\n  const currentUsersRef = useRef(currentUsers)\n\n  const [currentUser, setCurrentUser] = useState(defaultUser);\n  const currentUserRef = useRef(currentUser)\n\n  const [currentHashtag, setCurrentHashtag] = useState(defaultHashtag);\n  const currentHashtagRef = useRef(currentHashtag)\n  \n  useEffect(() => {\n    const tempHistoryArray = [...historyArrayRef.current]\n    if (tempHistoryArray.length > 0 && location.pathname !== tempHistoryArray[0]){\n      tempHistoryArray.push(location.pathname)\n      setHistoryArray(() => [...tempHistoryArray])\n      setHistoryArrayIndex(tempHistoryArray.length-1);\n      historyArrayRef.current = tempHistoryArray\n    }\n  }, [location.pathname])\n  \n  useEffect(() => { \n    twitterAuthenticatedUserRef.current = twitterAuthenticatedUser\n  }, [twitterAuthenticatedUser])\n  \n  useEffect(() => { \n    twitterAuthenticatedRef.current = twitterAuthenticated \n  }, [twitterAuthenticated])\n  \n  useEffect(() => { \n    displayNodeTypeRef.current = displayNodeType \n  }, [displayNodeType])\n  \n  useEffect(() => { \n    currentUsersRef.current = currentUsers \n  }, [currentUsers])\n  \n  useEffect(() => { \n    currentUserRef.current = currentUser\n  }, [currentUser])\n  \n  useEffect(() => { \n    currentHashtagRef.current = currentHashtag \n  }, [currentHashtag])\n  \n  useEffect(() => { \n    statusHashtagRef.current = statusHashtag\n  }, [statusHashtag])\n  \n  useEffect(() => { \n    statusRef.current = status \n  }, [status])\n  \n  useEffect(() => { \n    tweetsRef.current = tweets \n  }, [tweets])\n  \n  const currentNode = displayNodeTypeRef.current === \"user\" ? currentUserRef.current : currentHashtagRef.current;\n\n  const handleTabChange = (event, newValue) => {\n    event.preventDefault()\n    console.log({newValue})\n    setDisplayNodeType(newValue === 0 ? \"user\" : \"hashtag\")\n    setTabValue(newValue);\n  }\n\n  const handleSearchNode = (searchString) => {\n    setProgress(progress => \"searchNode\");\n    const searchTerm = displayNodeType === \"user\" ? \"@\" + searchString : \"#\" + searchString\n    console.log(\"SEARCH TERM: \" + searchTerm)\n    socket.emit(\"TWITTER_SEARCH_NODE\", searchTerm)\n  }\n\n  const handleLoginLogout = useCallback((event) => {\n\n    event.preventDefault()\n    setProgress(progress => \"loginLogout\");\n\n    if (twitterAuthenticatedRef.current){\n      console.warn(\"LOGGING OUT\");\n      socket.emit(\"logout\", viewerObj);\n      setTwitterAuthenticated(false)\n      setTwitterAuthenticatedUser(\"\")\n      setProgress(progress => \"idle\");\n    }\n    else{\n      console.warn(\n        \"LOGIN: AUTH: \" +\n          twitterAuthenticatedRef.current +\n          \" | URL: \" +\n          DEFAULT_AUTH_URL\n      );\n      window.open(DEFAULT_AUTH_URL, \"LOGIN\", \"_new\");\n      socket.emit(\"login\", viewerObj);\n    }\n  }, []);\n\n  const currentUsersAvailable = (eventName) => {\n    if (currentUsersRef.current && currentUsersRef.current.length > 0){\n      const tempUsers = [...currentUsersRef.current]\n      const user = tempUsers.shift()\n      setUsers(tempUsers)\n      console.log(\"USING CURRENT USERS | CURRENT USERS: \" + tempUsers.length + \" | @\" + user.screenName)\n      setCurrentUser(user);\n      setProgress(\"idle\");\n      return tempUsers.length;\n    }\n    return 0;\n  }\n\n  const handleNodeChange = useCallback((event, node) => {\n\n    if (event.preventDefault !== undefined) { \n      event.preventDefault() \n    }\n\n    if (displayNodeTypeRef.current === \"user\"){\n      console.log(\"handleNodeChange | user: @\" + node.screenName)\n    }\n    else{\n      console.log(\"handleNodeChange | hashtag: #\" + node.nodeId)\n    }\n\n    if (event.persist !== undefined) { \n      event.persist() \n    }\n\n    let eventName = event.target.name || \"nop\";\n    let eventValue = event.target.value;\n    let eventChecked = event.target.checked;\n\n    if (event.target.name === undefined && event.code){\n\n      switch (event.code){\n\n        case \"ArrowRight\":\n        case \"ArrowLeft\":\n          console.log(\"location.pathname: \" + location.pathname)\n          console.log({historyArrayRef})\n          console.log({historyArrayIndexRef})\n          eventName = \"history\"\n          if (event.code === \"ArrrowRight\"){\n          }\n          if (event.code === \"ArrowLeft\"){ \n            if (historyArrayRef.current.length > 0){\n              historyArrayRef.current.pop();\n              const nextRoute = historyArrayRef.current.pop();\n              history.push(nextRoute)\n              eventValue = nextRoute.split(\"/\").pop()\n            }\n          }\n          break;\n\n        case \"KeyA\":\n          eventName = \"all\"\n          break;\n\n        case \"KeyD\":\n        case \"KeyL\":\n          if (event.shiftKey){\n            eventName = \"category\"\n            eventValue = \"left\"\n          }\n          else{\n            eventName = \"left\"\n          }\n          break;\n\n        case \"KeyN\":\n          if (event.shiftKey){\n            eventName = \"category\"\n            eventValue = \"neutral\"\n          }\n          else{\n            eventName = \"neutral\"\n          }\n          break;\n\n        case \"KeyR\":\n          if (event.shiftKey){\n            eventName = \"category\"\n            eventValue = \"right\"\n          }\n          else{\n            eventName = \"right\"\n          }\n          break;\n\n        case \"KeyHyphen\":\n          if (event.shiftKey){\n            eventName = \"category\"\n            eventValue = \"negative\"\n          }\n          else{\n            eventName = \"negative\"\n          }\n          break;\n\n        case \"KeyEquals\":\n          if (event.shiftKey){\n            eventName = \"category\"\n            eventValue = \"positive\"\n          }\n          else{\n            eventName = \"positive\"\n          }\n          break;\n\n        case \"KeyI\":\n        case \"KeyX\":\n          if (event.shiftKey){\n            eventName = \"ignored\"\n            eventChecked = !node.ignored\n          }\n          break;\n\n        case \"KeyV\":\n          if (event.shiftKey){\n            eventName = \"catVerified\"\n            eventChecked = !node.categoryVerified\n          }\n          break;\n\n        case \"KeyB\":\n          if (event.shiftKey){\n            eventName = \"isBot\"\n            eventChecked = !node.isBot\n          }\n          break;\n\n        default:\n      }\n    }\n\n    let searchFilter;\n\n    if (node.nodeType === \"user\"){\n      searchFilter = \"@?\";\n      console.log(\"handleNodeChange | @\" + node.screenName + \" | name: \" + eventName + \" | value: \" + eventValue)\n    }\n    else{\n      searchFilter = \"#?\";\n      console.log(\"handleNodeChange | #\" + node.nodeId + \" | name: \" + eventName + \" | value: \" + eventValue)\n    }\n\n    setProgress(eventName);\n\n    let usersAvailable = 0;\n\n    switch (eventName){\n\n      case \"nop\":\n        break;\n\n      case \"history\":\n        if (node.nodeType === \"user\"){\n          console.log(\"handleNodeChange | history | @\" + node.screenName + \" | name: \" + eventName + \" | value: \" + eventValue)\n          socket.emit(\"TWITTER_SEARCH_NODE\", \"@\" + eventValue);\n        }\n        else{\n          console.log(\"handleNodeChange | history | #\" + node.nodeId + \" | name: \" + eventName + \" | value: \" + eventValue)\n          socket.emit(\"TWITTER_SEARCH_NODE\", \"#\" + eventValue);\n        }\n        break;\n\n      case \"all\":\n      case \"left\":\n      case \"neutral\":\n      case \"right\":\n      case \"positive\":\n      case \"negative\":\n\n        searchFilter += eventName\n\n        usersAvailable = currentUsersAvailable(eventName)\n\n        // if (eventName !== \"all\" || usersAvailable < 3){\n        if (usersAvailable < 5){\n          console.log(\"GET MORE USERS | usersAvailable: \" + usersAvailable)\n          socket.emit(\"TWITTER_SEARCH_NODE\", searchFilter);\n        }\n\n        break\n\n      case \"mismatch\":\n        if (node.nodeType === \"user\"){\n          socket.emit(\"TWITTER_SEARCH_NODE\", \"@?mm\");\n        }\n        break\n\n      case \"category\":\n        if (twitterAuthenticatedRef.current){\n          socket.emit(\"TWITTER_CATEGORIZE_NODE\", {\n            category: eventValue,\n            following: true,\n            node: node,\n          });\n        }\n        else{\n          alert(\"NOT AUTHENTICATED\")\n          setProgress(\"idle\")\n          return;\n        }\n        break\n\n      case \"isBot\":\n      case \"following\":\n      case \"catVerified\":\n      case \"ignored\":\n\n        if (!twitterAuthenticatedRef.current){\n          alert(\"NOT AUTHENTICATED\")\n          setProgress(\"idle\")\n          return;\n        }\n\n        if (eventName === \"ignored\"){\n          if (eventChecked){\n            socket.emit(\"TWITTER_IGNORE\", node);\n          }\n          else{\n            socket.emit(\"TWITTER_UNIGNORE\", node);\n          }\n          break\n        }\n\n        if (node.nodeType === \"user\"){\n\n          if (eventName === \"bot\"){\n            if (eventChecked){\n              socket.emit(\"TWITTER_BOT\", node);\n            }\n            else{\n              socket.emit(\"TWITTER_UNBOT\", node);\n            }\n          }\n\n          if (eventName === \"following\"){\n            if (eventChecked){\n              socket.emit(\"TWITTER_FOLLOW\", node);\n            }\n            else{\n              socket.emit(\"TWITTER_UNFOLLOW\", node);\n            }\n          }\n\n          if (eventName === \"catVerified\"){\n            if (eventChecked){\n              socket.emit(\"TWITTER_CATEGORY_VERIFIED\", node);\n            }\n            else{\n              socket.emit(\"TWITTER_CATEGORY_UNVERIFIED\", node);\n            }\n          }\n\n        }\n\n        break\n\n      default:\n        console.log(\"handleNodeChange: UNKNOWN NAME: \" + eventName + \" | VALUE: \" + eventValue)\n        console.log({event})\n    }\n    \n  }, [history, location])\n\n  const nodeValid = (node) => {\n\n    if (node === undefined) return false\n    if (node.nodeId === undefined) return false\n\n    if (node.nodeType === \"user\"){\n      if (node.screenName === undefined) return false\n    } \n\n    return true\n  }\n\n  useEffect(() => {\n    if (displayNodeTypeRef.current === \"user\"){\n      console.log({history})\n      console.log(\"loc:  \" + location.pathname)\n      // if (!history.location.pathname.endsWith(\"/user/\" + currentUserRef.current.screenName)){\n      if (!location.pathname.endsWith(\"/user/\" + currentUserRef.current.screenName)){\n        console.log(\"history push: /categorize/user/\" + currentUserRef.current.screenName)\n        history.push(\"/categorize/user/\" + currentUserRef.current.screenName)\n      }\n    }\n  }, [history, currentUser, location.pathname])\n\n  useEffect(() => {\n    if (displayNodeTypeRef.current === \"hashtag\"){\n      console.log(\"history loc:  \" + history.location.pathname)\n      if (!history.location.pathname.endsWith(\"/hashtag/\" + currentHashtagRef.current.nodeId)){\n        console.log(\"history push: /categorize/hashtag/\" + currentHashtagRef.current.nodeId)\n        history.push(\"/categorize/hashtag/\" + currentHashtagRef.current.nodeId)\n      }\n    }\n  }, [history, currentHashtag, location.pathname])\n\n  useEffect(() => {\n\n    socket.on(\"connect\", ()=>{\n\n      console.log(\"CONNECTED: \" + socket.id)\n\n      setProgress(progress => \"authentication\");\n\n      socket.emit(\"authentication\", {\n        namespace: \"view\",\n        userId: \"test\",\n        password: \"0123456789\",\n      });\n    })\n\n    socket.on(\"TWITTER_USERS\", (response) => {\n\n      console.debug(\"RX TWITTER_USERS\");\n\n      if (response.nodes && response.nodes.length > 0) {\n\n        console.debug(\"RX USERS: \" + response.nodes.length);\n\n        const tempUsers = [...currentUsersRef.current];\n\n        for(const user of response.nodes){\n          if (user.screenName && user.screenName !== \"\"){\n            tempUsers.push(user)\n          }\n        }\n        console.debug(\"TOTAL USERS: \" + tempUsers.length);\n        setUsers(users => [...tempUsers])\n      }\n\n      setProgress(progress => \"idle\");\n      setStatus(status => response.stats)\n    });\n\n    socket.on(\"SET_TWITTER_USER\", (response) => {\n\n      console.debug(\"RX SET_TWITTER_USER\");\n\n      if (response.nodes) {\n        setUsers(users => [...users, ...response.nodes])\n        console.debug(\"RX nodes: \" + response.nodes.length);\n      }\n      \n      if (nodeValid(response.node)) {\n        setCurrentUser(currentUser => response.node)\n        console.debug(\"new: @\" + response.node.screenName);\n      }\n      else{\n\n      }\n\n      setProgress(progress => \"idle\");\n      setStatus(status => response.stats)\n    });\n\n    socket.on(\"TWITTER_SEARCH_NODE_UNKNOWN_MODE\", (response) => {\n      console.debug(\"RX TWITTER_SEARCH_NODE_UNKNOWN_MODE\");\n      console.debug({response})\n      setProgress(progress => \"idle\");\n      setStatus(status => response.stats)\n    })\n\n    socket.on(\"TWITTER_HASHTAG_NOT_FOUND\", (response) => {\n      console.debug(\"RX TWITTER_HASHTAG_NOT_FOUND\");\n      console.debug({response})\n      setStatusHashtag(statusHashtag => \"notFound\")\n      setCurrentHashtag(currentHashtag => {\n        return {nodeId: response.searchNode.slice(1)}\n      }) \n      setTweets({ search_metadata: {}, statuses: [] })\n      setProgress(progress => \"idle\");\n      setStatus(status => response.stats)\n    })\n\n    socket.on(\"SET_TWITTER_HASHTAG\", (response) => {\n\n      console.debug(\"RX SET_TWITTER_HASHTAG\");\n\n      if (nodeValid(response.node)) { \n        setStatusHashtag(statusHashtag => \"found\")\n        setCurrentHashtag(currentHashtag => response.node) \n        console.debug(\"new: #\" + response.node.nodeId);\n        if (response.tweets) {\n          console.debug(\"RX SET_TWITTER_HASHTAG | SET TWEETS: \" + response.tweets.statuses.length);\n          setTweets(tweets => response.tweets)\n        }\n      }\n      else{\n        setStatusHashtag(statusHashtag => \"invalid\")\n        console.debug(\"INVALID HT NODE | RESULTS\");\n        console.debug({response})\n      }\n\n      setProgress(progress => \"idle\");\n      setStatus(status => response.stats)\n    });\n\n    socket.on(\"action\", (action) => {\n      \n      console.debug(\"RX ACTION | socket: \" + socket.id + \" | TYPE: \" + action.type);\n      console.debug(\"RX ACTION | \", action.data);\n\n      switch (action.type){\n\n        case \"user\":\n            setCurrentUser(currentUser => action.data)\n            console.log(\"USER: @\" + action.data.screenName + \" | \" + action.data.profileImageUrl)\n          break\n\n        case \"hashtag\":\n            console.log(\"HT: #\" + action.data.text)\n          break\n\n        case \"stats\":\n            setStatus(() => action.data)\n          break\n\n        default:\n      }\n\n    });   \n\n    socket.on(\"authenticated\", function () {\n      setProgress(progress => \"idle\");\n      console.debug(\"AUTHENTICATED | \" + socket.id);\n      socket.emit(\"TWITTER_SEARCH_NODE\", \"@?all\")\n      socket.emit(\"TWITTER_SEARCH_NODE\", \"@threecee\")\n      socket.emit(\"TWITTER_SEARCH_NODE\", \"#blacklivesmatter\")\n    });\n\n    socket.on(\"USER_AUTHENTICATED\", function (userObj) {\n      setProgress(progress => \"idle\");\n      setTwitterAuthenticated(() => true)\n      setTwitterAuthenticatedUser(twitterAuthenticatedUser => userObj.screenName)\n      console.log(\"RX TWITTER USER_AUTHENTICATED | USER: @\" + userObj.screenName);\n    });\n\n    socket.on(\"TWITTER_USER_NOT_FOUND\", (response) => {\n\n      console.debug(\"RX TWITTER_USER_NOT_FOUND\");\n      console.debug(response);\n\n      setStatus(status => response.stats);\n      if (response.searchNode.startsWith(\"@?\") && response.results && !response.results.endCursor){\n        console.debug(\"RETRY NEXT UNCAT: \" + response.searchNode);\n        socket.emit(\"TWITTER_SEARCH_NODE\", response.searchNode);\n      }\n      else{\n        setProgress(progress => \"idle\");\n      }\n    });\n    \n    setProgress(\"idle\")\n\n    return () => socket.disconnect();\n\n  }, [])\n\n  // history\n  // - back\n  useHotkeys('left', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // - forward\n  useHotkeys('right', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // all\n  useHotkeys('A', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // left\n  useHotkeys('L', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+L', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('D', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+D', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // right\n  useHotkeys('R', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+R', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // neutral\n  useHotkeys('N', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+N', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // negative\n  useHotkeys('-', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+-', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // positive\n  useHotkeys('=', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+=', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // ignore toggle\n  useHotkeys('shift+I', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+X', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // bot toggle\n  useHotkeys('shift+B', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // verified toggle\n  useHotkeys('shift+V', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  \n  const handleChangeSearch = (event) => {\n    console.log(\"handleChangeSearch: \" + event.target.value)\n    setUserSearch(event.target.value);\n  }\n\n  const handleKeyPress = (event) => {\n    if (event.charCode === 13) { // enter key pressed\n      console.log(\"ENTER\")\n      handleSearchNode(userSearch)\n    }\n  }\n\n  const displayNode = (nodeType) => {\n    if (nodeType === \"user\"){\n      return <UserView user={currentUser} stats={status} handleNodeChange={handleNodeChange} handleSearchNode={handleSearchNode}/>\n    }\n    else{\n      return <HashtagView hashtag={currentHashtagRef.current} statusHashtag={statusHashtagRef.current} stats={statusRef.current} tweets={tweetsRef.current} handleNodeChange={handleNodeChange} handleSearchNode={handleSearchNode}/>\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Container component=\"main\" maxWidth={false}>\n        <AppBar  className={classes.appBar} position=\"static\">\n          <Toolbar className={classes.toolBar}>\n\n            <Typography className={classes.title}>\n              {/* Categorizer | USER HISTORY: {userHistory.length} | PREV USER: {userHistory.length > 0 ? userHistory[userHistory.length-1] : \"\"} */}\n              CATEGORIZE\n            </Typography>\n            \n            <Tabs \n              className={classes.tabs}\n              value={tabValue} \n              onChange={handleTabChange}\n            >\n              <Tab label=\"User\" />\n              <Tab label=\"Hashtag\"/>\n            </Tabs>\n\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon color=\"primary\"/>\n              </div>\n              <InputBase\n                placeholder={displayNodeTypeRef.current === \"user\" ? \"user search...\" : \"hashtag search...\"}\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                inputProps={{ 'aria-label': 'search' }}\n                value={userSearch}\n                onKeyPress={handleKeyPress}\n                onChange={handleChangeSearch}\n              />\n            </div>\n            \n            <Typography  className={classes.serverStatus}>\n              {status.nodesPerMin} NPM ( max: {status.maxNodesPerMin} at {formatDateTime(status.maxNodesPerMinTime)} )\n            </Typography>\n\n\n            {progress !== \"idle\" ? <><Typography className={classes.progress}>{`${progress} ...`}</Typography> <CircularProgress className={classes.progress}>{progress}</CircularProgress></> : <div className={classes.progress}></div>}\n\n            <Link\n              className={classes.twitterAuth}\n              // href={\"http://twitter.com/\" + twitterAuthenticatedUserRef.current}\n              href={\"http://twitter.com/\" + twitterAuthenticatedUser}\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              {/* {twitterAuthenticatedUserRef.current ? \"@\" + twitterAuthenticatedUserRef.current : \"\"} */}\n              {twitterAuthenticatedUser ? \"@\" + twitterAuthenticatedUser : \"\"}\n            </Link>\n\n            <Button \n              className={classes.buttonLogin}\n              variant=\"contained\" \n              // color={twitterAuthenticatedRef.current ? \"secondary\" : \"primary\"} \n              color={twitterAuthenticated ? \"secondary\" : \"primary\"} \n              size=\"small\" \n              onClick={event => { handleLoginLogout(event)}} \n              name=\"login\"\n              label=\"login\"\n            >\n              {/* {twitterAuthenticatedRef.current ? \"LOGOUT\" : \"LOGIN TWITTER\"} */}\n              {twitterAuthenticated ? \"LOGOUT\" : \"LOGIN TWITTER\"}\n            </Button>\n\n          </Toolbar>\n        </AppBar>\n        {/* {displayNode(displayNodeTypeRef.current)} */}\n        {displayNode(displayNodeType)}\n      </Container>\n    </div>\n  );\n}\n\nexport default App;","// import React, { useState } from 'react';\nimport React from 'react';\nimport { green } from '@material-ui/core/colors';\nimport clsx from 'clsx';\n\nimport { Timeline } from 'react-twitter-widgets'\n\nimport Duration from 'duration';\n\n// import AppBar from '@material-ui/core/AppBar';\n// import Button from '@material-ui/core/Button';\n// import ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Card from '@material-ui/core/Card';\n// import CardActionArea from '@material-ui/core/CardActionArea';\n// import CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n// import CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\n// import CheckBoxIcon from '@material-ui/icons/CheckBox';\n// import CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\n// import FormLabel from '@material-ui/core/FormLabel';\nimport Grid from '@material-ui/core/Grid';\n// import IconButton from '@material-ui/core/IconButton';\n// import InputBase from '@material-ui/core/InputBase';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\n// import MenuIcon from '@material-ui/icons/Menu';\n// import Paper from '@material-ui/core/Paper';\n// import Radio from '@material-ui/core/Radio';\n// import RadioGroup from '@material-ui/core/RadioGroup';\n// import SearchIcon from '@material-ui/icons/Search';\nimport Select from '@material-ui/core/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n// import Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n\nconst fontSizeCategory = '0.9rem';\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    // backgroundColor: theme.palette.common.black,\n    // color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 11,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    // '&:nth-of-type(odd)': {\n    //   backgroundColor: theme.palette.action.hover,\n    // },\n  },\n}))(TableRow);\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 2,\n  },\n  appBar: {\n    backgroundColor: 'white',\n    marginBottom: theme.spacing(1),\n  },\n  grid: {\n    display: 'flex',\n    alignItems: 'stretch',\n  },\n  gridItem: {\n    margin: theme.spacing(1),\n  },  \n  card: {\n    // maxWidth: \"90%\",\n    alignSelf: \"center\",\n  },\n  profileImage: {\n    marginBottom: theme.spacing(1),\n  },\n  bannerImage: {\n    marginBottom: theme.spacing(1),\n  },\n  icon: {\n    borderRadius: '50%',\n    width: 16,\n    height: 16,\n    boxShadow: 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\n    backgroundColor: '#f5f8fa',\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\n    '$root.Mui-focusVisible &': {\n      outline: '2px auto rgba(19,124,189,.6)',\n      outlineOffset: 2,\n    },\n    'input:hover ~ &': {\n      backgroundColor: '#ebf1f5',\n    },\n    'input:disabled ~ &': {\n      boxShadow: 'none',\n      background: 'rgba(206,217,224,.5)',\n    },\n  },\n  checkedIcon: {\n    backgroundColor: '#137cbd',\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\n    '&:before': {\n      display: 'block',\n      width: 16,\n      height: 16,\n      backgroundImage: 'radial-gradient(#fff,#fff 28%,transparent 32%)',\n      content: '\"\"',\n    },\n    'input:hover ~ &': {\n      backgroundColor: '#106ba3',\n    },\n  },\n  \n  selectCategory: {\n    fontSize: '0.5rem',\n    backgroundColor: '#ddeeee',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  radioGroupCategory: {\n    fontSize: '0.5rem',\n    backgroundColor: '#ddeeee',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n  },\n  checkbox: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n  radioButtonLabel: {\n    fontSize: '0.9rem'\n  },\n  radioButton: {\n  },\n  table: {\n    borderRadius: theme.shape.borderRadius,\n  },\n  tableHead: {\n    backgroundColor: '#ddeeee',\n  },\n  tableCell: {\n  },\n  tableCategorized: {\n    borderRadius: theme.shape.borderRadius,\n    // borderColor: 'red',\n    backgroundColor: '#ddeeee',\n  },\n  tableRowGreen: {\n    backgroundColor: 'lightgreen',\n  },\n  statusBar: {\n    raised: false,\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    // flexGrow: 1,\n    color: 'blue',\n  },\n  search: {\n    // flexGrow: 1,\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: \"white\",\n    '&:hover': {\n      backgroundColor: \"#ddeeee\",\n    },\n    marginRight: theme.spacing(1),\n    // marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      // marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'primary',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n\n  buttonGroupLabel: {\n    color: 'blue',\n    marginRight: theme.spacing(1),\n  },\n  buttonAll: {\n    color: 'black',\n  },\n  buttonLeft: {\n    color: 'blue',\n  },\n  buttonNeutral: {\n    color: 'gray',\n  },\n  buttonRight: {\n    color: 'red',\n  },\n  buttonMismatch: {\n    margin: 5\n  },\n\n  autoCategory:{\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n  },\n\n  category: {\n    // fontSize: fontSizeCategory,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n\n  left: {\n    backgroundColor: 'blue',\n    color: 'white',\n  },\n  neutral: {\n    backgroundColor: 'darkgray',\n    color: 'white',\n  },\n  right: {\n    backgroundColor: 'red',\n    color: 'white',\n  },\n  positive: {\n    backgroundColor: 'green',\n    color: 'white',\n  },\n  negative: {\n    backgroundColor: 'yellow',\n    color: 'black',\n  },\n  none: {\n    backgroundColor: 'lightgray',\n    color: 'black',\n  },\n  ignored: {\n    backgroundColor: 'yellow',\n    color: 'black',\n  },\n\n}));\n\nconst formatDate = (dateInput) => {\n  return new Date(dateInput).toLocaleDateString(\n    'en-gb',\n    {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }\n  );\n}\n\nconst defaultProfileImage = \"logo192.png\"\nconst defaultBannerImage = \"logo192.png\"\n\nconst User = (props) => {\n\n  const classes = useStyles();\n\n  const createdAt = formatDate(props.user.createdAt)\n  const lastSeen = formatDate(props.user.lastSeen)\n \n  const lastSeenDuration = new Duration(new Date(props.user.lastSeen)).toString(1, 4)\n  const twitterAge = props.user.createdAt ? new Duration(new Date(props.user.createdAt)) : new Duration(new Date())\n  const twitterAgeString = twitterAge.toString(1, 4)\n\n  const tweetRate = twitterAge.days > 0 ? Math.ceil(props.user.statusesCount/twitterAge.days) : 0;\n\n  const openUserTwitterPage = () => {\n    console.log(\"open twitter\")\n    window.open(`http://twitter.com/${props.user.screenName || null}`, \"_blank\") //to open new page\n  }\n\n  const getCategoryClass = (category) => {\n    switch (category){\n      case \"left\":\n      case \"neutral\":\n      case \"right\":\n      case \"positive\":\n      case \"negative\":\n      case \"ignored\":\n        return classes[category]\n      default:\n        return classes.none\n    }\n  }\n\n  return (\n    <>\n      <Grid className={classes.grid}>\n          <Grid item className={classes.gridItem} xs={3}>\n            <Card className={classes.card} variant=\"outlined\">\n\n              <CardContent onClick={openUserTwitterPage}>\n                  <Typography \n                    className={clsx(classes.category, props.user.ignored ? getCategoryClass(\"ignored\") : getCategoryClass(props.user.category))} \n                    variant=\"h6\"\n                  >\n                    {props.user.name}\n                  </Typography>\n                  <Typography variant=\"h6\">@{props.user.screenName} </Typography>\n              </CardContent>\n              <CardContent >\n                  <Typography>{props.user.description}</Typography>\n              </CardContent>\n\n              <CardMedia\n                className={classes.profileImage}\n                src={props.user.profileImageUrl || defaultProfileImage}\n                component=\"img\"\n                onError={e => {}}              \n              />\n              <CardMedia \n                className={classes.bannerImage} \n                src={props.user.bannerImageUrl || defaultBannerImage} \n                component=\"img\"\n                onError={e => {}}              \n              />\n            </Card>\n          </Grid>\n          <Grid item className={classes.gridItem} xs={3}>\n            <Timeline\n              dataSource={{\n                sourceType: 'profile',\n                screenName: props.user.screenName\n              }}\n              options={{width: '100%', height: '800'}}\n            />\n          </Grid>\n          <Grid item className={classes.gridItem} xs={2}>\n            <TableContainer>\n              <Table className={classes.table} size=\"small\">\n                <TableHead>\n                  <StyledTableRow className={classes.tableHead}>\n                    <StyledTableCell>@{props.user.screenName}</StyledTableCell><StyledTableCell align=\"right\"></StyledTableCell>\n                  </StyledTableRow>\n                </TableHead>\n                <TableBody>\n                  <StyledTableRow>\n                    <StyledTableCell>Twitter ID</StyledTableCell><StyledTableCell align=\"right\">{props.user.nodeId}</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow>\n                    <StyledTableCell>Location</StyledTableCell><StyledTableCell align=\"right\">{props.user.location}</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow>\n                    <StyledTableCell>Created</StyledTableCell><StyledTableCell align=\"right\">{createdAt}</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow>\n                    <StyledTableCell>Twitter age</StyledTableCell><StyledTableCell align=\"right\">{twitterAgeString}</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow className={props.user.followersCount > 5000 ? classes.tableRowGreen : null}>\n                    <StyledTableCell>Followers</StyledTableCell><StyledTableCell align=\"right\">{props.user.followersCount}</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow>\n                    <StyledTableCell>Friends</StyledTableCell><StyledTableCell align=\"right\">{props.user.friendsCount}</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow>\n                    <StyledTableCell>Tweets</StyledTableCell><StyledTableCell align=\"right\">{props.user.statusesCount}</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow>\n                    <StyledTableCell>Tweets/day</StyledTableCell><StyledTableCell align=\"right\">{tweetRate}</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow>\n                    <StyledTableCell>Active</StyledTableCell><StyledTableCell align=\"right\">{lastSeen} ({lastSeenDuration} ago)</StyledTableCell>\n                  </StyledTableRow>\n                  {/* <StyledTableRow>\n                    <StyledTableCell>Last Active</StyledTableCell><StyledTableCell align=\"right\">{lastSeenDuration} ago</StyledTableCell>\n                  </StyledTableRow> */}\n                  <StyledTableRow>\n                    <StyledTableCell>Mentions</StyledTableCell><StyledTableCell align=\"right\">{props.user.mentions}</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow>\n                    <StyledTableCell>Mentions/hour</StyledTableCell><StyledTableCell align=\"right\">{props.user.rate ? 60*props.user.rate.toFixed(2) : 0}</StyledTableCell>\n                  </StyledTableRow>\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Grid>\n          <Grid item className={classes.gridItem} xs={2}>\n            <TableContainer>\n              <Table size=\"small\">\n                <TableHead>\n                  <StyledTableRow className={classes.tableHead}>\n                    <StyledTableCell colSpan={3}>ALL USERS</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow>\n                    <StyledTableCell>CAT</StyledTableCell>\n                    <StyledTableCell align=\"right\">MAN</StyledTableCell>\n                    <StyledTableCell align=\"right\">AUTO</StyledTableCell>\n                  </StyledTableRow>\n                </TableHead>\n                <TableBody>\n                  <StyledTableRow > \n                    <StyledTableCell>LEFT</StyledTableCell>\n                    <StyledTableCell align=\"right\">{props.stats.user.manual.left}</StyledTableCell>\n                    <StyledTableCell align=\"right\">{props.stats.user.auto.left}</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow>\n                    <StyledTableCell >RIGHT</StyledTableCell>\n                    <StyledTableCell align=\"right\">{props.stats.user.manual.right}</StyledTableCell>\n                    <StyledTableCell align=\"right\">{props.stats.user.auto.right}</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow>\n                    <StyledTableCell >NEUTRAL</StyledTableCell>\n                    <StyledTableCell align=\"right\">{props.stats.user.manual.neutral}</StyledTableCell>\n                    <StyledTableCell align=\"right\">{props.stats.user.auto.neutral}</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow>\n                    <StyledTableCell >POSITIVE</StyledTableCell>\n                    <StyledTableCell align=\"right\">{props.stats.user.manual.positive}</StyledTableCell>\n                    <StyledTableCell align=\"right\">{props.stats.user.auto.positive}</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow>\n                    <StyledTableCell >NEGATIVE</StyledTableCell>\n                    <StyledTableCell align=\"right\">{props.stats.user.manual.negative}</StyledTableCell>\n                    <StyledTableCell align=\"right\">{props.stats.user.auto.negative}</StyledTableCell>\n                  </StyledTableRow>\n                  <StyledTableRow>\n                    <StyledTableCell >NONE</StyledTableCell>\n                    <StyledTableCell align=\"right\">{props.stats.user.manual.none}</StyledTableCell>\n                    <StyledTableCell align=\"right\">{props.stats.user.auto.none}</StyledTableCell>\n                  </StyledTableRow>\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Grid>\n          <Grid item className={classes.gridItem} xs={1}>\n            <FormGroup>\n              <FormControl >\n                <InputLabel id=\"category-manual\">CATEGORY</InputLabel>\n                <Select\n                  labelId=\"category-manual-label\"\n                  id=\"category-manual\"\n                  name=\"category\"\n                  className={clsx(classes.category, getCategoryClass(props.user.category))} \n                  align=\"center\"\n                  value={props.user.category || \"none\"}\n                  onChange={(event) => props.handleNodeChange(event, props.user)}\n                >\n                  <MenuItem dense={true} value={\"none\"} >NONE</MenuItem>\n                  <MenuItem dense={true} value={\"left\"} >LEFT</MenuItem>\n                  <MenuItem dense={true} value={\"neutral\"}>NEUTRAL</MenuItem>\n                  <MenuItem dense={true} value={\"right\"}>RIGHT</MenuItem>\n                  <MenuItem dense={true} value={\"positive\"}>POSITIVE</MenuItem>\n                  <MenuItem dense={true} value={\"negative\"}>NEGATIVE</MenuItem>\n\n                </Select>\n              </FormControl>\n\n              <Typography\n                className={clsx(classes.autoCategory, getCategoryClass(props.user.categoryAuto))} \n                align=\"center\"\n              >\n                AUTO: {props.user.categoryAuto ? props.user.categoryAuto.toUpperCase() : \"NONE\"}\n              </Typography>\n\n              <FormControl \n                component=\"fieldset\"\n                className={classes.radioGroupCategory}\n                size=\"small\"\n              >\n                <FormControlLabel\n                  control={<Checkbox className={classes.checkbox} size=\"small\" checked={props.user.following || false} onChange={(event) => props.handleNodeChange(event, props.user)} name=\"following\" />}\n                  label={<Typography className={classes.radioButtonLabel}>FOLLOWING</Typography>}\n                />\n                <FormControlLabel\n                  control={<Checkbox className={classes.checkbox} size=\"small\" checked={props.user.categoryVerified || false} onChange={(event) => props.handleNodeChange(event, props.user)} name=\"catVerified\" />}\n                  label={<Typography className={classes.radioButtonLabel}>VERIFIED</Typography>}\n                />\n                <FormControlLabel\n                  control={<Checkbox className={classes.checkbox} size=\"small\" checked={props.user.ignored || false} onChange={(event) => props.handleNodeChange(event, props.user)} name=\"ignored\" />}\n                  label={<Typography className={classes.radioButtonLabel}>IGNORED</Typography>}\n                />\n                <FormControlLabel\n                  control={<Checkbox className={classes.checkbox} size=\"small\" checked={props.user.isBot || false} onChange={(event) => props.handleNodeChange(event, props.user)} name=\"isBot\" />}\n                  label={<Typography className={classes.radioButtonLabel}>BOT</Typography>}\n                />\n              </FormControl>\n            </FormGroup>\n          </Grid>\n        </Grid>\n    </>\n  );\n}\n\nexport default User;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Tweet } from 'react-twitter-widgets'\n\nimport Duration from 'duration';\nimport { green } from '@material-ui/core/colors';\n\n// import AppBar from '@material-ui/core/AppBar';\n// // import Box from '@material-ui/core/Box';\n// import Button from '@material-ui/core/Button';\n// import ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Card from '@material-ui/core/Card';\n// import CardActionArea from '@material-ui/core/CardActionArea';\n// import CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n// import CardHeader from '@material-ui/core/CardHeader';\n// import CardMedia from '@material-ui/core/CardMedia';\n// import CheckBoxIcon from '@material-ui/icons/CheckBox';\n// import CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\n// import FormLabel from '@material-ui/core/FormLabel';\nimport Grid from '@material-ui/core/Grid';\n// import IconButton from '@material-ui/core/IconButton';\n// import InputBase from '@material-ui/core/InputBase';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\n// import MenuIcon from '@material-ui/icons/Menu';\n// import Paper from '@material-ui/core/Paper';\n// import Radio from '@material-ui/core/Radio';\n// import RadioGroup from '@material-ui/core/RadioGroup';\n// import SearchIcon from '@material-ui/icons/Search';\nimport Select from '@material-ui/core/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\n// import TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n// import Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TableHead } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 2,\n  },\n  grid: {\n    display: 'flex',\n  },\n  gridItem: {\n    margin: 5,\n  },  \n  card: {\n    raised: false,\n    maxWidth: 400,\n  },\n  table: {\n  },\n  tableRowGreen: {\n    backgroundColor: 'lightgreen',\n  },\n  appBar: {\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  statusBar: {\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    color: 'blue',\n  },\n  search: {\n    flexGrow: 1,\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: \"white\",\n    '&:hover': {\n      backgroundColor: \"lightgray\",\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'primary',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  selectCategory: {\n    fontSize: '0.5rem',\n    backgroundColor: '#ddeeee',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  radioGroupCategory: {\n    fontSize: '0.5rem',\n    backgroundColor: '#ddeeee',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n  },\n  checkbox: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n  radioButtonLabel: {\n    fontSize: '0.9rem'\n  },\n  radioButton: {\n  },\n\n  buttonGroupLabel: {\n    color: 'blue',\n    marginRight: theme.spacing(1),\n  },\n  buttonAll: {\n    color: 'black',\n  },\n  buttonLeft: {\n    color: 'blue',\n  },\n  buttonNeutral: {\n    color: 'gray',\n  },\n  buttonRight: {\n    color: 'red',\n  },\n  buttonMismatch: {\n    margin: 5\n  },\n\n  autoCategory:{\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n  },\n\n  category: {\n    // fontSize: fontSizeCategory,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n\n  left: {\n    backgroundColor: 'blue',\n    color: 'white',\n  },\n  neutral: {\n    backgroundColor: 'darkgray',\n    color: 'white',\n  },\n  right: {\n    backgroundColor: 'red',\n    color: 'white',\n  },\n  positive: {\n    backgroundColor: 'green',\n    color: 'white',\n  },\n  negative: {\n    backgroundColor: 'yellow',\n    color: 'black',\n  },\n  none: {\n    backgroundColor: 'lightgray',\n    color: 'black',\n  },\n  ignored: {\n    backgroundColor: 'yellow',\n    color: 'black',\n  },\n\n}));\n\nconst formatDate = (dateInput) => {\n  return new Date(dateInput).toLocaleDateString(\n    'en-gb',\n    {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }\n  );\n}\n\nconst HashtagView = (props) => {\n\n  const classes = useStyles();\n\n  const createdAt = props.hashtag.createdAt ? formatDate(props.hashtag.createdAt) : \"---\"\n  const lastSeen = props.hashtag.lastSeen ? formatDate(props.hashtag.lastSeen) : \"---\"\n \n  const lastSeenDuration = props.hashtag.lastSeen ? new Duration(new Date(props.hashtag.lastSeen)).toString(1, 4) : \"---\"\n  const twitterAge = props.hashtag.createdAt ? new Duration(new Date(props.hashtag.createdAt)) : \"---\"\n  const twitterAgeString = props.hashtag.createdAt ? twitterAge.toString(1, 4) : \"---\"\n\n  const openHashtagTwitterPage = () => {\n    console.log(\"open twitter\")\n    window.open(`https://twitter.com/search?f=tweets&q=%23${props.hashtag.nodeId || null}`, \"_blank\") //to open new page\n  }\n\n  const displayTweets = (tweets) => {\n    if (!tweets || tweets === undefined || tweets.statuses === undefined) { return <></>}\n    return tweets.statuses.map((tweet) => {\n      return <Tweet key={tweet.id_str} tweetId={tweet.id_str} options={{ width: \"400\" }} />\n    })\n  }\n\n  const getCategoryClass = (category) => {\n    switch (category){\n      case \"left\":\n      case \"neutral\":\n      case \"right\":\n      case \"positive\":\n      case \"negative\":\n      case \"ignored\":\n        return classes[category]\n      default:\n        return classes.none\n    }\n  }\n\n  return (\n    <>\n      <Grid className={classes.grid}>\n        <Grid item className={classes.gridItem} xs={3}>\n          <Card className={classes.card} variant=\"outlined\">\n            <CardContent onClick={openHashtagTwitterPage}>\n              <Typography \n                className={clsx(classes.category, props.hashtag.ignored ? getCategoryClass(\"ignored\") : getCategoryClass(props.hashtag.category))} \n                variant=\"h6\"\n              >\n                #{props.statusHashtag === \"notFound\" ? props.hashtag.nodeId + \" NOT FOUND\" : props.hashtag.nodeId}\n            </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item className={classes.gridItem} xs={3}>{displayTweets(props.tweets)}</Grid>\n\n        <Grid item className={classes.gridItem} xs={3}>\n          <TableContainer>\n            <Table className={classes.table} size=\"small\">\n              <TableBody>\n                <TableRow>\n                  <TableCell>id</TableCell><TableCell align=\"right\">{props.hashtag.nodeId}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>created</TableCell><TableCell align=\"right\">{createdAt}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>twitter age</TableCell><TableCell align=\"right\">{twitterAgeString}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>last seen</TableCell><TableCell align=\"right\">{lastSeen}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>last seen</TableCell><TableCell align=\"right\">{lastSeenDuration} ago</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>mentions</TableCell><TableCell align=\"right\">{props.hashtag.mentions ? props.hashtag.mentions : \"---\"}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>mentions/min</TableCell><TableCell align=\"right\">{props.hashtag.rate ? props.hashtag.rate.toFixed(1) : \"---\"}</TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item className={classes.gridItem} xs={2}>\n          <TableContainer>\n            <Table className={classes.table} size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>CAT</TableCell>\n                  <TableCell align=\"left\">MAN</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                <TableRow>\n                  <TableCell>left</TableCell>\n                  <TableCell align=\"right\">{props.stats.hashtag.manual.left}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>neutral</TableCell>\n                  <TableCell align=\"right\">{props.stats.hashtag.manual.neutral}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>right</TableCell>\n                  <TableCell align=\"right\">{props.stats.hashtag.manual.right}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>positive</TableCell>\n                  <TableCell align=\"right\">{props.stats.hashtag.manual.positive}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>negative</TableCell>\n                  <TableCell align=\"right\">{props.stats.hashtag.manual.negative}</TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item className={classes.gridItem} xs={1}>\n\n          <FormGroup>\n            <FormControl >\n              <InputLabel id=\"category-manual\">CATEGORY</InputLabel>\n              <Select\n                labelId=\"category-manual-label\"\n                id=\"category-manual\"\n                name=\"category\"\n                className={clsx(classes.category, getCategoryClass(props.hashtag.category))} \n                align=\"center\"\n                value={props.hashtag.category || \"none\"}\n                onChange={(event) => props.handleNodeChange(event, props.hashtag)}\n              >\n                <MenuItem dense={true} value={\"none\"} >NONE</MenuItem>\n                <MenuItem dense={true} value={\"left\"} >LEFT</MenuItem>\n                <MenuItem dense={true} value={\"neutral\"}>NEUTRAL</MenuItem>\n                <MenuItem dense={true} value={\"right\"}>RIGHT</MenuItem>\n                <MenuItem dense={true} value={\"positive\"}>POSITIVE</MenuItem>\n                <MenuItem dense={true} value={\"negative\"}>NEGATIVE</MenuItem>\n\n              </Select>\n            </FormControl>\n\n            <Typography\n              className={clsx(classes.autoCategory, getCategoryClass(props.hashtag.categoryAuto))} \n              align=\"center\"\n            >\n              AUTO: {props.hashtag.categoryAuto ? props.hashtag.categoryAuto.toUpperCase() : \"NONE\"}\n            </Typography>\n\n            <FormControl \n              component=\"fieldset\"\n              className={classes.radioGroupCategory}\n              size=\"small\"\n            >\n\n              <FormControlLabel\n                control={<Checkbox className={classes.checkbox} size=\"small\" checked={props.hashtag.ignored || false} onChange={(event) => props.handleNodeChange(event, props.hashtag)} name=\"ignored\" />}\n                label={<Typography className={classes.radioButtonLabel}>IGNORED</Typography>}\n              />\n\n            </FormControl>\n          </FormGroup>\n\n          {/* <FormGroup>\n            <FormControl component=\"fieldset\">\n              <RadioGroup aria-label=\"category\" name=\"category\" value={props.hashtag.category || \"none\"} onChange={(event) => props.handleNodeChange(event, props.hashtag)}>\n                <FormControlLabel labelPlacement=\"start\" value=\"left\" control={<Radio />} label=\"left\"/>\n                <FormControlLabel labelPlacement=\"start\" value=\"neutral\" control={<Radio />} label=\"neutral\" />\n                <FormControlLabel labelPlacement=\"start\" value=\"right\" control={<Radio />} label=\"right\" />\n                <FormControlLabel labelPlacement=\"start\" value=\"positive\" control={<Radio />} label=\"positive\" />\n                <FormControlLabel labelPlacement=\"start\" value=\"negative\" control={<Radio />} label=\"negative\" />\n                <FormControlLabel labelPlacement=\"start\" value=\"none\" control={<Radio />} label=\"none\" />\n              </RadioGroup>\n            </FormControl>\n\n            <FormControlLabel\n              control={<Checkbox checked={props.hashtag.ignored || false} onChange={(event) => props.handleNodeChange(event, props.hashtag)} name=\"ignored\" />}\n              label=\"ignored\"\n              labelPlacement=\"start\"\n            />\n          </FormGroup>\n */}\n\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default HashtagView;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// ReactDOM.render(\n//   <Router>\n//     <div>\n//       <Switch>\n//         <Route path=\"/categorize/user/:slug\">\n//           <App />\n//         </Route>\n//       </Switch>\n//     </div>\n//   </Router>,\n//   document.getElementById('root')\n// );\n\nReactDOM.render(\n  <Router>\n    <div>\n      <Switch>\n        <Route path=\"/categorize/user/:slug\">\n          <App />\n        </Route>\n        <Route path=\"/categorize/hashtag/:slug\">\n          <App />\n        </Route>\n        <Route >\n          <App />\n        </Route>\n      </Switch>\n    </div>\n  </Router>,\n  document.getElementById('root')\n);\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}