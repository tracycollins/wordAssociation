{"version":3,"sources":["App.js","UserView.js","HashtagView.js","AuthUserView.js","reportWebVitals.js","index.js"],"names":["min","max","StyledTableCell","withStyles","theme","head","body","fontSize","TableCell","StyledTableRow","root","backgroundColor","grey","TableRow","useStyles","makeStyles","border","flexGrow","appBar","marginBottom","spacing","grid","display","alignItems","gridItem","margin","gridHeader","padding","paper","outlined","variant","timelineError","textAlign","color","card","alignSelf","profileImage","bannerImage","icon","borderRadius","width","height","boxShadow","backgroundImage","outline","outlineOffset","background","checkedIcon","content","selectCategory","shape","radioGroupCategory","maxWidth","checkbox","green","checked","radioButtonLabel","radioButton","table","align","tableHead","tableCell","tableCategorized","tableRowGreen","statusBar","raised","menuButton","marginRight","title","search","position","breakpoints","up","searchIcon","pointerEvents","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","buttonGroupLabel","buttonAll","buttonLeft","buttonNeutral","buttonRight","buttonMismatch","autoCategory","category","left","neutral","right","positive","negative","none","ignored","formatDate","dateInput","Date","toLocaleDateString","year","month","day","User","props","classes","createdAt","user","lastSeen","lastSeenDuration","Duration","toString","twitterAge","twitterAgeString","tweetRate","days","Math","ceil","statusesCount","getCategoryClass","Grid","className","item","xs","Card","CardContent","onClick","console","log","window","open","screenName","Typography","clsx","name","description","CardMedia","src","profileImageUrl","component","onError","e","bannerImageUrl","Paper","elevation","dataSource","sourceType","options","renderError","_err","TableContainer","Table","size","TableHead","colSpan","TableBody","nodeId","location","followersCount","friendsCount","mentions","rate","toFixed","stats","manual","auto","FormGroup","FormControl","Select","labelId","id","value","onChange","event","handleNodeChange","MenuItem","dense","categoryAuto","toUpperCase","FormControlLabel","control","Checkbox","following","label","categoryVerified","isBot","filterLowFollowersCount","handleFilterChange","marginLeft","HashtagView","tweets","hashtag","statusHashtag","undefined","statuses","map","tweet","tweetId","id_str","InputLabel","tableBody","AuthUserView","authenticated","categorizedRate","total","today","periodCurrent","periodLast","categorized","authUser","categorizedBy","earned","paid","aria-label","DEFAULT_AUTH_URL","VIEWER_ID","floor","random","DEFAULT_VIEWER_OBJ","userId","viewerId","type","namespace","timeStamp","now","tags","mode","entity","viewerObj","socket","socketClient","tabs","tab","minWidth","toolBar","shadows","progress","serverStatus","twitterAuth","fontWeight","buttonLogin","App","history","useHistory","useLocation","useState","tabValue","setTabValue","setFilterLowFollowersCount","filterLowFollowersCountRef","useRef","twitterAuthenticated","setTwitterAuthenticated","twitterAuthenticatedRef","twitterAuthenticatedUser","setTwitterAuthenticatedUser","twitterAuthenticatedUserRef","userSearch","setUserSearch","nodesPerMin","maxNodesPerMin","maxNodesPerMinTime","bestNetwork","networkId","uncategorized","all","mismatched","status","setStatus","statusRef","setStatusHashtag","statusHashtagRef","search_metadata","setTweets","tweetsRef","setProgress","currentTab","setCurrentTab","currentTabRef","currentUsers","setUsers","currentUsersRef","age","rateMax","tweetsPerDay","categoryVerfied","currentUser","setCurrentUser","currentUserRef","waitForCurrentUser","setWaitForCurrentUser","waitForCurrentUserRef","text","currentHashtag","setCurrentHashtag","currentHashtagRef","useEffect","current","currentNode","newLocation","toLowerCase","pathname","replace","length","push","handleSearchNode","searchString","searchTerm","emit","searchNode","handleLoginLogout","useCallback","preventDefault","warn","node","persist","searchFilter","eventName","target","eventValue","eventChecked","eventCode","code","goForward","split","pop","goBack","shiftKey","nodeType","usersAvailable","tempUsers","shift","currentUsersAvailable","alert","nodeValid","on","password","response","debug","minFollowers","currentUserSetFlag","nodes","users","slice","action","data","userObj","startsWith","results","endCursor","disconnect","useHotkeys","Container","AppBar","Toolbar","Tabs","newValue","Tab","InputBase","placeholder","input","inputProps","onKeyPress","charCode","toLocaleString","CircularProgress","Link","href","rel","Button","UserView","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","path","document","getElementById"],"mappings":"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","file":"static/js/main.f8dd3dd6.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport socketClient from \"socket.io-client\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport AppBar from '@material-ui/core/AppBar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport InputBase from '@material-ui/core/InputBase';\nimport Link from '@material-ui/core/Link';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport './App.css';\nimport UserView from './UserView.js';\nimport HashtagView from './HashtagView.js';\nimport AuthUserView from './AuthUserView.js';\n\nconst MIN_USERS_AVAILABLE = 10;\nconst MIN_FOLLOWERS_COUNT = 5000;\n\nconst ENDPOINT = \"https://word.threeceelabs.com/view\";\nconst DEFAULT_AUTH_URL = \"http://word.threeceelabs.com/auth/twitter\";\n\nconst randomIntFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min)\n};\n\nconst randomId = randomIntFromInterval(1000000000, 9999999999)\nconst VIEWER_ID = \"viewer_\" + randomId;\n\nconst DEFAULT_VIEWER_OBJ = {\n  nodeId: VIEWER_ID,\n  userId: VIEWER_ID,\n  viewerId: VIEWER_ID,\n  screenName: VIEWER_ID,\n  type: \"viewer\",\n  namespace: \"view\",\n  timeStamp: Date.now(),\n  tags: {},\n};\n\nDEFAULT_VIEWER_OBJ.tags.type = \"viewer\";\n\nDEFAULT_VIEWER_OBJ.tags.mode = \"stream\";\nDEFAULT_VIEWER_OBJ.tags.entity = VIEWER_ID;\n\nconst viewerObj = DEFAULT_VIEWER_OBJ;\n\nconsole.log({viewerObj})\n\nlet socket = socketClient(ENDPOINT)\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    flexGrow: 1,\n    boxShadow: 0,\n  },\n  appBar: {\n    backgroundColor: 'black',\n    marginBottom: theme.spacing(2),\n    boxShadow: 0,\n  },\n  tabs: {\n    color: 'white',\n  },\n  tab: {\n    minWidth: 100,\n    width: 100,\n  },\n  toolBar: {\n    shadows: 0,\n  },\n  title: {\n    // flexGrow: 1,\n    color: 'white',\n    marginRight: theme.spacing(2),\n  },\n  progress: {\n    // flexGrow: 1,\n    color: 'white',\n    marginRight: theme.spacing(2),\n  },\n  serverStatus: {\n    fontSize: \"0.85rem\",\n    flexGrow: 1,\n    color: 'lightgray',\n    padding: theme.spacing(1),\n  },\n  twitterAuth: {\n    // backgroundColor: 'black',\n    fontSize: \"1.2rem\",\n    fontWeight: 600,\n    color: \"green\",\n    padding: theme.spacing(1),\n    marginRight: theme.spacing(2),\n  },  \n  buttonLogin: {\n    // backgroundColor: \"green\",\n    marginRight: theme.spacing(2),\n  },\n  statusBar: {\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  search: {\n    // flexGrow: 1,\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: \"white\",\n    '&:hover': {\n      backgroundColor: \"lightgray\",\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '20%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'primary',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n\n}))\n\nconst formatDateTime = (dateInput) => {\n  return new Date(dateInput).toLocaleString()\n}\n\nconst App = () => {\n\n  const history = useHistory()\n  let location = useLocation()\n\n  const classes = useStyles()\n\n  const defaultStatus = {\n    nodesPerMin: 0, \n    maxNodesPerMin: 0,\n    maxNodesPerMinTime: 0,\n    bestNetwork: {\n      networkId: \"\"\n    },\n    user: {\n      uncategorized: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        positive: 0,\n        negative: 0,\n        all: 0,\n        mismatched: 0\n      },\n      manual: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        positive: 0,\n        negative: 0,\n      },\n      auto: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        positive: 0,\n        negative: 0,\n      }\n    },\n    hashtag: {\n      uncategorized: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        positive: 0,\n        negative: 0,\n        all: 0,\n        mismatched: 0\n      },\n      manual: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        positive: 0,\n        negative: 0,\n      },\n      auto: {\n        left: 0,\n        neutral: 0,\n        right: 0,\n        positive: 0,\n        negative: 0,\n      }\n    }\n  }\n\n  const defaultUser = {\n\n    nodeId: null, \n    screenName: \"threecee\",\n    name: \"\",\n    location: \"\",\n    description: \"\",\n    profileImageUrl: \"https://pbs.twimg.com/profile_images/1205585278565527559/GrTkBpzl.jpg\",\n    bannerImage: \"\",\n    createdAt: null,\n    status: {},\n    followersCount: 0,\n    friendsCount: 0,\n    tweets: 0,\n\n    age: 0,\n    mentions: 0,\n    rate: 0,\n    rateMax: 0,\n    tweetsPerDay: 0,\n\n    lastSeen: null,\n    isBot: false,\n    following: false,\n    categoryVerfied: false,\n    category: \"none\",\n    categoryAuto: \"none\",\n  }\n\n  const defaultHashtag = {\n    nodeId: \"blacklivesmatter\",\n    text: \"BlackLivesMatter\",\n    categoryAuto: \"none\",\n    category: \"left\",\n    createdAt: 0,\n    lastSeen: 0,\n    age: 0,\n    mentions: 0,\n    rate: 0,\n    rateMax: 0,\n  }\n\n  const defaultTweets = {\n    search_metadata: {},\n    statuses: []\n  }\n\n  const [tabValue, setTabValue] = useState(0)\n\n  const [filterLowFollowersCount, setFilterLowFollowersCount] = useState(true)\n  const filterLowFollowersCountRef = useRef(filterLowFollowersCount)\n\n  const [twitterAuthenticated, setTwitterAuthenticated] = useState(false)\n  const twitterAuthenticatedRef = useRef(twitterAuthenticated)\n\n  const [twitterAuthenticatedUser, setTwitterAuthenticatedUser  ] = useState({})\n  const twitterAuthenticatedUserRef = useRef(twitterAuthenticatedUser)\n\n  const [userSearch, setUserSearch] = useState(\"\")\n\n  const [status, setStatus] = useState(defaultStatus)\n  const statusRef = useRef(status)\n\n  const [statusHashtag, setStatusHashtag] = useState(false)\n  const statusHashtagRef = useRef(statusHashtag)\n\n  const [tweets, setTweets] = useState(defaultTweets)\n  const tweetsRef = useRef(tweets)\n\n  const [progress, setProgress] = useState(\"loading ...\")\n\n  const [currentTab, setCurrentTab] = useState(\"user\")\n  const currentTabRef = useRef(currentTab)\n\n  const [currentUsers, setUsers] = useState([])\n  const currentUsersRef = useRef(currentUsers)\n\n  const [currentUser, setCurrentUser] = useState(defaultUser)\n  const currentUserRef = useRef(currentUser)\n\n  const [waitForCurrentUser, setWaitForCurrentUser] = useState(false)\n  const waitForCurrentUserRef = useRef(waitForCurrentUser)\n\n  const [currentHashtag, setCurrentHashtag] = useState(defaultHashtag)\n  const currentHashtagRef = useRef(currentHashtag)\n  \n  useEffect(() => { \n    filterLowFollowersCountRef.current = filterLowFollowersCount\n  }, [filterLowFollowersCount])\n  \n  useEffect(() => { \n    twitterAuthenticatedUserRef.current = twitterAuthenticatedUser\n  }, [twitterAuthenticatedUser])\n  \n  useEffect(() => { \n    twitterAuthenticatedRef.current = twitterAuthenticated \n  }, [twitterAuthenticated])\n  \n  useEffect(() => { \n    currentTabRef.current = currentTab \n  }, [currentTab])\n  \n  useEffect(() => { \n    waitForCurrentUserRef.current = waitForCurrentUser \n  }, [waitForCurrentUser])\n  \n  useEffect(() => { \n    currentUsersRef.current = currentUsers \n  }, [currentUsers])\n  \n  useEffect(() => { \n    currentUserRef.current = currentUser\n  }, [currentUser])\n  \n  useEffect(() => { \n    currentHashtagRef.current = currentHashtag \n  }, [currentHashtag])\n  \n  useEffect(() => { \n    statusHashtagRef.current = statusHashtag\n  }, [statusHashtag])\n  \n  useEffect(() => { \n    statusRef.current = status \n  }, [status])\n  \n  useEffect(() => { \n    tweetsRef.current = tweets \n  }, [tweets])\n  \n  const currentNode = currentTab === \"user\" ? currentUser : currentHashtag;\n\n  useEffect(() => { \n\n    console.log(`IN CURRENT NODE USE EFFECT | progress: ${progress}`)\n\n    let newLocation = \"\"\n\n    if (currentTab === \"user\"){\n      newLocation = \"/categorize/user/\" + currentNode.screenName.toLowerCase();\n    }\n    if (currentTab === \"hashtag\"){\n      newLocation = \"/categorize/hashtag/\" + currentNode.nodeId.toLowerCase();\n    }\n\n    if (progress === \"history\" && newLocation !== location.pathname){\n      history.replace(newLocation)\n      console.log(`history size: ${history.length} | new location: ${newLocation}`)\n      setProgress(\"idle\")\n    }\n\n    if (progress !== \"history\" && newLocation !== location.pathname){\n      history.push(newLocation)\n      console.log(`history size: ${history.length} | new location: ${newLocation}`)\n      setProgress(\"idle\")\n    }\n\n  }, [currentNode, history, currentTab, location.pathname, progress])\n  \n\n  const handleTabChange = (event, newValue) => {\n\n    event.preventDefault()\n    console.log({newValue})\n\n    switch (newValue){\n      case 0:\n        setCurrentTab(\"user\")\n        break\n      case 1:\n        setCurrentTab(\"hashtag\")\n        break\n      case 2:\n        setCurrentTab(\"authUser\")\n        break\n      default:\n        setCurrentTab(\"user\")\n    }\n\n    setTabValue(newValue)\n  }\n\n  const handleSearchNode = (searchString) => {\n    setProgress(progress => \"searchNode\")\n    const searchTerm = currentTab === \"user\" ? \"@\" + searchString : \"#\" + searchString\n    console.log(\"SEARCH TERM: \" + searchTerm)\n    socket.emit(\"TWITTER_SEARCH_NODE\", {searchNode: searchTerm})\n  }\n\n  const handleLoginLogout = useCallback((event) => {\n\n    event.preventDefault()\n    setProgress(progress => \"loginLogout\")\n\n    if (twitterAuthenticatedRef.current){\n      console.warn(\"LOGGING OUT\")\n      socket.emit(\"logout\", viewerObj)\n      setTwitterAuthenticated(false)\n      setTwitterAuthenticatedUser({})\n      setProgress(progress => \"idle\")\n    }\n    else{\n      console.warn(\"TWITTER_AUTHENTICATE: \" +twitterAuthenticatedRef.current + \" | URL: \" + DEFAULT_AUTH_URL)\n      window.open(DEFAULT_AUTH_URL, \"TWITTER_AUTHENTICATE\", \"_new\")\n      socket.emit(\"TWITTER_AUTHENTICATE\", viewerObj)\n    }\n  }, [])\n\n  const currentUsersAvailable = (eventName) => {\n    if (currentUsersRef.current && currentUsersRef.current.length > 0){\n      const tempUsers = [...currentUsersRef.current]\n      const user = tempUsers.shift()\n      setUsers(tempUsers)\n      console.log(\"USING CURRENT USERS | CURRENT USERS: \" + tempUsers.length + \" | @\" + user.screenName)\n      setCurrentUser(user)\n      return tempUsers.length\n    }\n    return 0;\n  }\n\n  const handleNodeChange = useCallback((event, node) => {\n\n    if (event.preventDefault !== undefined) { \n      event.preventDefault() \n    }\n\n    if (currentTabRef.current === \"user\"){\n      console.log(\"handleNodeChange | user: @\" + node.screenName)\n    }\n    else{\n      console.log(\"handleNodeChange | hashtag: #\" + node.nodeId)\n    }\n\n    if (event.persist !== undefined) { \n      event.persist() \n    }\n\n    let eventName = event.target.name || \"nop\";\n    let eventValue = event.target.value;\n    let eventChecked = event.target.checked;\n    let eventCode = event.code;\n\n    if (event.target.name === undefined && eventCode){\n\n      switch (eventCode){\n\n        case \"ArrowRight\":\n        case \"ArrowLeft\":\n          console.log(\"location.pathname: \" + location.pathname)\n\n          eventName = \"history\"\n\n          if (eventCode === \"ArrowRight\"){\n            history.goForward()\n            console.log(\"history.goForward: loc: \" + location.pathname)\n            eventValue = location.pathname.split(\"/\").pop()\n          }\n          if (eventCode === \"ArrowLeft\"){ \n            history.goBack()\n            console.log(\"history.goBack: loc: \" + location.pathname)\n            eventValue = location.pathname.split(\"/\").pop()\n          }\n          break;\n\n        case \"KeyA\":\n          eventName = \"all\"\n          break;\n\n        case \"KeyD\":\n        case \"KeyL\":\n          if (event.shiftKey){\n            eventName = \"category\"\n            eventValue = \"left\"\n          }\n          else{\n            eventName = \"left\"\n          }\n          break;\n\n        case \"KeyN\":\n          if (event.shiftKey){\n            eventName = \"category\"\n            eventValue = \"neutral\"\n          }\n          else{\n            eventName = \"neutral\"\n          }\n          break;\n\n        case \"KeyR\":\n          if (event.shiftKey){\n            eventName = \"category\"\n            eventValue = \"right\"\n          }\n          else{\n            eventName = \"right\"\n          }\n          break;\n\n        case \"KeyHyphen\":\n          if (event.shiftKey){\n            eventName = \"category\"\n            eventValue = \"negative\"\n          }\n          else{\n            eventName = \"negative\"\n          }\n          break;\n\n        case \"KeyEquals\":\n          if (event.shiftKey){\n            eventName = \"category\"\n            eventValue = \"positive\"\n          }\n          else{\n            eventName = \"positive\"\n          }\n          break;\n\n        case \"KeyI\":\n        case \"KeyX\":\n          if (event.shiftKey){\n            eventName = \"ignored\"\n            eventChecked = !node.ignored\n          }\n          break;\n\n        case \"KeyV\":\n          if (event.shiftKey){\n            eventName = \"catVerified\"\n            eventChecked = !node.categoryVerified\n          }\n          break;\n\n        case \"KeyB\":\n          if (event.shiftKey){\n            eventName = \"isBot\"\n            eventChecked = !node.isBot\n          }\n          break;\n\n        default:\n      }\n    }\n\n    let searchFilter;\n\n    if (node.nodeType === \"user\"){\n      searchFilter = \"@?\";\n    }\n    else{\n      searchFilter = \"#?\";\n    }\n\n    setProgress(eventName)\n\n    let usersAvailable = 0;\n\n    switch (eventName){\n\n      case \"nop\":\n        setProgress(\"idle\")\n        break;\n\n      case \"history\":\n        if (node.nodeType === \"user\"){\n          console.log(\"handleNodeChange | history | @\" + node.screenName + \" | name: \" + eventName + \" | value: \" + eventValue)\n          socket.emit(\"TWITTER_SEARCH_NODE\", {searchNode: \"@\" + eventValue})\n        }\n        else{\n          console.log(\"handleNodeChange | history | #\" + node.nodeId + \" | name: \" + eventName + \" | value: \" + eventValue)\n          socket.emit(\"TWITTER_SEARCH_NODE\", {searchNode: \"#\" + eventValue})\n        }\n        break;\n\n      case \"all\":\n      case \"left\":\n      case \"neutral\":\n      case \"right\":\n      case \"positive\":\n      case \"negative\":\n\n        searchFilter += eventName\n\n        usersAvailable = currentUsersAvailable(eventName)\n\n        if (usersAvailable === 0 && !waitForCurrentUserRef.current){\n          console.log(\"NO USERS | usersAvailable: \" + usersAvailable)\n          console.log(\"SET WAIT FOR CURRENT USER | : \"  + waitForCurrentUserRef.current)\n          setWaitForCurrentUser(true)\n        }\n\n        if (usersAvailable < MIN_USERS_AVAILABLE){\n          console.log(\"GET MORE USERS | usersAvailable: \" + usersAvailable)\n          socket.emit(\"TWITTER_SEARCH_NODE\", {searchNode: searchFilter})\n        }\n\n        break\n\n      case \"mismatch\":\n        if (node.nodeType === \"user\"){\n          socket.emit(\"TWITTER_SEARCH_NODE\", {searchNode: \"@?mm\"})\n        }\n        break\n\n      case \"category\":\n        if (twitterAuthenticatedRef.current){\n          socket.emit(\"TWITTER_CATEGORIZE_NODE\", {\n            categorizedBy: twitterAuthenticatedUserRef.current.screenName,\n            category: eventValue,\n            following: true,\n            node: node,\n          })\n        }\n        else{\n          alert(\"NOT AUTHENTICATED\")\n          setProgress(\"idle\")\n          return;\n        }\n        break\n\n      case \"isBot\":\n      case \"following\":\n      case \"catVerified\":\n      case \"ignored\":\n\n        if (!twitterAuthenticatedRef.current){\n          alert(\"NOT AUTHENTICATED\")\n          setProgress(\"idle\")\n          return;\n        }\n\n        if (eventName === \"ignored\"){\n          if (eventChecked){\n            socket.emit(\"TWITTER_IGNORE\", node)\n          }\n          else{\n            socket.emit(\"TWITTER_UNIGNORE\", node)\n          }\n          break\n        }\n\n        if (node.nodeType === \"user\"){\n\n          if (eventName === \"bot\"){\n            if (eventChecked){\n              socket.emit(\"TWITTER_BOT\", node)\n            }\n            else{\n              socket.emit(\"TWITTER_UNBOT\", node)\n            }\n          }\n\n          if (eventName === \"following\"){\n            if (eventChecked){\n              socket.emit(\"TWITTER_FOLLOW\", node)\n            }\n            else{\n              socket.emit(\"TWITTER_UNFOLLOW\", node)\n            }\n          }\n\n          if (eventName === \"catVerified\"){\n            if (eventChecked){\n              socket.emit(\"TWITTER_CATEGORY_VERIFIED\", node)\n            }\n            else{\n              socket.emit(\"TWITTER_CATEGORY_UNVERIFIED\", node)\n            }\n          }\n\n        }\n\n        break\n\n      default:\n        console.log(\"handleNodeChange: UNKNOWN NAME: \" + eventName + \" | VALUE: \" + eventValue)\n        console.log({event})\n    }\n    \n  }, [location, history])\n\n  const nodeValid = (node) => {\n\n    if (node === undefined) return false\n    if (node.nodeId === undefined) return false\n\n    if (node.nodeType === \"user\"){\n      if (node.screenName === undefined) return false\n    } \n\n    return true\n  }\n\n  useEffect(() => {\n    if (currentTabRef.current === \"user\"){\n      console.log(\"user loc:  \" + location.pathname)\n    }\n  }, [location, tabValue])\n\n  useEffect(() => {\n    if (currentTabRef.current === \"hashtag\"){\n      console.log(\"hashtag loc:  \" + location.pathname)\n    }\n  }, [location, tabValue])\n\n  useEffect(() => {\n    if (currentTabRef.current === \"authUser\"){\n      console.log(\"authUser loc:  \" + location.pathname)\n    }\n  }, [location, tabValue])\n\n  useEffect(() => {\n\n    socket.on(\"connect\", ()=>{\n\n      console.log(\"CONNECTED: \" + socket.id)\n\n      setProgress(progress => \"authentication\")\n\n      socket.emit(\"authentication\", {\n        namespace: \"view\",\n        userId: \"test\",\n        password: \"0123456789\",\n      })\n    })\n\n    socket.on(\"TWITTER_USERS\", (response) => {\n\n      console.debug(\"RX TWITTER_USERS\")\n\n      let tempUsers = []\n      let minFollowers = filterLowFollowersCountRef.current ? 5000 : 0;\n      let currentUserSetFlag = false;\n\n      if (response.nodes && response.nodes.length > 0) {\n\n        console.debug(\"RX USERS: \" + response.nodes.length)\n\n        tempUsers = [...currentUsersRef.current];\n\n        for(const user of response.nodes){\n          if (user.screenName && user.screenName !== \"\"){\n            if (filterLowFollowersCountRef.current && user.followersCount < MIN_FOLLOWERS_COUNT){\n              console.log(\"LESS THAN MIN FOLLOWERS ... SKIPPING | @\" + user.screenName + \" | FOLLOWERS: \" + user.followersCount)\n            }\n            else {\n              console.log(\"+++ USER | @\" + user.screenName + \" | FOLLOWERS: \" + user.followersCount)\n              if (!currentUserSetFlag && waitForCurrentUserRef.current) {\n                console.log(\"WAIT FOR CURRENT USER | SET CURRENT USER | @\" + user.screenName + \" | FOLLOWERS: \" + user.followersCount)\n                currentUserSetFlag = true;\n                setCurrentUser(user)\n                setWaitForCurrentUser(false)\n              }\n              else{\n                tempUsers.push(user)\n              }\n            }\n          }\n        }\n        console.debug(\"TOTAL USERS: \" + tempUsers.length)\n        setUsers(users => [...tempUsers])\n      }\n\n      if (tempUsers.length < MIN_USERS_AVAILABLE){\n        socket.emit(\"TWITTER_SEARCH_NODE\", {searchNode: response.searchNode, minFollowers: minFollowers})\n      }\n\n      setProgress(progress => \"idle\")\n      setStatus(status => response.stats)\n    })\n\n    socket.on(\"SET_TWITTER_USER\", (response) => {\n\n      console.debug(\"RX SET_TWITTER_USER\")\n\n      if (response.nodes) {\n        setUsers(users => [...users, ...response.nodes])\n        console.debug(\"RX nodes: \" + response.nodes.length)\n      }\n      \n      if (nodeValid(response.node)) {\n        setCurrentUser(currentUser => response.node)\n        console.debug(\"new twitter user: @\" + response.node.screenName)\n        // if (currentTabRef.current === \"user\"){\n        //   history.push(\"/categorize/user/\" + response.node.screenName.toLowerCase())\n        // }\n      }\n\n      setProgress(progress => \"idle\")\n      setStatus(status => response.stats)\n    })\n\n    socket.on(\"TWITTER_SEARCH_NODE_UNKNOWN_MODE\", (response) => {\n      console.debug(\"RX TWITTER_SEARCH_NODE_UNKNOWN_MODE\")\n      console.debug({response})\n      setProgress(progress => \"idle\")\n      setStatus(status => response.stats)\n    })\n\n    socket.on(\"TWITTER_HASHTAG_NOT_FOUND\", (response) => {\n      console.debug(\"RX TWITTER_HASHTAG_NOT_FOUND\")\n      console.debug({response})\n      setStatusHashtag(statusHashtag => \"notFound\")\n      setCurrentHashtag(currentHashtag => {\n        return {nodeId: response.searchNode.slice(1)}\n      }) \n      setTweets({ search_metadata: {}, statuses: [] })\n      setProgress(progress => \"idle\")\n      setStatus(status => response.stats)\n    })\n\n    socket.on(\"SET_TWITTER_HASHTAG\", (response) => {\n\n      console.debug(\"RX SET_TWITTER_HASHTAG\")\n\n      if (nodeValid(response.node)) { \n        setStatusHashtag(statusHashtag => \"found\")\n        setCurrentHashtag(currentHashtag => response.node) \n        console.debug(\"new: #\" + response.node.nodeId)\n        if (response.tweets) {\n          console.debug(\"RX SET_TWITTER_HASHTAG | SET TWEETS: \" + response.tweets.statuses.length)\n          setTweets(tweets => response.tweets)\n        }\n      }\n      else{\n        setStatusHashtag(statusHashtag => \"invalid\")\n        console.debug(\"INVALID HT NODE | RESULTS\")\n        console.debug({response})\n      }\n\n      setProgress(progress => \"idle\")\n      setStatus(status => response.stats)\n    })\n\n    socket.on(\"action\", (action) => {\n\n      switch (action.type){\n\n        case \"user\":\n            setCurrentUser(currentUser => action.data)\n            console.log(\"USER: @\" + action.data.screenName + \" | \" + action.data.profileImageUrl)\n          break\n\n        case \"hashtag\":\n            console.log(\"HT: #\" + action.data.text)\n          break\n\n        case \"stats\":\n            setStatus(() => action.data)\n          break\n\n        default:\n      }\n\n    })   \n\n    socket.on(\"authenticated\", function () {\n      setProgress(progress => \"idle\")\n      console.debug(\"AUTHENTICATED | \" + socket.id)\n      socket.emit(\"TWITTER_SEARCH_NODE\", {searchNode: \"@?all\"})\n      socket.emit(\"TWITTER_SEARCH_NODE\", {searchNode: \"@threecee\"})\n      socket.emit(\"TWITTER_SEARCH_NODE\", {searchNode: \"#blacklivesmatter\"})\n    })\n\n    socket.on(\"USER_AUTHENTICATED\", function (userObj) {\n      setProgress(progress => \"idle\")\n      setTwitterAuthenticated(() => true)\n      setTwitterAuthenticatedUser(twitterAuthenticatedUser => userObj)\n      console.log(\"RX TWITTER USER_AUTHENTICATED | USER: @\" + userObj.screenName)\n    })\n\n    socket.on(\"TWITTER_USER_NOT_FOUND\", (response) => {\n\n      console.debug(\"RX TWITTER_USER_NOT_FOUND\")\n      console.debug(response)\n\n      setStatus(status => response.stats)\n\n      if (response.searchNode.startsWith(\"@?\") && response.results && !response.results.endCursor){\n        console.debug(\"RETRY NEXT UNCAT: \" + response.searchNode)\n        socket.emit(\"TWITTER_SEARCH_NODE\", {searchNode: response.searchNode})\n      }\n      else{\n        setProgress(progress => \"idle\")\n      }\n    })\n    \n    setProgress(\"idle\")\n\n    return () => socket.disconnect()\n\n  }, [])\n\n  // history\n  // - back\n  useHotkeys('left', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // - forward\n  useHotkeys('right', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // all\n  useHotkeys('A', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // left\n  useHotkeys('L', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+L', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('D', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+D', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // right\n  useHotkeys('R', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+R', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // neutral\n  useHotkeys('N', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+N', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // negative\n  useHotkeys('-', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+-', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // positive\n  useHotkeys('=', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+=', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // ignore toggle\n  useHotkeys('shift+I', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  useHotkeys('shift+X', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // bot toggle\n  useHotkeys('shift+B', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  // verified toggle\n  useHotkeys('shift+V', (event) => handleNodeChange(event, currentNode), {}, [currentNode])\n  \n  const handleChangeSearch = (event) => {\n    console.log(\"handleChangeSearch: \" + event.target.value)\n    setUserSearch(event.target.value)\n  }\n\n  const handleKeyPress = (event) => {\n    if (event.charCode === 13) { // enter key pressed\n      console.log(\"ENTER\")\n      handleSearchNode(userSearch)\n    }\n  }\n\n  const handleFilterChange = (event) => {\n    event.persist()\n    setFilterLowFollowersCount(filterLowFollowersCountRef.current ? false : true)\n    console.log(`NAME: ${event.target.name} | CHECKED: ${event.target.checked} | filterLowFollowersCount: ${filterLowFollowersCount}`)\n  }\n\n  const displayTab = (tab) => {\n    if (tab === \"authUser\"){\n      return <AuthUserView authenticated={twitterAuthenticated} authUser={twitterAuthenticatedUser} stats={status}/>\n    }\n    else if (tab === \"user\"){\n      return <UserView \n        user={currentUser} \n        stats={status}\n        filterLowFollowersCount={filterLowFollowersCount}\n        handleNodeChange={handleNodeChange} \n        handleSearchNode={handleSearchNode}\n        handleFilterChange={handleFilterChange}\n      />\n    }\n    else{\n      return <HashtagView hashtag={currentHashtagRef.current} statusHashtag={statusHashtagRef.current} stats={statusRef.current} tweets={tweetsRef.current} handleNodeChange={handleNodeChange} handleSearchNode={handleSearchNode}/>\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Container component=\"main\" maxWidth={false}>\n        <AppBar  className={classes.appBar} position=\"static\">\n          <Toolbar className={classes.toolBar}>\n\n            <Typography className={classes.title}>\n              CATEGORIZE\n            </Typography>\n            \n            <Tabs \n              className={classes.tabs}\n              value={tabValue} \n              onChange={handleTabChange}\n            >\n              <Tab className={classes.tab} label=\"User\"/>\n              <Tab className={classes.tab} label=\"Hashtag\"/>\n              <Tab className={classes.tab} label=\"Account\"/>\n            </Tabs>\n\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon color=\"primary\"/>\n              </div>\n              <InputBase\n                placeholder={currentTab === \"user\" ? \"user search...\" : \"hashtag search...\"}\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                inputProps={{ 'aria-label': 'search' }}\n                value={userSearch}\n                onKeyPress={handleKeyPress}\n                onChange={handleChangeSearch}\n              />\n            </div>\n            \n            <Typography  className={classes.serverStatus}>\n              {status.nodesPerMin} NPM ( max: {status.maxNodesPerMin} at {formatDateTime(status.maxNodesPerMinTime)} )\n            </Typography>\n\n            {progress !== \"idle\" ? <><Typography className={classes.progress}>{`${progress} ...`}</Typography> <CircularProgress className={classes.progress}>{progress}</CircularProgress></> : <div className={classes.progress}></div>}\n\n            <Link\n              className={classes.twitterAuth}\n              href={\"http://twitter.com/\" + twitterAuthenticatedUser.screenName}\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              {twitterAuthenticatedUser.screenName ? \"@\" + twitterAuthenticatedUser.screenName : \"\"}\n            </Link>\n\n            <Button \n              className={classes.buttonLogin}\n              variant=\"contained\" \n              color={twitterAuthenticated ? \"secondary\" : \"primary\"} \n              size=\"small\" \n              onClick={event => { handleLoginLogout(event)}} \n              name=\"login\"\n              label=\"login\"\n            >\n              {twitterAuthenticated ? \"LOGOUT\" : \"LOGIN TWITTER\"}\n            </Button>\n\n          </Toolbar>\n        </AppBar>\n        {displayTab(currentTab)}\n      </Container>\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport { green, grey } from '@material-ui/core/colors';\nimport clsx from 'clsx';\nimport { Timeline } from 'react-twitter-widgets'\nimport Duration from 'duration';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Grid from '@material-ui/core/Grid';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\nimport Select from '@material-ui/core/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n  },\n  body: {\n    fontSize: 11,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    backgroundColor: grey,\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    border: 0,\n    flexGrow: 2,\n  },\n  appBar: {\n    border: 0,\n    backgroundColor: 'white',\n    marginBottom: theme.spacing(1),\n  },\n  grid: {\n    border: 0,\n    display: 'flex',\n    alignItems: 'stretch',\n  },\n  gridItem: {\n    border: 0,\n    margin: theme.spacing(1),\n  },\n  gridHeader: {\n    padding: theme.spacing(1),\n    border: 0,\n    marginBottom: theme.spacing(1),\n  },\n  paper: {\n    padding: theme.spacing(1),\n    outlined: true,\n    variant: 'outlined',\n  },\n  timelineError: {\n    textAlign: \"center\",\n    border: '2px solid red',\n    color: 'red',\n    backgroundColor: 'white',\n  },\n  card: {\n    alignSelf: \"center\",\n  },\n  profileImage: {\n    marginBottom: theme.spacing(1),\n  },\n  bannerImage: {\n    marginBottom: theme.spacing(1),\n  },\n  icon: {\n    borderRadius: '50%',\n    width: 16,\n    height: 16,\n    boxShadow: 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\n    backgroundColor: '#f5f8fa',\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\n    '$root.Mui-focusVisible &': {\n      outline: '2px auto rgba(19,124,189,.6)',\n      outlineOffset: 2,\n    },\n    'input:hover ~ &': {\n      backgroundColor: '#ebf1f5',\n    },\n    'input:disabled ~ &': {\n      boxShadow: 'none',\n      background: 'rgba(206,217,224,.5)',\n    },\n  },\n  checkedIcon: {\n    backgroundColor: '#137cbd',\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\n    '&:before': {\n      display: 'block',\n      width: 16,\n      height: 16,\n      backgroundImage: 'radial-gradient(#fff,#fff 28%,transparent 32%)',\n      content: '\"\"',\n    },\n    'input:hover ~ &': {\n      backgroundColor: '#106ba3',\n    },\n  },\n  selectCategory: {\n    border: '1px solid darkgray',\n    borderRadius: theme.shape.borderRadius,\n    fontSize: '0.9rem',\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  radioGroupCategory: {\n    maxWidth: \"90%\",\n    fontSize: '0.5rem',\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n  },\n  checkbox: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n  radioButtonLabel: {\n    fontSize: '0.9rem'\n  },\n  radioButton: {\n  },\n  table: {\n    maxWidth: \"95%\",\n    align: 'center',\n    padding: theme.spacing(1),\n  },\n  tableHead: {\n    backgroundColor: '#ddeeee',\n  },\n  tableCell: {\n  },\n  tableCategorized: {\n    backgroundColor: '#ddeeee',\n  },\n  tableRowGreen: {\n    backgroundColor: 'lightgreen',\n  },\n  statusBar: {\n    raised: false,\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    color: 'blue',\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: \"white\",\n    '&:hover': {\n      backgroundColor: \"#ddeeee\",\n    },\n    marginRight: theme.spacing(1),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'primary',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n\n  buttonGroupLabel: {\n    color: 'blue',\n    marginRight: theme.spacing(1),\n  },\n  buttonAll: {\n    color: 'black',\n  },\n  buttonLeft: {\n    color: 'blue',\n  },\n  buttonNeutral: {\n    color: 'gray',\n  },\n  buttonRight: {\n    color: 'red',\n  },\n  buttonMismatch: {\n    margin: 5\n  },\n  autoCategory:{\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n    marginBottom: theme.spacing(1),\n  },\n  category: {\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n\n  left: {\n    backgroundColor: 'blue',\n    color: 'white',\n  },\n  neutral: {\n    backgroundColor: 'darkgray',\n    color: 'white',\n  },\n  right: {\n    backgroundColor: 'red',\n    color: 'white',\n  },\n  positive: {\n    backgroundColor: 'green',\n    color: 'white',\n  },\n  negative: {\n    backgroundColor: 'yellow',\n    color: 'black',\n  },\n  none: {\n    backgroundColor: 'white',\n    color: 'black',\n  },\n  ignored: {\n    backgroundColor: 'yellow',\n    color: 'black',\n  },\n\n}));\n\nconst formatDate = (dateInput) => {\n  return new Date(dateInput).toLocaleDateString(\n    'en-gb',\n    {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }\n  );\n}\n\nconst defaultProfileImage = \"logo192.png\"\nconst defaultBannerImage = \"logo192.png\"\n\nconst User = (props) => {\n\n  // const [filterLowFollowersCount, setFilterLowFollowersCount] = useState(true)\n  \n  const classes = useStyles();\n\n  const createdAt = formatDate(props.user.createdAt)\n  const lastSeen = formatDate(props.user.lastSeen)\n \n  const lastSeenDuration = new Duration(new Date(props.user.lastSeen)).toString(1, 4)\n  const twitterAge = props.user.createdAt ? new Duration(new Date(props.user.createdAt)) : new Duration(new Date())\n  const twitterAgeString = twitterAge.toString(1, 4)\n\n  const tweetRate = twitterAge.days > 0 ? Math.ceil(props.user.statusesCount/twitterAge.days) : 0;\n\n  const openUserTwitterPage = () => {\n    console.log(\"open twitter\")\n    window.open(`http://twitter.com/${props.user.screenName || null}`, \"_blank\") //to open new page\n  }\n\n  const getCategoryClass = (category) => {\n    switch (category){\n      case \"left\":\n      case \"neutral\":\n      case \"right\":\n      case \"positive\":\n      case \"negative\":\n      case \"ignored\":\n        return classes[category]\n      default:\n        return classes.none\n    }\n  }\n\n  return (\n    <>\n      <Grid className={classes.grid}>\n          <Grid item className={classes.gridItem} xs={3}>\n            <Card className={classes.card} variant=\"outlined\">\n\n              <CardContent onClick={openUserTwitterPage}>\n                  <Typography \n                    className={clsx(classes.category, props.user.ignored ? getCategoryClass(\"ignored\") : getCategoryClass(props.user.category))} \n                    variant=\"h6\"\n                  >\n                    {props.user.name}\n                  </Typography>\n                  <Typography variant=\"h6\">@{props.user.screenName} </Typography>\n              </CardContent>\n              <CardContent >\n                  <Typography>{props.user.description}</Typography>\n              </CardContent>\n\n              <CardMedia\n                className={classes.profileImage}\n                src={props.user.profileImageUrl || defaultProfileImage}\n                component=\"img\"\n                onError={e => {}}              \n              />\n              <CardMedia \n                className={classes.bannerImage} \n                src={props.user.bannerImageUrl || defaultBannerImage} \n                component=\"img\"\n                onError={e => {}}              \n              />\n            </Card>\n          </Grid>\n          <Grid item className={classes.gridItem} xs={3} >\n            <Paper className={classes.paper} elevation={0} variant=\"outlined\" >\n              <Timeline\n                dataSource={{\n                  sourceType: 'profile',\n                  screenName: props.user.screenName\n                }}\n                options={{width: '100%', height: '800'}}\n                renderError={(_err) => <div className={classes.timelineError}><p>COULD NOT LOAD USER TWEETS</p></div>}\n              />\n            </Paper>\n          </Grid>\n          <Grid item className={classes.gridItem} xs={3}>\n            <Paper className={classes.paper} elevation={0} variant=\"outlined\" >\n              <Typography\n                className={classes.gridHeader} \n              >\n                STATS\n              </Typography>\n              <TableContainer className={classes.table} >\n                <Table size=\"small\">\n                  <TableHead>\n                    <StyledTableRow className={classes.tableHead}>\n                      <StyledTableCell  colSpan={2}>@{props.user.screenName}</StyledTableCell>\n                    </StyledTableRow>\n                  </TableHead>\n                  <TableBody>\n                    <StyledTableRow>\n                      <StyledTableCell>Twitter ID</StyledTableCell><StyledTableCell align=\"right\">{props.user.nodeId}</StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow>\n                      <StyledTableCell>Location</StyledTableCell><StyledTableCell align=\"right\">{props.user.location}</StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow>\n                      <StyledTableCell>Created</StyledTableCell><StyledTableCell align=\"right\">{createdAt}</StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow>\n                      <StyledTableCell>Twitter age</StyledTableCell><StyledTableCell align=\"right\">{twitterAgeString}</StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow className={props.user.followersCount > 5000 ? classes.tableRowGreen : null}>\n                      <StyledTableCell>Followers</StyledTableCell><StyledTableCell align=\"right\">{props.user.followersCount}</StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow>\n                      <StyledTableCell>Friends</StyledTableCell><StyledTableCell align=\"right\">{props.user.friendsCount}</StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow>\n                      <StyledTableCell>Tweets</StyledTableCell><StyledTableCell align=\"right\">{props.user.statusesCount}</StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow>\n                      <StyledTableCell>Tweets/day</StyledTableCell><StyledTableCell align=\"right\">{tweetRate}</StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow>\n                      <StyledTableCell>Active</StyledTableCell><StyledTableCell align=\"right\">{lastSeen} ({lastSeenDuration} ago)</StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow>\n                      <StyledTableCell>Mentions</StyledTableCell><StyledTableCell align=\"right\">{props.user.mentions}</StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow>\n                      <StyledTableCell>Mentions/hour</StyledTableCell><StyledTableCell align=\"right\">{props.user.rate ? 60*props.user.rate.toFixed(2) : 0}</StyledTableCell>\n                    </StyledTableRow>\n                  </TableBody>\n                </Table>\n                <Table size=\"small\">\n                  <TableHead>\n                    <StyledTableRow className={classes.tableHead}>\n                      <StyledTableCell colSpan={3}>ALL USERS</StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow>\n                      <StyledTableCell>CAT</StyledTableCell>\n                      <StyledTableCell align=\"right\">MAN</StyledTableCell>\n                      <StyledTableCell align=\"right\">AUTO</StyledTableCell>\n                    </StyledTableRow>\n                  </TableHead>\n                  <TableBody>\n                    <StyledTableRow > \n                      <StyledTableCell>LEFT</StyledTableCell>\n                      <StyledTableCell align=\"right\">{props.stats.user.manual.left}</StyledTableCell>\n                      <StyledTableCell align=\"right\">{props.stats.user.auto.left}</StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow>\n                      <StyledTableCell >RIGHT</StyledTableCell>\n                      <StyledTableCell align=\"right\">{props.stats.user.manual.right}</StyledTableCell>\n                      <StyledTableCell align=\"right\">{props.stats.user.auto.right}</StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow>\n                      <StyledTableCell >NEUTRAL</StyledTableCell>\n                      <StyledTableCell align=\"right\">{props.stats.user.manual.neutral}</StyledTableCell>\n                      <StyledTableCell align=\"right\">{props.stats.user.auto.neutral}</StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow>\n                      <StyledTableCell >POSITIVE</StyledTableCell>\n                      <StyledTableCell align=\"right\">{props.stats.user.manual.positive}</StyledTableCell>\n                      <StyledTableCell align=\"right\">{props.stats.user.auto.positive}</StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow>\n                      <StyledTableCell >NEGATIVE</StyledTableCell>\n                      <StyledTableCell align=\"right\">{props.stats.user.manual.negative}</StyledTableCell>\n                      <StyledTableCell align=\"right\">{props.stats.user.auto.negative}</StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow>\n                      <StyledTableCell >NONE</StyledTableCell>\n                      <StyledTableCell align=\"right\">{props.stats.user.manual.none}</StyledTableCell>\n                      <StyledTableCell align=\"right\">{props.stats.user.auto.none}</StyledTableCell>\n                    </StyledTableRow>\n                  </TableBody>\n                </Table>\n              </TableContainer>          \n            </Paper>\n          </Grid>\n          <Grid item className={classes.gridItem} xs={2}>\n            <Paper className={classes.paper}  elevation={0} variant=\"outlined\">\n              <Typography\n                className={classes.gridHeader} \n              >\n                SETTINGS\n              </Typography>\n              <FormGroup  align=\"center\">\n                <FormControl align=\"center\">\n                  <Select\n                    labelId=\"category-manual-label\"\n                    id=\"category-manual\"\n                    name=\"category\"\n                    className={clsx(classes.selectCategory, getCategoryClass(props.user.category))} \n                    value={props.user.category || \"none\"}\n                    onChange={(event) => props.handleNodeChange(event, props.user)}\n                  >\n                    <MenuItem dense={true} value={\"none\"} >NONE</MenuItem>\n                    <MenuItem dense={true} value={\"left\"} >LEFT</MenuItem>\n                    <MenuItem dense={true} value={\"neutral\"}>NEUTRAL</MenuItem>\n                    <MenuItem dense={true} value={\"right\"}>RIGHT</MenuItem>\n                    <MenuItem dense={true} value={\"positive\"}>POSITIVE</MenuItem>\n                    <MenuItem dense={true} value={\"negative\"}>NEGATIVE</MenuItem>\n\n                  </Select>\n                </FormControl>\n\n                <Typography\n                  className={clsx(classes.selectCategory, getCategoryClass(props.user.categoryAuto))} \n                >\n                  AUTO: {props.user.categoryAuto ? props.user.categoryAuto.toUpperCase() : \"NONE\"}\n                </Typography>\n\n                <FormControl component=\"fieldset\" className={classes.radioGroupCategory} size=\"small\">\n                  <FormControlLabel\n                    control={<Checkbox className={classes.checkbox} size=\"small\" checked={props.user.following || false} onChange={(event) => props.handleNodeChange(event, props.user)} name=\"following\" />}\n                    label={<Typography className={classes.radioButtonLabel}>FOLLOWING</Typography>}\n                  />\n                  <FormControlLabel\n                    control={<Checkbox className={classes.checkbox} size=\"small\" checked={props.user.categoryVerified || false} onChange={(event) => props.handleNodeChange(event, props.user)} name=\"catVerified\" />}\n                    label={<Typography className={classes.radioButtonLabel}>VERIFIED</Typography>}\n                  />\n                  <FormControlLabel\n                    control={<Checkbox className={classes.checkbox} size=\"small\" checked={props.user.ignored || false} onChange={(event) => props.handleNodeChange(event, props.user)} name=\"ignored\" />}\n                    label={<Typography className={classes.radioButtonLabel}>IGNORED</Typography>}\n                  />\n                  <FormControlLabel\n                    control={<Checkbox className={classes.checkbox} size=\"small\" checked={props.user.isBot || false} onChange={(event) => props.handleNodeChange(event, props.user)} name=\"isBot\" />}\n                    label={<Typography className={classes.radioButtonLabel}>BOT</Typography>}\n                  />\n                </FormControl>\n\n                <FormControl component=\"fieldset\" className={classes.radioGroupCategory} size=\"small\">\n                  <FormControlLabel\n                    control={<Checkbox className={classes.checkbox} size=\"small\" checked={props.filterLowFollowersCount || false} onChange={(event) => props.handleFilterChange(event)} name=\"filterLowFollowersCount\" />}\n                    label={<Typography className={classes.radioButtonLabel}>FILTER LOW FOLLOWERS</Typography>}\n                  />\n                </FormControl>\n\n              </FormGroup>\n            </Paper>\n          </Grid>\n        </Grid>\n    </>\n  );\n}\n\nexport default User;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Tweet } from 'react-twitter-widgets'\n\nimport Duration from 'duration';\nimport { green } from '@material-ui/core/colors';\n\n// import AppBar from '@material-ui/core/AppBar';\n// // import Box from '@material-ui/core/Box';\n// import Button from '@material-ui/core/Button';\n// import ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Card from '@material-ui/core/Card';\n// import CardActionArea from '@material-ui/core/CardActionArea';\n// import CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n// import CardHeader from '@material-ui/core/CardHeader';\n// import CardMedia from '@material-ui/core/CardMedia';\n// import CheckBoxIcon from '@material-ui/icons/CheckBox';\n// import CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\n// import FormLabel from '@material-ui/core/FormLabel';\nimport Grid from '@material-ui/core/Grid';\n// import IconButton from '@material-ui/core/IconButton';\n// import InputBase from '@material-ui/core/InputBase';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\n// import MenuIcon from '@material-ui/icons/Menu';\n// import Paper from '@material-ui/core/Paper';\n// import Radio from '@material-ui/core/Radio';\n// import RadioGroup from '@material-ui/core/RadioGroup';\n// import SearchIcon from '@material-ui/icons/Search';\nimport Select from '@material-ui/core/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\n// import TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n// import Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TableHead } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 2,\n  },\n  grid: {\n    display: 'flex',\n  },\n  gridItem: {\n    margin: 5,\n  },  \n  card: {\n    raised: false,\n    maxWidth: 400,\n  },\n  table: {\n  },\n  tableRowGreen: {\n    backgroundColor: 'lightgreen',\n  },\n  appBar: {\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  statusBar: {\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    color: 'blue',\n  },\n  search: {\n    flexGrow: 1,\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: \"white\",\n    '&:hover': {\n      backgroundColor: \"lightgray\",\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'primary',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  selectCategory: {\n    fontSize: '0.5rem',\n    backgroundColor: '#ddeeee',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  radioGroupCategory: {\n    fontSize: '0.5rem',\n    backgroundColor: '#ddeeee',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n  },\n  checkbox: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n  radioButtonLabel: {\n    fontSize: '0.9rem'\n  },\n  radioButton: {\n  },\n\n  buttonGroupLabel: {\n    color: 'blue',\n    marginRight: theme.spacing(1),\n  },\n  buttonAll: {\n    color: 'black',\n  },\n  buttonLeft: {\n    color: 'blue',\n  },\n  buttonNeutral: {\n    color: 'gray',\n  },\n  buttonRight: {\n    color: 'red',\n  },\n  buttonMismatch: {\n    margin: 5\n  },\n\n  autoCategory:{\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n  },\n\n  category: {\n    // fontSize: fontSizeCategory,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n\n  left: {\n    backgroundColor: 'blue',\n    color: 'white',\n  },\n  neutral: {\n    backgroundColor: 'darkgray',\n    color: 'white',\n  },\n  right: {\n    backgroundColor: 'red',\n    color: 'white',\n  },\n  positive: {\n    backgroundColor: 'green',\n    color: 'white',\n  },\n  negative: {\n    backgroundColor: 'yellow',\n    color: 'black',\n  },\n  none: {\n    backgroundColor: 'lightgray',\n    color: 'black',\n  },\n  ignored: {\n    backgroundColor: 'yellow',\n    color: 'black',\n  },\n\n}));\n\nconst formatDate = (dateInput) => {\n  return new Date(dateInput).toLocaleDateString(\n    'en-gb',\n    {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }\n  );\n}\n\nconst HashtagView = (props) => {\n\n  const classes = useStyles();\n\n  const createdAt = props.hashtag.createdAt ? formatDate(props.hashtag.createdAt) : \"---\"\n  const lastSeen = props.hashtag.lastSeen ? formatDate(props.hashtag.lastSeen) : \"---\"\n \n  const lastSeenDuration = props.hashtag.lastSeen ? new Duration(new Date(props.hashtag.lastSeen)).toString(1, 4) : \"---\"\n  const twitterAge = props.hashtag.createdAt ? new Duration(new Date(props.hashtag.createdAt)) : \"---\"\n  const twitterAgeString = props.hashtag.createdAt ? twitterAge.toString(1, 4) : \"---\"\n\n  const openHashtagTwitterPage = () => {\n    console.log(\"open twitter\")\n    window.open(`https://twitter.com/search?f=tweets&q=%23${props.hashtag.nodeId || null}`, \"_blank\") //to open new page\n  }\n\n  const displayTweets = (tweets) => {\n    if (!tweets || tweets === undefined || tweets.statuses === undefined) { return <></>}\n    return tweets.statuses.map((tweet) => {\n      return <Tweet key={tweet.id_str} tweetId={tweet.id_str} options={{ width: \"400\" }} />\n    })\n  }\n\n  const getCategoryClass = (category) => {\n    switch (category){\n      case \"left\":\n      case \"neutral\":\n      case \"right\":\n      case \"positive\":\n      case \"negative\":\n      case \"ignored\":\n        return classes[category]\n      default:\n        return classes.none\n    }\n  }\n\n  return (\n    <>\n      <Grid className={classes.grid}>\n        <Grid item className={classes.gridItem} xs={3}>\n          <Card className={classes.card} variant=\"outlined\">\n            <CardContent onClick={openHashtagTwitterPage}>\n              <Typography \n                className={clsx(classes.category, props.hashtag.ignored ? getCategoryClass(\"ignored\") : getCategoryClass(props.hashtag.category))} \n                variant=\"h6\"\n              >\n                #{props.statusHashtag === \"notFound\" ? props.hashtag.nodeId + \" NOT FOUND\" : props.hashtag.nodeId}\n            </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item className={classes.gridItem} xs={3}>{displayTweets(props.tweets)}</Grid>\n\n        <Grid item className={classes.gridItem} xs={3}>\n          <TableContainer>\n            <Table className={classes.table} size=\"small\">\n              <TableBody>\n                <TableRow>\n                  <TableCell>id</TableCell><TableCell align=\"right\">{props.hashtag.nodeId}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>created</TableCell><TableCell align=\"right\">{createdAt}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>twitter age</TableCell><TableCell align=\"right\">{twitterAgeString}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>last seen</TableCell><TableCell align=\"right\">{lastSeen}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>last seen</TableCell><TableCell align=\"right\">{lastSeenDuration} ago</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>mentions</TableCell><TableCell align=\"right\">{props.hashtag.mentions ? props.hashtag.mentions : \"---\"}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>mentions/min</TableCell><TableCell align=\"right\">{props.hashtag.rate ? props.hashtag.rate.toFixed(1) : \"---\"}</TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item className={classes.gridItem} xs={2}>\n          <TableContainer>\n            <Table className={classes.table} size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>CAT</TableCell>\n                  <TableCell align=\"left\">MAN</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                <TableRow>\n                  <TableCell>left</TableCell>\n                  <TableCell align=\"right\">{props.stats.hashtag.manual.left}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>neutral</TableCell>\n                  <TableCell align=\"right\">{props.stats.hashtag.manual.neutral}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>right</TableCell>\n                  <TableCell align=\"right\">{props.stats.hashtag.manual.right}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>positive</TableCell>\n                  <TableCell align=\"right\">{props.stats.hashtag.manual.positive}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>negative</TableCell>\n                  <TableCell align=\"right\">{props.stats.hashtag.manual.negative}</TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item className={classes.gridItem} xs={1}>\n\n          <FormGroup>\n            <FormControl >\n              <InputLabel id=\"category-manual\">CATEGORY</InputLabel>\n              <Select\n                labelId=\"category-manual-label\"\n                id=\"category-manual\"\n                name=\"category\"\n                className={clsx(classes.category, getCategoryClass(props.hashtag.category))} \n                align=\"center\"\n                value={props.hashtag.category || \"none\"}\n                onChange={(event) => props.handleNodeChange(event, props.hashtag)}\n              >\n                <MenuItem dense={true} value={\"none\"} >NONE</MenuItem>\n                <MenuItem dense={true} value={\"left\"} >LEFT</MenuItem>\n                <MenuItem dense={true} value={\"neutral\"}>NEUTRAL</MenuItem>\n                <MenuItem dense={true} value={\"right\"}>RIGHT</MenuItem>\n                <MenuItem dense={true} value={\"positive\"}>POSITIVE</MenuItem>\n                <MenuItem dense={true} value={\"negative\"}>NEGATIVE</MenuItem>\n\n              </Select>\n            </FormControl>\n\n            <Typography\n              className={clsx(classes.autoCategory, getCategoryClass(props.hashtag.categoryAuto))} \n              align=\"center\"\n            >\n              AUTO: {props.hashtag.categoryAuto ? props.hashtag.categoryAuto.toUpperCase() : \"NONE\"}\n            </Typography>\n\n            <FormControl \n              component=\"fieldset\"\n              className={classes.radioGroupCategory}\n              size=\"small\"\n            >\n\n              <FormControlLabel\n                control={<Checkbox className={classes.checkbox} size=\"small\" checked={props.hashtag.ignored || false} onChange={(event) => props.handleNodeChange(event, props.hashtag)} name=\"ignored\" />}\n                label={<Typography className={classes.radioButtonLabel}>IGNORED</Typography>}\n              />\n\n            </FormControl>\n          </FormGroup>\n\n          {/* <FormGroup>\n            <FormControl component=\"fieldset\">\n              <RadioGroup aria-label=\"category\" name=\"category\" value={props.hashtag.category || \"none\"} onChange={(event) => props.handleNodeChange(event, props.hashtag)}>\n                <FormControlLabel labelPlacement=\"start\" value=\"left\" control={<Radio />} label=\"left\"/>\n                <FormControlLabel labelPlacement=\"start\" value=\"neutral\" control={<Radio />} label=\"neutral\" />\n                <FormControlLabel labelPlacement=\"start\" value=\"right\" control={<Radio />} label=\"right\" />\n                <FormControlLabel labelPlacement=\"start\" value=\"positive\" control={<Radio />} label=\"positive\" />\n                <FormControlLabel labelPlacement=\"start\" value=\"negative\" control={<Radio />} label=\"negative\" />\n                <FormControlLabel labelPlacement=\"start\" value=\"none\" control={<Radio />} label=\"none\" />\n              </RadioGroup>\n            </FormControl>\n\n            <FormControlLabel\n              control={<Checkbox checked={props.hashtag.ignored || false} onChange={(event) => props.handleNodeChange(event, props.hashtag)} name=\"ignored\" />}\n              label=\"ignored\"\n              labelPlacement=\"start\"\n            />\n          </FormGroup>\n */}\n\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default HashtagView;\n","import React from 'react';\nimport clsx from 'clsx';\n// import { Tweet } from 'react-twitter-widgets'\nimport { green } from '@material-ui/core/colors';\n\nimport Duration from 'duration';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\n// import Checkbox from '@material-ui/core/Checkbox';\n// import FormControl from '@material-ui/core/FormControl';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import FormGroup from '@material-ui/core/FormGroup';\nimport Grid from '@material-ui/core/Grid';\n// import InputLabel from '@material-ui/core/InputLabel';\n// import MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\n// import Select from '@material-ui/core/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 2,\n  },\n  grid: {\n    display: 'flex',\n  },\n  gridItem: {\n    margin: 5,\n  },  \n  card: {\n    raised: false,\n    maxWidth: 400,\n  },\n  paper: {\n    outlined: true,\n    variant: 'outlined',\n  },\n  table: {\n    // minWidth: 500,\n  },\n  tableHead: {\n    backgroundColor: 'lightgreen',\n  },\n  tableBody: {\n    // backgroundColor: 'gray',\n  },\n  appBar: {\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  statusBar: {\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    color: 'blue',\n  },\n  search: {\n    flexGrow: 1,\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: \"white\",\n    '&:hover': {\n      backgroundColor: \"lightgray\",\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'primary',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  selectCategory: {\n    fontSize: '0.5rem',\n    backgroundColor: '#ddeeee',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  radioGroupCategory: {\n    fontSize: '0.5rem',\n    backgroundColor: '#ddeeee',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n  },\n  checkbox: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n  radioButtonLabel: {\n    fontSize: '0.9rem'\n  },\n  radioButton: {\n  },\n\n  buttonGroupLabel: {\n    color: 'blue',\n    marginRight: theme.spacing(1),\n  },\n  buttonAll: {\n    color: 'black',\n  },\n  buttonLeft: {\n    color: 'blue',\n  },\n  buttonNeutral: {\n    color: 'gray',\n  },\n  buttonRight: {\n    color: 'red',\n  },\n  buttonMismatch: {\n    margin: 5\n  },\n\n  autoCategory:{\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n  },\n\n  category: {\n    // fontSize: fontSizeCategory,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n\n  left: {\n    backgroundColor: 'blue',\n    color: 'white',\n  },\n  neutral: {\n    backgroundColor: 'darkgray',\n    color: 'white',\n  },\n  right: {\n    backgroundColor: 'red',\n    color: 'white',\n  },\n  positive: {\n    backgroundColor: 'green',\n    color: 'white',\n  },\n  negative: {\n    backgroundColor: 'yellow',\n    color: 'black',\n  },\n  none: {\n    backgroundColor: 'lightgray',\n    color: 'black',\n  },\n  ignored: {\n    backgroundColor: 'yellow',\n    color: 'black',\n  },\n\n}));\n\nconst formatDate = (dateInput) => {\n  return new Date(dateInput).toLocaleDateString(\n    'en-gb',\n    {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }\n  );\n}\nconst defaultProfileImage = \"logo192.png\"\nconst defaultBannerImage = \"logo192.png\"\n\nconst AuthUserView = (props) => {\n\n  const authenticated = props.authenticated || false;\n\n  const classes = useStyles();\n\n  const defaultCategorizedRate = {\n    total: 0.05,\n    today: 0.05,\n    periodCurrent: 0.05,\n    periodLast: 0.05,\n  }\n\n  const categorizedRate = props.categorizedRate || defaultCategorizedRate;\n\n  const categorized = {};\n  categorized.total = props.authUser.screenName ? props.stats.user.categorizedBy[props.authUser.screenName].total : 0\n  categorized.today = props.authUser.screenName ? props.stats.user.categorizedBy[props.authUser.screenName].today : 0\n  categorized.periodCurrent = props.authUser.screenName ? props.stats.user.categorizedBy[props.authUser.screenName].periodCurrent : 0\n  categorized.periodLast = props.authUser.screenName ? props.stats.user.categorizedBy[props.authUser.screenName].periodLast || 0 : 0\n\n  const defaultEarned = {\n    total: 0,\n    today: 0,\n    periodCurrent: 0,\n    periodLast: 0,\n  };\n\n  let earned = props.earned || defaultEarned;\n\n  const defaultPaid = {\n    total: 0,\n    today: 0,\n    periodCurrent: 0,\n    periodLast: 0,\n  };\n\n  let paid = props.paid || defaultPaid;\n\n  const createdAt = formatDate(props.authUser.createdAt)\n  const lastSeen = formatDate(props.authUser.lastSeen)\n \n  const lastSeenDuration = props.authUser.lastSeen ? new Duration(new Date(props.authUser.lastSeen)).toString(1, 4) : \"---\"\n  const twitterAge = props.authUser.createdAt ? new Duration(new Date(props.authUser.createdAt)) : new Duration(new Date())\n  const twitterAgeString = twitterAge.toString(1, 4)\n\n  const tweetRate = twitterAge.days > 0 ? Math.ceil(props.authUser.statusesCount/twitterAge.days) : 0;\n\n  const openUserTwitterPage = () => {\n    console.log(\"open twitter\")\n    window.open(`http://twitter.com/${props.authUser.screenName || null}`, \"_blank\") //to open new page\n  }\n\n  const getCategoryClass = (category) => {\n    switch (category){\n      case \"left\":\n      case \"neutral\":\n      case \"right\":\n      case \"positive\":\n      case \"negative\":\n      case \"ignored\":\n        return classes[category]\n      default:\n        return classes.none\n    }\n  }\n  return (\n    authenticated ?\n    <>\n      <Grid className={classes.grid}>\n        <Grid item className={classes.gridItem} xs={3}>\n          <Card className={classes.card} variant=\"outlined\">\n\n            <CardContent onClick={openUserTwitterPage}>\n                <Typography \n                  className={clsx(classes.category, props.authUser.ignored ? getCategoryClass(\"ignored\") : getCategoryClass(props.authUser.category))} \n                  variant=\"h6\"\n                >\n                  {props.authUser.name}\n                </Typography>\n                <Typography variant=\"h6\">@{props.authUser.screenName} </Typography>\n            </CardContent>\n            <CardContent >\n                <Typography>{props.authUser.description}</Typography>\n            </CardContent>\n\n            <CardMedia\n              className={classes.profileImage}\n              src={props.authUser.profileImageUrl || defaultProfileImage}\n              component=\"img\"\n              onError={e => {}}              \n            />\n            <CardMedia \n              className={classes.bannerImage} \n              src={props.authUser.bannerImageUrl || defaultBannerImage} \n              component=\"img\"\n              onError={e => {}}              \n            />\n          </Card>        </Grid>\n        <Grid item className={classes.gridItem} xs={3}>\n          <Paper className={classes.paper}  elevation={0} variant=\"outlined\">\n            <TableContainer>\n              <Table  className={classes.table}  size=\"small\">\n                <TableHead className={classes.tableHead}>\n                  <TableRow>\n                    <TableCell>@{props.authUser.screenName}</TableCell><TableCell align=\"right\"></TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody className={classes.tableBody}>\n                  <TableRow>\n                    <TableCell>Twitter ID</TableCell><TableCell align=\"right\">{props.authUser.nodeId}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Location</TableCell><TableCell align=\"right\">{props.authUser.location}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Created</TableCell><TableCell align=\"right\">{createdAt}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Twitter age</TableCell><TableCell align=\"right\">{twitterAgeString}</TableCell>\n                  </TableRow>\n                  <TableRow className={props.authUser.followersCount > 5000 ? classes.tableRowGreen : null}>\n                    <TableCell>Followers</TableCell><TableCell align=\"right\">{props.authUser.followersCount}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Friends</TableCell><TableCell align=\"right\">{props.authUser.friendsCount}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Tweets</TableCell><TableCell align=\"right\">{props.authUser.statusesCount}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Tweets/day</TableCell><TableCell align=\"right\">{tweetRate}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Active</TableCell><TableCell align=\"right\">{lastSeen} ({lastSeenDuration} ago)</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Mentions</TableCell><TableCell align=\"right\">{props.authUser.mentions}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>Mentions/hour</TableCell><TableCell align=\"right\">{props.authUser.rate ? 60*props.authUser.rate.toFixed(2) : 0}</TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </TableContainer>              \n          </Paper>\n        </Grid>\n        <Grid item className={classes.gridItem} xs={5}>\n\n          <Paper className={classes.paper}  elevation={0} variant=\"outlined\">\n\n            <TableContainer>\n\n              <Table className={classes.table} size=\"small\"  aria-label=\"simple table\">\n\n                <TableHead className={classes.tableHead}>\n                  <TableRow>\n                    <TableCell>CATEGORIZED</TableCell>\n                    <TableCell align=\"right\">USERS</TableCell>\n                    <TableCell align=\"right\">RATE ($)</TableCell>\n                    <TableCell align=\"right\">EARNED ($)</TableCell>\n                    <TableCell align=\"right\">PAID ($)</TableCell>\n                  </TableRow>\n                </TableHead>\n\n                <TableBody>\n                  <TableRow>\n                    <TableCell >TOTAL</TableCell>\n                    <TableCell align=\"right\">{categorized.total || \"---\"}</TableCell>\n                    <TableCell align=\"right\">{categorizedRate.total || \"---\"}</TableCell>\n                    <TableCell align=\"right\">{earned.total || (categorized.total * categorizedRate.total).toFixed(2)}</TableCell>\n                    <TableCell align=\"right\">{paid.total || \"---\"}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell >Today</TableCell>\n                    <TableCell align=\"right\">{categorized.today || \"---\"}</TableCell>\n                    <TableCell align=\"right\">{categorizedRate.today || \"---\"}</TableCell>\n                    <TableCell align=\"right\">{earned.today || (categorized.today * categorizedRate.today).toFixed(2)}</TableCell>\n                    <TableCell align=\"right\">{paid.today || \"---\"}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell >Current Period</TableCell>\n                    <TableCell align=\"right\">{categorized.periodCurrent || \"---\"}</TableCell>\n                    <TableCell align=\"right\">{categorizedRate.periodCurrent || \"---\"}</TableCell>\n                    <TableCell align=\"right\">{earned.periodCurrent || (categorized.periodCurrent * categorizedRate.periodCurrent).toFixed(2)}</TableCell>\n                    <TableCell align=\"right\">{paid.periodCurrent || \"---\"}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell >Last Period</TableCell>\n                    <TableCell align=\"right\">{categorized.periodLast || \"---\"}</TableCell>\n                    <TableCell align=\"right\">{categorizedRate.periodLast || \"---\"}</TableCell>\n                    <TableCell align=\"right\">{earned.periodLast || (categorized.periodLast * categorizedRate.periodLast).toFixed(2)}</TableCell>\n                    <TableCell align=\"right\">{paid.periodLast || \"---\"}</TableCell>\n                  </TableRow>\n                </TableBody>\n\n              </Table>\n            </TableContainer>              \n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n    :\n    <h3>\n      NOT AUTHENTICATED\n    </h3>\n  );\n}\n\nexport default AuthUserView;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Router>\n    <div>\n      <Switch>\n        <Route path=\"/categorize/user/:slug\">\n          <App />\n        </Route>\n        <Route path=\"/categorize/hashtag/:slug\">\n          <App />\n        </Route>\n        <Route path=\"/categorize/account/:slug\">\n          <App />\n        </Route>\n        <Route >\n          <App />\n        </Route>\n      </Switch>\n    </div>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}