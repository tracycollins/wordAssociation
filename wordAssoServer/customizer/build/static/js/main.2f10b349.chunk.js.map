{"version":3,"sources":["config.js","SettingsView.js","StatsView.js","App.js","index.js"],"names":["config","defaults","maxNodesLimit","maxNodesLimitRange","min","max","step","velocityDecay","velocityDecayRange","charge","chargeRange","gravity","gravityRange","nodeRadiusRatioRange","nodeRadiusRatio","fontSizeRatioRange","fontSizeRatio","settings","useStyles","makeStyles","theme","root","border","flexGrow","range","color","valuetext","value","Settings","props","classes","defaultSettingsState","metricMode","ageNodes","autoCategoryFlag","testMode","pause","nodeMaxAge","useState","setSettings","handleChangeSettings","name","e","prevState","handleChange","Grid","className","grid","item","gridItem","xs","Typography","id","gutterBottom","Slider","onChange","valueLabelDisplay","aria-labelledby","getAriaValueText","appBar","backgroundColor","marginBottom","spacing","display","alignItems","margin","gridHeader","padding","paper","outlined","variant","card","alignSelf","profileImage","bannerImage","icon","borderRadius","width","height","boxShadow","backgroundImage","outline","outlineOffset","background","checkedIcon","content","selectCategory","fontSize","shape","radioGroupCategory","maxWidth","checkbox","green","checked","radioButtonLabel","radioButton","table","tableHead","tableCell","tableCategorized","tableRowGreen","statusBar","raised","menuButton","marginRight","title","search","position","breakpoints","up","searchIcon","pointerEvents","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","buttonGroupLabel","buttonAll","buttonLeft","buttonNeutral","buttonRight","buttonMismatch","autoCategory","category","left","neutral","right","positive","negative","none","ignored","Stats","DEFAULT_SOURCE","parentWindow","window","opener","console","log","tabs","tab","minWidth","toolBar","shadows","serverStatus","App","tabValue","setTabValue","currentTab","setCurrentTab","currentTabRef","useRef","useEffect","current","setDefaults","defaultsRef","settingsRef","status","setStatus","statusRef","changeObj","tempSettings","postMessage","op","Object","assign","error","addEventListener","event","origin","undefined","data","debug","PARENT_ID","stats","Container","component","AppBar","Toolbar","Tabs","newValue","preventDefault","Tab","label","SettingsView","StatsView","ReactDOM","render","path","document","getElementById"],"mappings":"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","file":"static/js/main.2f10b349.chunk.js","sourcesContent":["const config = {\n  defaults: {\n    maxNodesLimit: 47,\n    maxNodesLimitRange: {\n      min: 0,\n      max: 100,\n      step: 1\n    },\n    velocityDecay: 0.5,\n    velocityDecayRange: {\n      min: 0.0,\n      max: 1.0,\n      step: 0.01\n    },\n    charge: -50,\n    chargeRange: {\n      min: -1000,\n      max: 1000,\n      step: 10\n    },\n    gravity: 0.001,\n    gravityRange: {\n      min: -0.002,\n      max: 0.002,\n      step: 0.00001\n    },\n    nodeRadiusRatioRange: {\n      min: 0.0,\n      max: 1.0,\n      step: 0.001\n    },\n    nodeRadiusRatio: {\n      min: 0.047,\n      max: 0.47\n    },\n    fontSizeRatioRange: {\n      min: 0.0,\n      max: 1.0,\n      step: 0.001\n    },\n    fontSizeRatio: {\n      min: 0.047,\n      max: 0.47\n    }\n  },\n  settings: {\n    maxNodesLimit: 47,\n    velocityDecay: 0.33,\n    charge: -50,\n    gravity: 0.001,\n    nodeRadiusRatio: {\n      min: 0.012,\n      max: 0.345\n    },\n    fontSizeRatio: {\n      min: 0.012,\n      max: 0.345\n    }\n  }\n}\n\nexport default config;","import React, { useState } from 'react';\n// import React from 'react';\n// import { green } from '@material-ui/core/colors';\n// import clsx from 'clsx';\n\n// import Duration from 'duration';\n\n// import AppBar from '@material-ui/core/AppBar';\n// import Button from '@material-ui/core/Button';\n// import ButtonGroup from '@material-ui/core/ButtonGroup';\n// import Card from '@material-ui/core/Card';\n// import CardActionArea from '@material-ui/core/CardActionArea';\n// import CardActions from '@material-ui/core/CardActions';\n// import CardContent from '@material-ui/core/CardContent';\n// import CardHeader from '@material-ui/core/CardHeader';\n// import CardMedia from '@material-ui/core/CardMedia';\n// import CheckBoxIcon from '@material-ui/icons/CheckBox';\n// import CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\n// import Checkbox from '@material-ui/core/Checkbox';\n// import FormControl from '@material-ui/core/FormControl';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import FormGroup from '@material-ui/core/FormGroup';\n// import FormLabel from '@material-ui/core/FormLabel';\nimport Grid from '@material-ui/core/Grid';\n// import IconButton from '@material-ui/core/IconButton';\n// import InputBase from '@material-ui/core/InputBase';\n// import InputLabel from '@material-ui/core/InputLabel';\n// import MenuItem from '@material-ui/core/MenuItem';\n// import MenuIcon from '@material-ui/icons/Menu';\n// import Paper from '@material-ui/core/Paper';\n// import Radio from '@material-ui/core/Radio';\n// import RadioGroup from '@material-ui/core/RadioGroup';\n// import SearchIcon from '@material-ui/icons/Search';\n// import Select from '@material-ui/core/Select';\nimport Slider from '@material-ui/core/Slider';\n// import Table from '@material-ui/core/Table';\n// import TableBody from '@material-ui/core/TableBody';\n// import TableCell from '@material-ui/core/TableCell';\n// import TableContainer from '@material-ui/core/TableContainer';\n// import TableHead from '@material-ui/core/TableHead';\n// import TableRow from '@material-ui/core/TableRow';\n// import Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    border: 0,\n    flexGrow: 2,\n  },\n  range: {\n    color: 'white',\n  }\n}));\n\nfunction valuetext(value) {\n  return `${value}°C`;\n}\n\nconst Settings = (props) => {\n  \n  const classes = useStyles();\n\n  const defaultSettingsState = {\n    nodeRadiusRatio : [\n      props.settings.nodeRadiusRatio.min, \n      props.settings.nodeRadiusRatio.max\n    ],\n    fontSizeRatio : [\n      props.settings.fontSizeRatio.min, \n      props.settings.fontSizeRatio.max\n    ],\n    metricMode: \"rate\",\n    ageNodes: true,\n    autoCategoryFlag: false,\n    testMode: false,\n    pause: false,\n    charge: props.settings.charge,\n    gravity: props.settings.gravity,\n    velocityDecay: props.settings.velocityDecay,\n    maxNodesLimit: props.settings.maxNodesLimit,\n    nodeMaxAge: props.settings.nodeMaxAge,\n  }\n\n  const [settings, setSettings] = useState(defaultSettingsState);\n\n  const handleChangeSettings = name => (e, value) => {\n    // event.preventDefault();\n    setSettings(prevState => ({...prevState, [name]: value}));\n    props.handleChange({name: name, value: value})\n  };\n\n  // const [nodeRadiusRatio, setNodeRadiusRatio] = React.useState(\n  //   [\n  //     props.settings.nodeRadiusRatio.min, \n  //     props.settings.nodeRadiusRatio.max\n  //   ]\n  // );\n  // const handleChangeNodeSize = (event, newNodeRadiusRatio) => {\n  //   setNodeRadiusRatio(newNodeRadiusRatio);\n  //   props.handleChange({name: \"nodeRadiusRatio\", value: newNodeRadiusRatio})\n  // };\n\n  // const [fontSizeRatio, setFontSizeRatio] = React.useState(\n  //   [\n  //     props.settings.fontSizeRatio.min, \n  //     props.settings.fontSizeRatio.max\n  //   ]\n  // );\n  // const handleChangeFontSize = (event, newFontSizeRatio) => {\n  //   setFontSizeRatio(newFontSizeRatio);\n  //   props.handleChange({name: \"fontSizeRatio\", value: newFontSizeRatio})\n  // };\n\n  // const propertiesSelect = [    \n  //   \"metricMode\",\n  // ]\n\n  // const propertiesRange = [    \n  //   \"nodeRadiusRatio\",\n  //   \"fontSizeRatio\",\n  // ]\n\n  // const propertiesBoolean = [\n  //   \"ageNodes\",\n  //   \"autoCategoryFlag\",\n  //   \"testMode\",\n  //   \"pause\",\n  // ]\n\n  // const propertiesMoment = [\n  //   \"reset\",\n  //   \"resetDefaultForce\",\n  // ]\n\n  // const propertiesScalar = [\n  //   \"charge\",\n  //   \"gravity\",\n  //   \"maxAgeRate\",\n  //   \"maxNodesLimit\",\n  //   \"nodeMaxAge\",\n  //   \"velocityDecay\",\n  // ]\n\n  // const [charge, setCharge] = React.useState(props.settings.charge);\n  // const handleChangeCharge = (event, newCharge) => {\n  //   setCharge(newCharge);\n  //   props.handleChange({name: \"charge\", value: newCharge})\n  // };\n\n  // const [gravity, setGravity] = React.useState(props.settings.gravity);\n  // const handleChangeGravity = (event, newGravity) => {\n  //   setGravity(newGravity);\n  //   props.handleChange({name: \"gravity\", value: newGravity})\n  // };\n\n  // const [velocityDecay, setVelocityDecay] = React.useState(props.settings.velocityDecay);\n  // const handleChangeVelocityDecay = (event, newVelocityDecay) => {\n  //   setVelocityDecay(newVelocityDecay);\n  //   props.handleChange({name: \"velocityDecay\", value: newVelocityDecay})\n  // };\n\n  return (\n    <>\n      <Grid className={classes.grid}>\n          <Grid item className={classes.gridItem} xs={3}>\n\n            <Typography className={classes.range} id=\"nodeRadiusRatio\" name=\"nodeRadiusRatio\" gutterBottom>\n              NODE RADIUS RATIO min/max\n            </Typography>\n            <Slider\n              id=\"nodeRadiusRatio\"\n              name=\"nodeRadiusRatio\"\n              value={settings.nodeRadiusRatio}\n              min={props.defaults.nodeRadiusRatioRange.min}\n              max={props.defaults.nodeRadiusRatioRange.max}\n              step={props.defaults.nodeRadiusRatioRange.step}\n              onChange={handleChangeSettings(\"nodeRadiusRatio\")}\n              valueLabelDisplay=\"auto\"\n              aria-labelledby=\"range-slider\"\n              getAriaValueText={valuetext}\n            />\n\n            <Typography className={classes.range} id=\"fontSizeRatio\" name=\"fontSizeRatio\" gutterBottom>\n              FONT SIZE RATIO min/max\n            </Typography>\n            <Slider\n              id=\"fontSizeRatio\"\n              name=\"fontSizeRatio\"\n              value={settings.fontSizeRatio}\n              min={props.defaults.fontSizeRatioRange.min}\n              max={props.defaults.fontSizeRatioRange.max}\n              step={props.defaults.fontSizeRatioRange.step}\n              onChange={handleChangeSettings(\"fontSizeRatio\")}\n              valueLabelDisplay=\"auto\"\n              aria-labelledby=\"range-slider\"\n              getAriaValueText={valuetext}\n            />\n\n            <Typography className={classes.range} id=\"setMaxNodesLimit\" name=\"setMaxNodesLimit\" gutterBottom>\n              MAX NODES\n            </Typography>\n            <Slider\n              id=\"maxNodesLimit\"\n              name=\"maxNodesLimit\"\n              value={settings.maxNodesLimit}\n              min={props.defaults.maxNodesLimitRange.min}\n              max={props.defaults.maxNodesLimitRange.max}\n              step={props.defaults.maxNodesLimitRange.step}\n              onChange={handleChangeSettings(\"maxNodesLimit\")}\n              valueLabelDisplay=\"auto\"\n              aria-labelledby=\"slider\"\n              getAriaValueText={valuetext}\n            />\n\n            <Typography className={classes.range} id=\"velocityDecay\" name=\"velocityDecay\" gutterBottom>\n              VELOCITY DECAY\n            </Typography>\n            <Slider\n              id=\"velocityDecay\"\n              name=\"velocityDecay\"\n              value={settings.velocityDecay}\n              min={props.defaults.velocityDecayRange.min}\n              max={props.defaults.velocityDecayRange.max}\n              step={props.defaults.velocityDecayRange.step}\n              onChange={handleChangeSettings(\"velocityDecay\")}\n              valueLabelDisplay=\"auto\"\n              aria-labelledby=\"slider\"\n              getAriaValueText={valuetext}\n            />\n\n            <Typography className={classes.range} id=\"charge\" name=\"charge\" gutterBottom>\n              CHARGE\n            </Typography>\n            <Slider\n              id=\"charge\"\n              name=\"charge\"\n              value={settings.charge}\n              min={props.defaults.chargeRange.min}\n              max={props.defaults.chargeRange.max}\n              step={props.defaults.chargeRange.step}\n              onChange={handleChangeSettings(\"charge\")}\n              valueLabelDisplay=\"auto\"\n              aria-labelledby=\"slider\"\n              getAriaValueText={valuetext}\n            />\n\n            <Typography className={classes.range} id=\"gravity\" name=\"gravity\" gutterBottom>\n              GRAVITY\n            </Typography>\n            <Slider\n              id=\"gravity\"\n              name=\"gravity\"\n              value={settings.gravity}\n              min={props.defaults.gravityRange.min}\n              max={props.defaults.gravityRange.max}\n              step={props.defaults.gravityRange.step}\n              onChange={handleChangeSettings(\"gravity\")}\n              valueLabelDisplay=\"auto\"\n              aria-labelledby=\"slider\"\n              getAriaValueText={valuetext}\n            />\n\n          </Grid>\n        </Grid>\n    </>\n  );\n}\n\nexport default Settings;\n","import React from 'react';\nimport { green } from '@material-ui/core/colors';\n// import clsx from 'clsx';\n\n// import Duration from 'duration';\n\n// import AppBar from '@material-ui/core/AppBar';\n// import Button from '@material-ui/core/Button';\n// import ButtonGroup from '@material-ui/core/ButtonGroup';\n// import Card from '@material-ui/core/Card';\n// import CardActionArea from '@material-ui/core/CardActionArea';\n// import CardActions from '@material-ui/core/CardActions';\n// import CardContent from '@material-ui/core/CardContent';\n// import CardHeader from '@material-ui/core/CardHeader';\n// import CardMedia from '@material-ui/core/CardMedia';\n// import CheckBoxIcon from '@material-ui/icons/CheckBox';\n// import CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\n// import Checkbox from '@material-ui/core/Checkbox';\n// import FormControl from '@material-ui/core/FormControl';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import FormGroup from '@material-ui/core/FormGroup';\n// import FormLabel from '@material-ui/core/FormLabel';\nimport Grid from '@material-ui/core/Grid';\n// import IconButton from '@material-ui/core/IconButton';\n// import InputBase from '@material-ui/core/InputBase';\n// import InputLabel from '@material-ui/core/InputLabel';\n// import MenuItem from '@material-ui/core/MenuItem';\n// import MenuIcon from '@material-ui/icons/Menu';\n// import Paper from '@material-ui/core/Paper';\n// import Radio from '@material-ui/core/Radio';\n// import RadioGroup from '@material-ui/core/RadioGroup';\n// import SearchIcon from '@material-ui/icons/Search';\n// import Select from '@material-ui/core/Select';\n// import Table from '@material-ui/core/Table';\n// import TableBody from '@material-ui/core/TableBody';\n// import TableCell from '@material-ui/core/TableCell';\n// import TableContainer from '@material-ui/core/TableContainer';\n// import TableHead from '@material-ui/core/TableHead';\n// import TableRow from '@material-ui/core/TableRow';\n// import Toolbar from '@material-ui/core/Toolbar';\n// import Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\n// const StyledTableCell = withStyles((theme) => ({\n//   head: {\n//   },\n//   body: {\n//     fontSize: 11,\n//   },\n// }))(TableCell);\n\n// const StyledTableRow = withStyles((theme) => ({\n//   root: {\n//     backgroundColor: grey,\n//   },\n// }))(TableRow);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    border: 0,\n    flexGrow: 2,\n  },\n  appBar: {\n    border: 0,\n    backgroundColor: 'white',\n    marginBottom: theme.spacing(1),\n  },\n  grid: {\n    border: 0,\n    display: 'flex',\n    alignItems: 'stretch',\n  },\n  gridItem: {\n    border: 0,\n    margin: theme.spacing(1),\n  },\n  gridHeader: {\n    padding: theme.spacing(1),\n    border: 0,\n    marginBottom: theme.spacing(1),\n  },\n  paper: {\n    outlined: true,\n    variant: 'outlined',\n  },\n  card: {\n    alignSelf: \"center\",\n  },\n  profileImage: {\n    marginBottom: theme.spacing(1),\n  },\n  bannerImage: {\n    marginBottom: theme.spacing(1),\n  },\n  icon: {\n    borderRadius: '50%',\n    width: 16,\n    height: 16,\n    boxShadow: 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\n    backgroundColor: '#f5f8fa',\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\n    '$root.Mui-focusVisible &': {\n      outline: '2px auto rgba(19,124,189,.6)',\n      outlineOffset: 2,\n    },\n    'input:hover ~ &': {\n      backgroundColor: '#ebf1f5',\n    },\n    'input:disabled ~ &': {\n      boxShadow: 'none',\n      background: 'rgba(206,217,224,.5)',\n    },\n  },\n  checkedIcon: {\n    backgroundColor: '#137cbd',\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\n    '&:before': {\n      display: 'block',\n      width: 16,\n      height: 16,\n      backgroundImage: 'radial-gradient(#fff,#fff 28%,transparent 32%)',\n      content: '\"\"',\n    },\n    'input:hover ~ &': {\n      backgroundColor: '#106ba3',\n    },\n  },\n  selectCategory: {\n    fontSize: '0.9rem',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  radioGroupCategory: {\n    maxWidth: \"90%\",\n    fontSize: '0.5rem',\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n  },\n  checkbox: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n  radioButtonLabel: {\n    fontSize: '0.9rem'\n  },\n  radioButton: {\n  },\n  table: {\n    maxWidth: \"90%\",\n    padding: theme.spacing(1),\n  },\n  tableHead: {\n    backgroundColor: '#ddeeee',\n  },\n  tableCell: {\n  },\n  tableCategorized: {\n    backgroundColor: '#ddeeee',\n  },\n  tableRowGreen: {\n    backgroundColor: 'lightgreen',\n  },\n  statusBar: {\n    raised: false,\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    color: 'blue',\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: \"white\",\n    '&:hover': {\n      backgroundColor: \"#ddeeee\",\n    },\n    marginRight: theme.spacing(1),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'primary',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n\n  buttonGroupLabel: {\n    color: 'blue',\n    marginRight: theme.spacing(1),\n  },\n  buttonAll: {\n    color: 'black',\n  },\n  buttonLeft: {\n    color: 'blue',\n  },\n  buttonNeutral: {\n    color: 'gray',\n  },\n  buttonRight: {\n    color: 'red',\n  },\n  buttonMismatch: {\n    margin: 5\n  },\n  autoCategory:{\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n    marginBottom: theme.spacing(1),\n  },\n  category: {\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n\n  left: {\n    backgroundColor: 'blue',\n    color: 'white',\n  },\n  neutral: {\n    backgroundColor: 'darkgray',\n    color: 'white',\n  },\n  right: {\n    backgroundColor: 'red',\n    color: 'white',\n  },\n  positive: {\n    backgroundColor: 'green',\n    color: 'white',\n  },\n  negative: {\n    backgroundColor: 'yellow',\n    color: 'black',\n  },\n  none: {\n    backgroundColor: 'lightgray',\n    color: 'black',\n  },\n  ignored: {\n    backgroundColor: 'yellow',\n    color: 'black',\n  },\n\n}));\n\n// const formatDate = (dateInput) => {\n//   return new Date(dateInput).toLocaleDateString(\n//     'en-gb',\n//     {\n//       year: 'numeric',\n//       month: 'short',\n//       day: 'numeric'\n//     }\n//   );\n// }\n\nconst Stats = (props) => {\n  \n  const classes = useStyles();\n\n  return (\n    <>\n      <Grid className={classes.grid}>\n          <Grid item className={classes.gridItem} xs={3}>\n          </Grid>\n        </Grid>\n    </>\n  );\n}\n\nexport default Stats;\n","import React, { useState, useEffect, useRef } from 'react';\n// import { green, grey } from '@material-ui/core/colors';\n\n// import { useHistory, useLocation } from \"react-router-dom\";\n// import { useHotkeys } from 'react-hotkeys-hook';\n// import socketClient from \"socket.io-client\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Container from '@material-ui/core/Container';\nimport AppBar from '@material-ui/core/AppBar';\n// import CircularProgress from '@material-ui/core/CircularProgress';\n// import Button from '@material-ui/core/Button';\n\n// import InputBase from '@material-ui/core/InputBase';\n// import Link from '@material-ui/core/Link';\n// import SearchIcon from '@material-ui/icons/Search';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport './App.css';\nimport SettingsView from './SettingsView.js';\nimport StatsView from './StatsView.js';\n\nconst PRODUCTION_SOURCE = \"https://word.threeceelabs.com\";\nconst LOCAL_SOURCE = \"http://localhost:9997\";\n// const LOCAL_SOURCE = \"http://mbp3:3000\";\n\nconst DEFAULT_SOURCE = PRODUCTION_SOURCE;\n\nconst parentWindow = window.opener;\n\nconsole.log({parentWindow})\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    flexGrow: 1,\n    background: 'black',\n    boxShadow: 0,\n  },\n  appBar: {\n    backgroundColor: 'black',\n    marginBottom: theme.spacing(2),\n    boxShadow: 0,\n  },\n  tabs: {\n    color: 'white',\n  },\n  tab: {\n    minWidth: 100,\n    width: 100,\n  },\n  toolBar: {\n    shadows: 0,\n  },\n  title: {\n    // flexGrow: 1,\n    color: 'white',\n    marginRight: theme.spacing(2),\n  },\n  serverStatus: {\n    fontSize: \"0.85rem\",\n    flexGrow: 1,\n    color: 'lightgray',\n    padding: theme.spacing(1),\n  },\n  statusBar: {\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  inputRoot: {\n    color: 'primary',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n\n}))\n\nconst App = (props) => {\n\n  const classes = useStyles()\n\n  const [tabValue, setTabValue] = useState(0)\n \n  const [currentTab, setCurrentTab] = useState(\"settings\")\n  const currentTabRef = useRef(currentTab)\n  useEffect(() => { \n    currentTabRef.current = currentTab \n  }, [currentTab])\n\n  const [defaults, setDefaults] = useState(props.defaults)\n  const defaultsRef = useRef(defaults)\n  useEffect(() => { \n    defaultsRef.current = defaults \n  }, [defaults])\n\n  const [settings, setSettings] = useState(props.settings)\n  const settingsRef = useRef(settings)\n  useEffect(() => { \n    settingsRef.current = settings \n  }, [settings])\n\n  const [status, setStatus] = useState(props.status)\n  const statusRef = useRef(status)\n  useEffect(() => { \n    statusRef.current = status \n  }, [status])\n  \n  const handleTabChange = (event, newValue) => {\n\n    event.preventDefault()\n    console.log({newValue})\n\n    switch (newValue){\n      case 0:\n        setCurrentTab(\"settings\")\n        break\n      case 1:\n        setCurrentTab(\"stats\")\n        break\n      default:\n        setCurrentTab(\"settings\")\n    }\n\n    setTabValue(newValue)\n  }\n\n  const handleChange = (changeObj) => {\n\n    let tempSettings = {}\n\n    switch (changeObj.name){\n\n      case \"nodeRadiusRatio\":\n      case \"fontSizeRatio\":\n        if (parentWindow){\n          parentWindow.postMessage(\n            {\n              op: \"UPDATE\", \n              id: changeObj.name,\n              min: changeObj.value[0],\n              max: changeObj.value[1]\n            }, \n            DEFAULT_SOURCE\n          );\n        }\n\n        tempSettings = Object.assign({}, settingsRef.current, {[changeObj.name]: { min: changeObj.value[0],  max: changeObj.value[1]}})\n        setSettings(tempSettings)\n        break\n\n      case \"maxNodesLimit\":\n      case \"charge\":\n      case \"gravity\":\n      case \"velocityDecay\":\n        if (parentWindow){\n          parentWindow.postMessage(\n            {\n              op: \"UPDATE\", \n              id: changeObj.name,\n              value: changeObj.value,\n            }, \n            DEFAULT_SOURCE\n          );\n        }\n\n        tempSettings = Object.assign({}, settingsRef.current, {[changeObj.name]: changeObj.value})\n        setSettings(tempSettings)\n\n        break\n\n      default:\n        console.error(`UNKNOWN CHANGE NAME: ${changeObj.name}`)\n    }    \n  }\n\n  const displayTab = (tab) => {\n    if (tab === \"settings\"){\n      return (\n        <SettingsView \n          defaults={defaultsRef.current} \n          settings={settingsRef.current} \n          status={statusRef.current} \n          handleChange={handleChange}\n        >\n        </SettingsView>\n      )\n    }\n    else{\n      return <StatsView settings={settings} stats={status} />\n    }\n  }\n\n  const receiveMessage = (event) => {\n\n    // Do we trust the sender of this message?\n\n    if (event.origin !== DEFAULT_SOURCE){\n      console.error(\"RX MESSAGE | NOT TRUSTED SOURCE\"\n        + \" | ORIGIN: \" + event.origin \n        + \" | DEFAULT_SOURCE: \" + DEFAULT_SOURCE\n      );\n      return;\n    }\n\n    if (event.data.op === undefined){\n      return;\n    }\n\n    console.debug(\"RX MESSAGE | SOURCE\"\n      + \" | ORIGIN: \" + event.origin \n      + \" | PARENT WINDOW: \" + parentWindow.PARENT_ID\n      + \" | DEFAULT_SOURCE: \" + DEFAULT_SOURCE\n    );\n\n    switch (event.data.op) {\n\n      case \"INIT\":\n        console.debug(\"CUSTOMIRZER INIT\");\n\n        if (event.data.config && event.data.config.defaults){\n          setDefaults(event.data.config.defaults)\n          console.log(`defaultsRef.current \\n ${defaultsRef.current}`)\n        }\n\n        if (event.data.config && event.data.config.settings){\n          setSettings(event.data.config.settings)\n          console.log(`settingsRef.current \\n ${settingsRef.current}`)\n        }\n\n        if (event.data.status){\n          setStatus(event.data.status)\n          console.log(`statusRef.current \\n ${statusRef.current}`)\n        }\n      break;\n\n      case \"CONFIG\":\n        if (event.data.config && event.data.config.defaults){\n          setDefaults(event.data.config.defaults)\n          console.log(`defaultsRef.current \\n ${defaultsRef.current}`)\n        }\n\n        if (event.data.config && event.data.config.settings){\n          setSettings(event.data.config.settings)\n          console.log(`settingsRef.current \\n ${settingsRef.current}`)\n        }\n      break;\n\n      case \"STATS\":\n        if (event.data.stats) {\n          setStatus(event.data.stats);\n          console.log(`statusRef.current \\n ${statusRef.current}`)\n        }\n      break;\n\n      default:\n        console.error(`*** ERROR | UNKNOWN MESSAGE | OP: ${event.data.op}`);\n    }\n  }\n\n  window.addEventListener(\"message\", receiveMessage, false);\n\n  return (\n    <div className={classes.root}>\n      <Container component=\"main\" maxWidth={false}>\n        <AppBar  className={classes.appBar} position=\"static\">\n          <Toolbar className={classes.toolBar}>\n\n            <Typography className={classes.title}>\n              CUSTOMIZE\n            </Typography>\n            \n            <Tabs \n              className={classes.tabs}\n              value={tabValue} \n              onChange={handleTabChange}\n            >\n              <Tab className={classes.tab} label=\"Settings\"/>\n              <Tab className={classes.tab} label=\"Stats\"/>\n            </Tabs>\n\n          </Toolbar>\n        </AppBar>\n        {displayTab(currentTab)}\n      </Container>\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport './index.css';\nimport config from './config.js';\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <div>\n      <Switch>\n        <Route path=\"/customize/settings\">\n          <App defaults={config.defaults} settings={config.settings} status={{}}/>\n        </Route>\n        <Route path=\"/customize/stats\">\n          <App defaults={config.defaults} settings={config.settings} status={{}}/>\n        </Route>\n        <Route >\n          <App defaults={config.defaults} settings={config.settings} status={{}}/>\n        </Route>\n      </Switch>\n    </div>\n  </Router>,\n  document.getElementById('root')\n);"],"sourceRoot":""}