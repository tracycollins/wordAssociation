{"version":3,"sources":["config.js","SettingsView.js","StatsView.js","App.js","index.js"],"names":["config","defaults","rxNodeQueueMax","keepaliveInterval","display","hashtag","user","tweet","link","linkStrength","linkStrengthRange","min","max","step","linkDistance","linkDistanceRange","maxNodesLimit","maxNodesLimitRange","nodeMaxAge","nodeMaxAgeRange","velocityDecay","velocityDecayRange","charge","chargeRange","gravity","gravityRange","nodeRadiusRatioRange","nodeRadiusRatio","fontSizeRatioRange","fontSizeRatio","settings","Object","assign","useStyles","makeStyles","theme","root","border","flexGrow","grid","alignItems","gridItem","margin","spacing","gridHeader","paper","padding","outlined","variant","radioGroupCategory","maxWidth","fontSize","checkbox","color","green","checked","radioButtonLabel","radioButton","range","valuetext","value","Settings","props","classes","handleChangeSettings","name","e","handleChange","Grid","className","item","xs","Paper","elevation","Typography","FormGroup","align","FormControl","component","size","map","entityType","FormControlLabel","control","Checkbox","id","onChange","label","toUpperCase","gutterBottom","Slider","valueLabelDisplay","aria-labelledby","getAriaValueText","appBar","backgroundColor","marginBottom","timelineError","textAlign","card","alignSelf","profileImage","bannerImage","icon","borderRadius","width","height","boxShadow","backgroundImage","outline","outlineOffset","background","checkedIcon","content","selectCategory","shape","table","tableHead","tableCell","tableCategorized","tableRowGreen","statusBar","raised","menuButton","marginRight","title","search","position","breakpoints","up","searchIcon","pointerEvents","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","buttonGroupLabel","buttonAll","buttonLeft","buttonNeutral","buttonRight","buttonMismatch","autoCategory","category","left","neutral","right","positive","negative","none","ignored","LinearProgressWithLabel","Box","mr","LinearProgress","minWidth","Math","round","Stats","console","log","Card","CardContent","heartbeat","bestNetwork","networkId","runtimeMatchRate","toFixed","successRate","twitter","tweetsReceived","tweetsPerMin","maxTweetsPerMin","nodeCount","nodesPerMin","maxNodesPerMin","DEFAULT_SOURCE","parentWindow","window","opener","tabs","tab","toolBar","shadows","serverStatus","App","useState","tabValue","setTabValue","currentTab","setCurrentTab","currentTabRef","useRef","useEffect","current","setDefaults","defaultsRef","setSettings","settingsRef","status","setStatus","statusRef","setHeartbeat","heartbeatRef","changeObj","entity","tempSettings","tempDisplay","postMessage","op","split","error","addEventListener","event","preventDefault","origin","undefined","data","debug","Container","AppBar","Toolbar","Tabs","newValue","Tab","SettingsView","StatsView","defaultHeartbeat","maxNodesPerMinTime","inputsId","overallMatchRate","networkTechnology","numInputs","betterChild","seedNetworkId","seedNetworkRes","maxTweetsPerMinTime","ReactDOM","render","path","document","getElementById"],"mappings":"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","file":"static/js/main.58017d4a.chunk.js","sourcesContent":["const config = {\n  defaults: {\n    rxNodeQueueMax: 100,\n    keepaliveInterval: 15000,\n    display: {\n      hashtag: true,\n      user: true,\n      tweet: false,\n      link: false\n    },\n    linkStrength: 0.2,\n    linkStrengthRange: {\n      min: 0,\n      max: 1.0,\n      step: 0.01\n    },\n    linkDistance: 10,\n    linkDistanceRange: {\n      min: 0,\n      max: 1000,\n      step: 1\n    },\n    maxNodesLimit: 50,\n    maxNodesLimitRange: {\n      min: 0,\n      max: 200,\n      step: 1\n    },\n    nodeMaxAge: 20000,\n    nodeMaxAgeRange: {\n      min: 0,\n      max: 60000,\n      step: 100\n    },\n    velocityDecay: 0.8,\n    velocityDecayRange: {\n      min: 0.0,\n      max: 1.0,\n      step: 0.01\n    },\n    charge: -500,\n    chargeRange: {\n      min: -1000,\n      max: 1000,\n      step: 10\n    },\n    gravity: 0.005,\n    gravityRange: {\n      min: -0.002,\n      max: 0.01,\n      step: 0.00001\n    },\n    nodeRadiusRatioRange: {\n      min: 0.0,\n      max: 0.100,\n      step: 0.001\n    },\n    nodeRadiusRatio: {\n      min: 0.007,\n      max: 0.047\n    },\n    fontSizeRatioRange: {\n      min: 0.0,\n      max: 0.100,\n      step: 0.001\n    },\n    fontSizeRatio: {\n      min: 0.015,\n      max: 0.045\n    }\n  }\n}\n\nconfig.settings = Object.assign({}, config.defaults)\n\nexport default config;","import React from 'react';\nimport { green } from '@material-ui/core/colors';\n// import Duration from 'duration';\n// import clsx from 'clsx';\n// import Card from '@material-ui/core/Card';\n// import CardContent from '@material-ui/core/CardContent';\n// import CardMedia from '@material-ui/core/CardMedia';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Grid from '@material-ui/core/Grid';\n// import MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\n// import Select from '@material-ui/core/Select';\nimport Slider from '@material-ui/core/Slider';\n// import Table from '@material-ui/core/Table';\n// import TableBody from '@material-ui/core/TableBody';\n// import TableCell from '@material-ui/core/TableCell';\n// import TableContainer from '@material-ui/core/TableContainer';\n// import TableHead from '@material-ui/core/TableHead';\n// import TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    border: 0,\n    flexGrow: 2,\n  },\n  grid: {\n    border: 0,\n    display: 'flex',\n    alignItems: 'stretch',\n  },\n  gridItem: {\n    border: 0,\n    margin: theme.spacing(1),\n  },\n  gridHeader: {\n    // padding: theme.spacing(1),\n    border: 0,\n    // marginBottom: theme.spacing(1),\n  },\n  paper: {\n    padding: theme.spacing(1),\n    outlined: true,\n    variant: 'outlined',\n  },\n  radioGroupCategory: {\n    maxWidth: \"80%\",\n    fontSize: '0.5rem',\n    // padding: theme.spacing(1),\n    // marginBottom: theme.spacing(1),\n  },\n  checkbox: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n  radioButtonLabel: {\n    fontSize: '0.9rem'\n  },\n  radioButton: {\n  },\n  range: {\n    color: 'white',\n  }\n\n}));\n\nfunction valuetext(value) {\n  return `${value}`;\n}\n\nconst Settings = (props) => {\n  \n  const classes = useStyles();\n\n  const handleChangeSettings = name => (e, value) => {\n    // e.preventDefault();\n    props.handleChange({name: name, value: value})\n  };\n\n  function renderDisplayCheckboxes(){\n\n    const entityTypes = [\"tweet\", \"user\", \"hashtag\", \"link\"];\n\n    return (\n      <FormGroup  align=\"center\">\n        <FormControl component=\"fieldset\" className={classes.radioGroupCategory} size=\"small\">\n          {\n            entityTypes.map((entityType) => (\n                <FormControlLabel\n                  key={`display_${entityType}`}\n                  control={\n                    <Checkbox\n                      key={`display_${entityType}`}\n                      id={`display_${entityType}`}\n                      name={`display_${entityType}`}\n                      className={classes.checkbox} \n                      size=\"small\" \n                      checked={props.settings.display[entityType]}\n                      onChange={handleChangeSettings(`display_${entityType}`)}\n                    />\n                  }\n                  label={<Typography key={`display_${entityType}`} className={classes.radioButtonLabel}>{entityType.toUpperCase()}</Typography>}\n                />\n            ))\n          }\n        </FormControl>\n      </FormGroup>\n    )\n  }\n\n  return (\n    <>\n      <Grid className={classes.grid}>\n          <Grid item className={classes.gridItem} xs={3}>\n            <Paper className={classes.paper}  elevation={0} variant=\"outlined\">\n\n              <Typography className={classes.gridHeader}>DISPLAY</Typography>\n\n              {renderDisplayCheckboxes()}\n              {/* <FormGroup  align=\"center\">\n                <FormControl component=\"fieldset\" className={classes.radioGroupCategory} size=\"small\">\n                  <FormControlLabel\n                    control={\n                      <Checkbox \n                        id=\"displayTweets\"\n                        name=\"displayTweets\"\n                        className={classes.checkbox} \n                        size=\"small\" \n                        checked={props.settings.displayTweets}\n                        onChange={handleChangeSettings(\"displayTweets\")}\n                      />\n                    }\n                    label={<Typography className={classes.radioButtonLabel}>TWEETS</Typography>}\n                  />\n                  <FormControlLabel\n                    control={\n                      <Checkbox \n                        id=\"displayLinks\"\n                        name=\"displayLinks\"\n                        className={classes.checkbox} \n                        size=\"small\"\n                        checked={props.settings.displayLinks}\n                        onChange={handleChangeSettings(\"displayLinks\")}\n                      />\n                    }\n                    label={<Typography className={classes.radioButtonLabel}>LINKS</Typography>}\n                  />\n                </FormControl>\n              </FormGroup> */}\n\n            </Paper>\n          </Grid>\n          <Grid item className={classes.gridItem} xs={6}>\n\n            <Typography className={classes.range} id=\"nodeRadiusRatio\" name=\"nodeRadiusRatio\" gutterBottom>\n              NODE RADIUS RATIO\n            </Typography>\n            <Typography className={classes.range} gutterBottom>\n              {`${props.settings.nodeRadiusRatio.min} min | ${props.settings.nodeRadiusRatio.max} max`}\n            </Typography>\n            <Slider\n              id=\"nodeRadiusRatio\"\n              name=\"nodeRadiusRatio\"\n              value={[props.settings.nodeRadiusRatio.min, props.settings.nodeRadiusRatio.max]}\n              min={props.defaults.nodeRadiusRatioRange.min}\n              max={props.defaults.nodeRadiusRatioRange.max}\n              step={props.defaults.nodeRadiusRatioRange.step}\n              onChange={handleChangeSettings(\"nodeRadiusRatio\")}\n              valueLabelDisplay=\"auto\"\n              aria-labelledby=\"range-slider\"\n              getAriaValueText={valuetext}\n            />\n\n            <Typography className={classes.range} id=\"fontSizeRatio\" name=\"fontSizeRatio\" gutterBottom>\n              FONT SIZE RATIO min/max\n            </Typography>\n            <Typography className={classes.range} gutterBottom>\n              {`${props.settings.fontSizeRatio.min} min | ${props.settings.fontSizeRatio.max} max`}\n            </Typography>\n            <Slider\n              id=\"fontSizeRatio\"\n              name=\"fontSizeRatio\"\n              value={[props.settings.fontSizeRatio.min, props.settings.fontSizeRatio.max]}\n              min={props.defaults.fontSizeRatioRange.min}\n              max={props.defaults.fontSizeRatioRange.max}\n              step={props.defaults.fontSizeRatioRange.step}\n              onChange={handleChangeSettings(\"fontSizeRatio\")}\n              valueLabelDisplay=\"auto\"\n              aria-labelledby=\"range-slider\"\n              getAriaValueText={valuetext}\n            />\n\n            <Typography className={classes.range} id=\"setMaxNodesLimit\" name=\"setMaxNodesLimit\" gutterBottom>\n              MAX NODES\n            </Typography>\n            <Typography className={classes.range} gutterBottom>\n              {`${props.settings.maxNodesLimit} MAX NODES`}\n            </Typography>\n             <Slider\n              id=\"maxNodesLimit\"\n              name=\"maxNodesLimit\"\n              value={props.settings.maxNodesLimit}\n              min={props.defaults.maxNodesLimitRange.min}\n              max={props.defaults.maxNodesLimitRange.max}\n              step={props.defaults.maxNodesLimitRange.step}\n              onChange={handleChangeSettings(\"maxNodesLimit\")}\n              valueLabelDisplay=\"auto\"\n              aria-labelledby=\"slider\"\n              getAriaValueText={valuetext}\n            />\n\n            <Typography className={classes.range} id=\"nodeMaxAge\" name=\"nodeMaxAge\" gutterBottom>\n              MAX AGE (seconds)\n            </Typography>\n            <Typography className={classes.range} gutterBottom>\n              {`${props.settings.nodeMaxAge} MAX NODE AGE (ms)`}\n            </Typography>\n            <Slider\n              id=\"nodeMaxAge\"\n              name=\"nodeMaxAge\"\n              value={props.settings.nodeMaxAge}\n              min={props.defaults.nodeMaxAgeRange.min}\n              max={props.defaults.nodeMaxAgeRange.max}\n              step={props.defaults.nodeMaxAgeRange.step}\n              onChange={handleChangeSettings(\"nodeMaxAge\")}\n              valueLabelDisplay=\"auto\"\n              aria-labelledby=\"slider\"\n              getAriaValueText={valuetext}\n            />\n\n            <Typography className={classes.range} id=\"linkStrength\" name=\"linkStrength\" gutterBottom>\n              LINK STRENGTH\n            </Typography>\n            <Typography className={classes.range} gutterBottom>\n              {`${props.settings.linkStrength} LINK STRENGTH`}\n            </Typography>\n            <Slider\n              id=\"linkStrength\"\n              name=\"linkStrength\"\n              value={props.settings.linkStrength}\n              min={props.defaults.linkStrengthRange.min}\n              max={props.defaults.linkStrengthRange.max}\n              step={props.defaults.linkStrengthRange.step}\n              onChange={handleChangeSettings(\"linkStrength\")}\n              valueLabelDisplay=\"auto\"\n              aria-labelledby=\"slider\"\n              getAriaValueText={valuetext}\n            />\n\n            <Typography className={classes.range} id=\"linkDistance\" name=\"linkDistance\" gutterBottom>\n              LINK DISTANCE\n            </Typography>\n            <Typography className={classes.range} gutterBottom>\n              {`${props.settings.linkDistance} LINK DISTANCE`}\n            </Typography>\n            <Slider\n              id=\"linkDistance\"\n              name=\"linkDistance\"\n              value={props.settings.linkDistance}\n              min={props.defaults.linkDistanceRange.min}\n              max={props.defaults.linkDistanceRange.max}\n              step={props.defaults.linkDistanceRange.step}\n              onChange={handleChangeSettings(\"linkDistance\")}\n              valueLabelDisplay=\"auto\"\n              aria-labelledby=\"slider\"\n              getAriaValueText={valuetext}\n            />\n\n            <Typography className={classes.range} id=\"velocityDecay\" name=\"velocityDecay\" gutterBottom>\n              VELOCITY DECAY\n            </Typography>\n            <Typography className={classes.range} gutterBottom>\n              {`${props.settings.velocityDecay}/1.0`}\n            </Typography>\n            <Slider\n              id=\"velocityDecay\"\n              name=\"velocityDecay\"\n              value={props.settings.velocityDecay}\n              min={props.defaults.velocityDecayRange.min}\n              max={props.defaults.velocityDecayRange.max}\n              step={props.defaults.velocityDecayRange.step}\n              onChange={handleChangeSettings(\"velocityDecay\")}\n              valueLabelDisplay=\"auto\"\n              aria-labelledby=\"slider\"\n              getAriaValueText={valuetext}\n            />\n\n            <Typography className={classes.range} id=\"charge\" name=\"charge\" gutterBottom>\n              CHARGE\n            </Typography>\n            <Typography className={classes.range} gutterBottom>\n              {`${props.settings.charge}`}\n            </Typography>\n            <Slider\n              id=\"charge\"\n              name=\"charge\"\n              value={props.settings.charge}\n              min={props.defaults.chargeRange.min}\n              max={props.defaults.chargeRange.max}\n              step={props.defaults.chargeRange.step}\n              onChange={handleChangeSettings(\"charge\")}\n              valueLabelDisplay=\"auto\"\n              aria-labelledby=\"slider\"\n              getAriaValueText={valuetext}\n            />\n\n            <Typography className={classes.range} id=\"gravity\" name=\"gravity\" gutterBottom>\n              GRAVITY\n            </Typography>\n            <Typography className={classes.range} gutterBottom>\n              {`${props.settings.gravity}`}\n            </Typography>\n            <Slider\n              id=\"gravity\"\n              name=\"gravity\"\n              value={props.settings.gravity}\n              min={props.defaults.gravityRange.min}\n              max={props.defaults.gravityRange.max}\n              step={props.defaults.gravityRange.step}\n              onChange={handleChangeSettings(\"gravity\")}\n              valueLabelDisplay=\"auto\"\n              aria-labelledby=\"slider\"\n              getAriaValueText={valuetext}\n            />\n\n          </Grid>\n        </Grid>\n    </>\n  );\n}\n\nexport default Settings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// import clsx from 'clsx';\nimport { green } from '@material-ui/core/colors';\n\nimport Box from '@material-ui/core/Box';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n// import CardMedia from '@material-ui/core/CardMedia';\n\nimport Grid from '@material-ui/core/Grid';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n// import Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\n// import TableCell from '@material-ui/core/TableCell';\n// import TableRow from '@material-ui/core/TableRow';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\n// const StyledTableCell = withStyles((theme) => ({\n//   head: {\n//   },\n//   body: {\n//     fontSize: 11,\n//   },\n// }))(TableCell);\n\n// const StyledTableRow = withStyles((theme) => ({\n//   root: {\n//     backgroundColor: grey,\n//   },\n// }))(TableRow);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    border: 0,\n    flexGrow: 2,\n  },\n  appBar: {\n    border: 0,\n    backgroundColor: 'white',\n    marginBottom: theme.spacing(1),\n  },\n  grid: {\n    border: 0,\n    display: 'flex',\n    alignItems: 'stretch',\n  },\n  gridItem: {\n    border: 0,\n    margin: theme.spacing(1),\n  },\n  gridHeader: {\n    padding: theme.spacing(1),\n    border: 0,\n    marginBottom: theme.spacing(1),\n  },\n  paper: {\n    padding: theme.spacing(1),\n    outlined: true,\n    variant: 'outlined',\n  },\n  timelineError: {\n    textAlign: \"center\",\n    border: '2px solid red',\n    color: 'red',\n    backgroundColor: 'white',\n  },\n  card: {\n    alignSelf: \"center\",\n  },\n  profileImage: {\n    marginBottom: theme.spacing(1),\n  },\n  bannerImage: {\n    marginBottom: theme.spacing(1),\n  },\n  icon: {\n    borderRadius: '50%',\n    width: 16,\n    height: 16,\n    boxShadow: 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\n    backgroundColor: '#f5f8fa',\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\n    '$root.Mui-focusVisible &': {\n      outline: '2px auto rgba(19,124,189,.6)',\n      outlineOffset: 2,\n    },\n    'input:hover ~ &': {\n      backgroundColor: '#ebf1f5',\n    },\n    'input:disabled ~ &': {\n      boxShadow: 'none',\n      background: 'rgba(206,217,224,.5)',\n    },\n  },\n  checkedIcon: {\n    backgroundColor: '#137cbd',\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\n    '&:before': {\n      display: 'block',\n      width: 16,\n      height: 16,\n      backgroundImage: 'radial-gradient(#fff,#fff 28%,transparent 32%)',\n      content: '\"\"',\n    },\n    'input:hover ~ &': {\n      backgroundColor: '#106ba3',\n    },\n  },\n  selectCategory: {\n    border: '1px solid darkgray',\n    borderRadius: theme.shape.borderRadius,\n    fontSize: '0.9rem',\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  radioGroupCategory: {\n    maxWidth: \"90%\",\n    fontSize: '0.5rem',\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n  },\n  checkbox: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n  radioButtonLabel: {\n    fontSize: '0.9rem'\n  },\n  radioButton: {\n  },\n  table: {\n    maxWidth: \"95%\",\n    align: 'center',\n    padding: theme.spacing(1),\n  },\n  tableHead: {\n    backgroundColor: '#ddeeee',\n  },\n  tableCell: {\n  },\n  tableCategorized: {\n    backgroundColor: '#ddeeee',\n  },\n  tableRowGreen: {\n    backgroundColor: 'lightgreen',\n  },\n  statusBar: {\n    raised: false,\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    color: 'blue',\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: \"white\",\n    '&:hover': {\n      backgroundColor: \"#ddeeee\",\n    },\n    marginRight: theme.spacing(1),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'primary',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n\n  buttonGroupLabel: {\n    color: 'blue',\n    marginRight: theme.spacing(1),\n  },\n  buttonAll: {\n    color: 'black',\n  },\n  buttonLeft: {\n    color: 'blue',\n  },\n  buttonNeutral: {\n    color: 'gray',\n  },\n  buttonRight: {\n    color: 'red',\n  },\n  buttonMismatch: {\n    margin: 5\n  },\n  autoCategory:{\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n    marginBottom: theme.spacing(1),\n  },\n  category: {\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n\n  left: {\n    backgroundColor: 'blue',\n    color: 'white',\n  },\n  neutral: {\n    backgroundColor: 'darkgray',\n    color: 'white',\n  },\n  right: {\n    backgroundColor: 'red',\n    color: 'white',\n  },\n  positive: {\n    backgroundColor: 'green',\n    color: 'white',\n  },\n  negative: {\n    backgroundColor: 'yellow',\n    color: 'black',\n  },\n  none: {\n    backgroundColor: 'white',\n    color: 'black',\n  },\n  ignored: {\n    backgroundColor: 'yellow',\n    color: 'black',\n  },\n\n}));\n\n\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\n// const formatDate = (dateInput) => {\n//   return new Date(dateInput).toLocaleDateString(\n//     'en-gb',\n//     {\n//       year: 'numeric',\n//       month: 'short',\n//       day: 'numeric'\n//     }\n//   );\n// }\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     border: 0,\n//     flexGrow: 2,\n//   },\n//   range: {\n//     color: 'blue',\n//   }\n// }));\n\nconst Stats = (props) => {\n\n  // const { heartbeat } = props;\n  console.log(props)\n  \n  // statsObj.nodesPerSec = 0.0;\n  // statsObj.nodesPerMin = 0.0;\n  // statsObj.maxNodesPerMin = 0.0;\n  // statsObj.maxNodesPerMinTime = moment().valueOf();\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <Grid className={classes.grid}>\n          <Grid item className={classes.gridItem} xs={4}>\n            <Card className={classes.card} variant=\"outlined\">\n              <CardContent >\n                <Typography variant=\"h6\" id=\"neuralNetworks\" name=\"neuralNetworks\" gutterBottom>\n                  NEURAL NETWORKS\n                </Typography>\n                  <Typography>BEST: {props.heartbeat.bestNetwork.networkId}</Typography>\n                  <Typography>LIVE RATE: {props.heartbeat.bestNetwork.runtimeMatchRate.toFixed(2)}%</Typography>\n                  <Typography>SUCCESS RATE: {props.heartbeat.bestNetwork.successRate.toFixed(2)}%</Typography>\n              </CardContent>              \n            </Card>\n          </Grid>\n          <Grid item className={classes.gridItem} xs={4}>\n            <Card className={classes.card} variant=\"outlined\">\n              <CardContent >\n                <Typography variant=\"h6\" id=\"tweets\" name=\"tweets\" gutterBottom>\n                  TWITTER\n                </Typography>\n                <Typography id=\"tweetsReceived\" name=\"tweetsReceived\" gutterBottom>\n                  <span><b>{props.heartbeat.twitter.tweetsReceived}</b> TWEETS RCVD</span>\n                </Typography>\n                <Typography id=\"tweetsPerMin\" name=\"tweetsPerMin\" gutterBottom>\n                  <span><b>{props.heartbeat.twitter.tweetsPerMin}</b> TWEETS/MIN</span>\n                </Typography>\n                <Typography id=\"maxTweetsPerMin\" name=\"maxTweetsPerMin\" gutterBottom>\n                  <span><b>{props.heartbeat.twitter.maxTweetsPerMin}</b> MAX TWEETS/MIN</span>\n                </Typography>\n\n                <LinearProgressWithLabel \n                  variant=\"determinate\" \n                  value={(100.0 * props.heartbeat.twitter.tweetsPerMin / props.heartbeat.twitter.maxTweetsPerMin)}\n                >\n                </LinearProgressWithLabel>\n\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item className={classes.gridItem} xs={4}>\n            <Card className={classes.card} variant=\"outlined\">\n              <CardContent >\n                <Typography variant=\"h6\" id=\"nodes\" name=\"nodes\" gutterBottom>\n                  NODES\n                </Typography>\n\n                <Typography className={classes.range} id=\"nodeCount\" name=\"nodeCount\" gutterBottom>\n                  <span><b>{props.heartbeat.nodeCount}</b> NODES</span>\n                </Typography>\n                <Typography className={classes.range} id=\"nodesPerMin\" name=\"nodesPerMin\" gutterBottom>\n                  <span><b>{props.heartbeat.nodesPerMin}</b> NODES/MIN</span>\n                </Typography>\n                <Typography className={classes.range} id=\"maxNodesPerMin\" name=\"maxNodesPerMin\" gutterBottom>\n                  <span><b>{props.heartbeat.maxNodesPerMin}</b> MAX NODES/MIN</span>\n                </Typography>\n\n\n                <LinearProgressWithLabel \n                  variant=\"determinate\" \n                  value={(100.0 * props.heartbeat.nodesPerMin / props.heartbeat.maxNodesPerMin)}\n                >\n                </LinearProgressWithLabel>\n\n\n                {/* <LinearProgress variant=\"determinate\" value={(100.0 * props.heartbeat.nodesPerMin / props.heartbeat.maxNodesPerMin)}>\n                </LinearProgress> */}\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n    </>\n  );\n}\n\nexport default Stats;\n","import React, { useState, useEffect, useRef } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport './App.css';\nimport SettingsView from './SettingsView.js';\nimport StatsView from './StatsView.js';\n\nconst PRODUCTION_SOURCE = \"https://word.threeceelabs.com\";\nconst LOCAL_SOURCE = \"http://localhost:9997\";\nconst MBP3_SOURCE = \"http://mbp3:3000\";\n\nconst DEFAULT_SOURCE = PRODUCTION_SOURCE;\n\nconst parentWindow = window.opener;\n\nconsole.log({parentWindow})\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    flexGrow: 1,\n    background: 'black',\n    boxShadow: 0,\n  },\n  appBar: {\n    backgroundColor: 'black',\n    marginBottom: theme.spacing(2),\n    boxShadow: 0,\n  },\n  tabs: {\n    color: 'white',\n  },\n  tab: {\n    minWidth: 100,\n    width: 100,\n  },\n  toolBar: {\n    shadows: 0,\n  },\n  title: {\n    // flexGrow: 1,\n    color: 'white',\n    marginRight: theme.spacing(2),\n  },\n  serverStatus: {\n    fontSize: \"0.85rem\",\n    flexGrow: 1,\n    color: 'lightgray',\n    padding: theme.spacing(1),\n  },\n  statusBar: {\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  inputRoot: {\n    color: 'primary',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n\n}))\n\nconst App = (props) => {\n\n  const classes = useStyles()\n\n  const [tabValue, setTabValue] = useState(0)\n \n  const [currentTab, setCurrentTab] = useState(\"settings\")\n  const currentTabRef = useRef(currentTab)\n  useEffect(() => { \n    currentTabRef.current = currentTab \n  }, [currentTab])\n\n  const [defaults, setDefaults] = useState(props.defaults)\n  const defaultsRef = useRef(defaults)\n  useEffect(() => { defaultsRef.current = defaults }, [defaults])\n\n  const [settings, setSettings] = useState(props.settings)\n  const settingsRef = useRef(settings)\n  useEffect(() => { settingsRef.current = settings }, [settings])\n\n  const [status, setStatus] = useState(props.status)\n  const statusRef = useRef(status)\n  useEffect(() => { statusRef.current = status }, [status])\n  \n  const [heartbeat, setHeartbeat] = useState(props.heartbeat)\n  const heartbeatRef = useRef(heartbeat)\n  useEffect(() => { heartbeatRef.current = heartbeat }, [heartbeat])\n  \n  const handleTabChange = (event, newValue) => {\n\n    event.preventDefault()\n    // console.log({newValue})\n\n    switch (newValue){\n      case 0:\n        setCurrentTab(\"settings\")\n        break\n      case 1:\n        setCurrentTab(\"stats\")\n        break\n      default:\n        setCurrentTab(\"settings\")\n    }\n\n    setTabValue(newValue)\n  }\n\n  const handleChange = (changeObj) => {\n\n    let tempSettings = {}\n    let entity;\n    let tempDisplay = {}\n\n    switch (changeObj.name){\n\n      case \"nodeRadiusRatio\":\n      case \"fontSizeRatio\":\n        if (parentWindow){\n          parentWindow.postMessage(\n            {\n              op: \"UPDATE\", \n              id: changeObj.name,\n              min: changeObj.value[0],\n              max: changeObj.value[1]\n            }, \n            DEFAULT_SOURCE\n          );\n        }\n\n        tempSettings = Object.assign({}, settingsRef.current, {[changeObj.name]: { min: changeObj.value[0],  max: changeObj.value[1]}})\n        setSettings(tempSettings)\n        break\n\n      case \"display_user\":\n      case \"display_hashtag\":\n      case \"display_tweet\":\n      case \"display_link\":\n\n        entity = changeObj.name.split(\"_\")[1];\n        \n        if (parentWindow){\n          parentWindow.postMessage(\n            {\n              op: \"UPDATE\", \n              id: \"display\",\n              entity: entity,\n              value: changeObj.value,\n            }, \n            DEFAULT_SOURCE\n          );\n        }\n\n        tempDisplay = Object.assign({}, settingsRef.current.display, { [entity]: changeObj.value});\n        tempSettings = Object.assign({}, settingsRef.current, { display: tempDisplay})\n        setSettings(tempSettings)\n\n        break\n\n      case \"linkStrength\":\n      case \"linkDistance\":\n      case \"nodeMaxAge\":\n      case \"maxNodesLimit\":\n      case \"charge\":\n      case \"gravity\":\n      case \"velocityDecay\":\n        if (parentWindow){\n          parentWindow.postMessage(\n            {\n              op: \"UPDATE\", \n              id: changeObj.name,\n              value: changeObj.value,\n            }, \n            DEFAULT_SOURCE\n          );\n        }\n\n        tempSettings = Object.assign({}, settingsRef.current, {[changeObj.name]: changeObj.value})\n        setSettings(tempSettings)\n\n        break\n\n      default:\n        console.error(`UNKNOWN CHANGE NAME: ${changeObj.name}`)\n    }    \n  }\n\n  const receiveMessage = (event) => {\n\n    event.preventDefault();\n\n    // Do we trust the sender of this message?\n\n    if (event.origin !== DEFAULT_SOURCE){\n      console.error(\"RX MESSAGE | NOT TRUSTED SOURCE\"\n        + \" | ORIGIN: \" + event.origin \n        + \" | DEFAULT_SOURCE: \" + DEFAULT_SOURCE\n      );\n      return;\n    }\n\n    if (event.data.op === undefined){\n      return;\n    }\n\n    // console.debug(\"RX MESSAGE | SOURCE\"\n    //   + \" | ORIGIN: \" + event.origin \n    //   + \" | PARENT WINDOW: \" + parentWindow.PARENT_ID\n    //   + \" | DEFAULT_SOURCE: \" + DEFAULT_SOURCE\n    // );\n\n    switch (event.data.op) {\n\n      case \"INIT\":\n        console.debug(\"CUSTOMIRZER INIT\");\n\n        if (event.data.config && event.data.config.defaults){\n          setDefaults(event.data.config.defaults)\n          console.log(`defaultsRef.current \\n ${defaultsRef.current}`)\n        }\n\n        if (event.data.config && event.data.config.settings){\n          setSettings(event.data.config.settings)\n          console.log(`settingsRef.current \\n ${settingsRef.current}`)\n        }\n\n        if (event.data.status){\n          setStatus(event.data.status)\n          console.log(`statusRef.current \\n ${statusRef.current}`)\n          console.log({statusRef})\n        }\n      break;\n\n      case \"CONFIG\":\n        if (event.data.config && event.data.config.defaults){\n          setDefaults(event.data.config.defaults)\n          console.log(`defaultsRef.current \\n ${defaultsRef.current}`)\n        }\n\n        if (event.data.config && event.data.config.settings){\n          setSettings(event.data.config.settings)\n          console.log(`settingsRef.current \\n ${settingsRef.current}`)\n        }\n      break;\n\n      case \"STATS\":\n        if (event.data.status) {\n          setStatus(event.data.status);\n        }\n      break;\n\n      case \"HEARTBEAT\":\n        if (event.data.status) {\n          setHeartbeat(event.data.status);\n        }\n      break;\n\n      default:\n        console.error(`*** ERROR | UNKNOWN MESSAGE | OP: ${event.data.op}`);\n    }\n  }\n\n  const displayTab = (tab) => {\n    if (tab === \"settings\"){\n      return (\n        <SettingsView \n          defaults={defaultsRef.current} \n          settings={settingsRef.current} \n          status={statusRef.current} \n          handleChange={handleChange}\n        >\n        </SettingsView>\n      )\n    }\n    else{\n      return (\n        <StatsView \n          heartbeat={heartbeatRef.current} \n        >\n        </StatsView>\n      )\n    }\n  }\n\n  window.addEventListener(\"message\", receiveMessage, false);\n\n  return (\n    <div className={classes.root}>\n      <Container component=\"main\" maxWidth={false}>\n        <AppBar  className={classes.appBar} position=\"static\">\n          <Toolbar className={classes.toolBar}>\n\n            <Typography className={classes.title}>\n              CUSTOMIZE\n            </Typography>\n            \n            <Tabs \n              className={classes.tabs}\n              value={tabValue} \n              onChange={handleTabChange}\n            >\n              <Tab className={classes.tab} label=\"Settings\"/>\n              <Tab className={classes.tab} label=\"Stats\"/>\n            </Tabs>\n\n          </Toolbar>\n        </AppBar>\n        {displayTab(currentTab)}\n      </Container>\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport './index.css';\nimport config from './config.js';\nimport App from './App';\n\n// <Typography className={classes.range} id=\"bestNetwork\" name=\"bestNetwork\" gutterBottom>\n//     {`BEST NN: ${props.heartbeat.bestNetwork.networkId} | IN ID: ${props.heartbeat.bestNetwork.inputsId} | SR: ${props.heartbeat.bestNetwork.successRate}%`}\n//   </Typography>\n//   <Typography className={classes.range} id=\"nodesPerMin\" name=\"nodesPerMin\" gutterBottom>\n//     {`TWITTER | ${props.heartbeat.twitter.tweetsPerMin} TPM | ${props.heartbeat.twitter.tweetsReceived} RCVD | ${props.heartbeat.twitter.maxTweetsPerMin} MAX TPM`}\n//   </Typography>\n//   <Typography className={classes.range} id=\"nodesPerMin\" name=\"nodesPerMin\" gutterBottom>\n//     {`NODE RATE: ${props.heartbeat.nodesPerMin} | ${props.heartbeat.maxNodesPerMin} MAX`}\n//   </Typography>\n\nconst defaultHeartbeat = {\n  nodeCount: 0,\n  nodesPerMin: 0,\n  maxNodesPerMin: 0,\n  maxNodesPerMinTime: 1610097731559,\n  bestNetwork: {\n    networkId: \"\",\n    inputsId: \"\",\n    successRate: 0,\n    overallMatchRate: 0,\n    networkTechnology: \"\",\n    numInputs: 0,\n    runtimeMatchRate: 0,\n    betterChild: false,\n    seedNetworkId: \"\",\n    seedNetworkRes: 0,\n  },\n  twitter: {\n    tweetsPerMin: 0,\n    maxTweetsPerMin: 1,\n    tweetsReceived: 0,\n    maxTweetsPerMinTime: 1610098221597\n  }\n}\n\nReactDOM.render(\n  <Router>\n    <div>\n      <Switch>\n        <Route path=\"/customize/settings\">\n          <App defaults={config.defaults} settings={config.settings} status={{}} heartbeat={defaultHeartbeat}/>\n        </Route>\n        <Route path=\"/customize/stats\">\n          <App defaults={config.defaults} settings={config.settings} status={{}} heartbeat={defaultHeartbeat}/>\n        </Route>\n        <Route >\n          <App defaults={config.defaults} settings={config.settings} status={{}} heartbeat={defaultHeartbeat}/>\n        </Route>\n      </Switch>\n    </div>\n  </Router>,\n  document.getElementById('root')\n);"],"sourceRoot":""}