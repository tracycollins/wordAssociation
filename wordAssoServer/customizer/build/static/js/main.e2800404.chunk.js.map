{"version":3,"sources":["config.js","SettingsView.js","StatsView.js","App.js","index.js"],"names":["config","defaults","rxNodeQueueMax","keepaliveInterval","display","hashtag","user","tweet","link","linkStrength","linkStrengthRange","min","max","step","linkDistance","linkDistanceRange","maxNodesLimit","maxNodesLimitRange","nodeMaxAge","nodeMaxAgeRange","velocityDecay","velocityDecayRange","charge","chargeRange","gravity","gravityRange","nodeRadiusRatioRange","nodeRadiusRatio","fontSizeRatioRange","fontSizeRatio","settings","Object","assign","lightGray","textLightGray","useStyles","makeStyles","theme","root","border","margin","padding","flexGrow","multilineColor","color","grid","gridSetting","flexFlow","gridItem","background","spacing","gridHeader","paper","backgroundColor","outlined","variant","radioGroupCategory","maxWidth","fontSize","checkbox","grey","checked","radioButtonLabel","radioButton","range","palette","divider","borderRadius","shape","slider","settingLabel","settingValue","textField","borderColor","valuetext","value","Settings","props","classes","handleChangeSettings","name","e","handleChange","Grid","className","item","xs","Paper","elevation","Typography","FormGroup","align","FormControl","component","size","map","entityType","FormControlLabel","control","Checkbox","id","onChange","label","toUpperCase","Slider","valueLabelDisplay","aria-labelledby","getAriaValueText","appBar","marginBottom","alignItems","timelineError","textAlign","card","alignSelf","profileImage","bannerImage","icon","width","height","boxShadow","backgroundImage","outline","outlineOffset","checkedIcon","content","selectCategory","green","table","tableHead","tableCell","tableCategorized","tableRowGreen","statusBar","raised","menuButton","marginRight","title","search","position","breakpoints","up","searchIcon","pointerEvents","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","buttonGroupLabel","buttonAll","buttonLeft","buttonNeutral","buttonRight","buttonMismatch","autoCategory","category","left","neutral","right","positive","negative","none","ignored","LinearProgressWithLabel","Box","mr","LinearProgress","minWidth","Math","round","Stats","console","log","Card","CardContent","gutterBottom","heartbeat","bestNetwork","networkId","runtimeMatchRate","toFixed","successRate","twitter","tweetsReceived","tweetsPerMin","maxTweetsPerMin","nodeCount","nodesPerMin","maxNodesPerMin","PRODUCTION_SOURCE","LOCAL_SOURCE","DEFAULT_SOURCE","parentWindow","window","opener","tabs","tab","toolBar","shadows","serverStatus","App","useState","tabValue","setTabValue","currentTab","setCurrentTab","currentTabRef","useRef","useEffect","current","setDefaults","defaultsRef","setSettings","settingsRef","status","setStatus","statusRef","setHeartbeat","heartbeatRef","changeObj","entity","tempSettings","tempDisplay","postMessage","op","split","error","addEventListener","event","preventDefault","origin","undefined","data","debug","Container","AppBar","Toolbar","Tabs","newValue","Tab","SettingsView","StatsView","defaultHeartbeat","maxNodesPerMinTime","inputsId","overallMatchRate","networkTechnology","numInputs","betterChild","seedNetworkId","seedNetworkRes","maxTweetsPerMinTime","ReactDOM","render","path","document","getElementById"],"mappings":"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","file":"static/js/main.e2800404.chunk.js","sourcesContent":["const config = {\n  defaults: {\n    rxNodeQueueMax: 100,\n    keepaliveInterval: 15000,\n    display: {\n      hashtag: true,\n      user: true,\n      tweet: false,\n      link: false\n    },\n    linkStrength: 0.2,\n    linkStrengthRange: {\n      min: 0,\n      max: 1.0,\n      step: 0.01\n    },\n    linkDistance: 10,\n    linkDistanceRange: {\n      min: 0,\n      max: 1000,\n      step: 1\n    },\n    maxNodesLimit: 50,\n    maxNodesLimitRange: {\n      min: 0,\n      max: 200,\n      step: 1\n    },\n    nodeMaxAge: 20000,\n    nodeMaxAgeRange: {\n      min: 0,\n      max: 60000,\n      step: 100\n    },\n    velocityDecay: 0.8,\n    velocityDecayRange: {\n      min: 0.0,\n      max: 1.0,\n      step: 0.01\n    },\n    charge: -500,\n    chargeRange: {\n      min: -1000,\n      max: 1000,\n      step: 10\n    },\n    gravity: 0.005,\n    gravityRange: {\n      min: -0.002,\n      max: 0.01,\n      step: 0.00001\n    },\n    nodeRadiusRatioRange: {\n      min: 0.0,\n      max: 0.100,\n      step: 0.001\n    },\n    nodeRadiusRatio: {\n      min: 0.007,\n      max: 0.047\n    },\n    fontSizeRatioRange: {\n      min: 0.0,\n      max: 0.100,\n      step: 0.001\n    },\n    fontSizeRatio: {\n      min: 0.015,\n      max: 0.045\n    }\n  }\n}\n\nconfig.settings = Object.assign({}, config.defaults)\n\nexport default config;","import React from 'react';\nimport { grey } from '@material-ui/core/colors';\n// import Duration from 'duration';\n// import clsx from 'clsx';\n// import Card from '@material-ui/core/Card';\n// import CardContent from '@material-ui/core/CardContent';\n// import CardHeader from '@material-ui/core/CardHeader';\n// import CardMedia from '@material-ui/core/CardMedia';\nimport Checkbox from '@material-ui/core/Checkbox';\n// import FilledInput from '@material-ui/core/FilledInput';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Grid from '@material-ui/core/Grid';\n// import MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\n// import InputBase from '@material-ui/core/InputBase';\n// import InputAdornment from '@material-ui/core/InputAdornment';\n\n// import FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\n// import FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\n// import FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\n// import FormatBoldIcon from '@material-ui/icons/FormatBold';\n// import FormatItalicIcon from '@material-ui/icons/FormatItalic';\n// import FormatUnderlinedIcon from '@material-ui/icons/FormatUnderlined';\n// import Divider from '@material-ui/core/Divider';\n// import Select from '@material-ui/core/Select';\nimport Slider from '@material-ui/core/Slider';\n// import Table from '@material-ui/core/Table';\n// import TableBody from '@material-ui/core/TableBody';\n// import TableCell from '@material-ui/core/TableCell';\n// import TableContainer from '@material-ui/core/TableContainer';\n// import TableHead from '@material-ui/core/TableHead';\n// import TableRow from '@material-ui/core/TableRow';\n// import TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst lightGray = '#202020';\nconst textLightGray = '#CCCCCC';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    border: 0,\n    margin: 0,\n    padding: 0,\n    flexGrow: 2,\n  },\n  multilineColor:{\n    color: textLightGray\n  },\n  grid: {\n    border: 0,\n    display: 'flex',\n    // alignItems: 'stretch',\n  },\n  gridSetting: {\n    // border: 0,\n    flexFlow: 'column',\n    display: 'flex',\n    // margin: theme.spacing(1),\n    // alignItems: 'flexStart',\n  },\n  gridItem: {\n    background: lightGray,\n    border: 0,\n    margin: theme.spacing(1),\n    padding: theme.spacing(4),\n  },\n  gridHeader: {\n    border: 0,\n  },\n  paper: {\n    color: textLightGray,\n    backgroundColor: lightGray,\n    // padding: theme.spacing(1),\n    outlined: true,\n    variant: 'outlined',\n  },\n  radioGroupCategory: {\n    maxWidth: \"80%\",\n    fontSize: '0.5rem',\n  },\n  checkbox: {\n    color: grey[400],\n    '&$checked': { color: grey[600],},\n  },\n  checked: {},\n  radioButtonLabel: {\n    fontSize: '0.9rem'\n  },\n  radioButton: {\n  },\n  range: {\n    // width: 'fit-content',\n    border: `1px solid ${theme.palette.divider}`,\n    borderRadius: theme.shape.borderRadius,\n    // backgroundColor: theme.palette.background.paper,\n    // color: theme.palette.text.secondary,\n    color: textLightGray,\n  },\n  slider: {\n    // margin: theme.spacing(1),\n  },\n  settingLabel: {\n    fontSize: '0.8rem',\n    // margin: theme.spacing(1),\n    color: textLightGray,\n  },\n  settingValue: {\n    fontSize: '1.5rem',\n    // margin: theme.spacing(1),\n    color: textLightGray,\n  },\n  textField: {\n    color: textLightGray,\n    '& input:valid + fieldset': {\n      borderColor: textLightGray,\n      // borderWidth: 2,\n    }\n  },\n}));\n\nfunction valuetext(value) {\n  return `${value}`;\n}\n\nconst Settings = (props) => {\n  \n  const classes = useStyles();\n\n  const handleChangeSettings = name => (e, value) => {\n    // e.preventDefault();\n    props.handleChange({name: name, value: value})\n  };\n\n  function renderDisplayCheckboxes(){\n\n    const entityTypes = [\"tweet\", \"user\", \"hashtag\", \"link\"];\n\n    return (\n      <FormGroup  align=\"center\">\n        <FormControl component=\"fieldset\" className={classes.radioGroupCategory} size=\"small\">\n          {\n            entityTypes.map((entityType) => (\n              <FormControlLabel\n                key={`display_${entityType}`}\n                control={\n                  <Checkbox\n                    key={`display_${entityType}`}\n                    id={`display_${entityType}`}\n                    name={`display_${entityType}`}\n                    className={classes.checkbox} \n                    size=\"small\" \n                    checked={props.settings.display[entityType]}\n                    onChange={handleChangeSettings(`display_${entityType}`)}\n                  />\n                }\n                label={<Typography key={`display_${entityType}`} className={classes.radioButtonLabel}>{entityType.toUpperCase()}</Typography>}\n              />\n            ))\n          }\n        </FormControl>\n      </FormGroup>\n    )\n  }\n\n  return (\n    <>\n      <Grid className={classes.grid}>\n\n          <Grid item className={classes.gridItem} xs={4}>\n            <Paper className={classes.paper} elevation={0} variant=\"outlined\">\n              <Typography className={classes.gridHeader}>DISPLAY</Typography>\n              {renderDisplayCheckboxes()}\n            </Paper>\n          </Grid>\n\n          <Grid item className={classes.gridItem} xs={8}>\n\n            <Grid className={classes.gridSetting}>\n              <Grid item xs={8}>\n                <Typography className={classes.settingLabel}>\n                  NODE RADIUS RATIO\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Typography className={classes.settingValue}>\n                  {`${props.settings.nodeRadiusRatio.min} min | ${props.settings.nodeRadiusRatio.max} max`}\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Slider\n                  className={classes.slider}\n                  id=\"nodeRadiusRatio\"\n                  name=\"nodeRadiusRatio\"\n                  value={[props.settings.nodeRadiusRatio.min, props.settings.nodeRadiusRatio.max]}\n                  min={props.defaults.nodeRadiusRatioRange.min}\n                  max={props.defaults.nodeRadiusRatioRange.max}\n                  step={props.defaults.nodeRadiusRatioRange.step}\n                  onChange={handleChangeSettings(\"nodeRadiusRatio\")}\n                  valueLabelDisplay=\"off\"\n                  aria-labelledby=\"range-slider\"\n                  getAriaValueText={valuetext}\n                />\n              </Grid>\n            </Grid>\n\n            <Grid className={classes.gridSetting}>\n              <Grid item xs={8}>\n                <Typography className={classes.settingLabel}>\n                  FONT SIZE RATIO\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Typography className={classes.settingValue}>\n                  {`${props.settings.fontSizeRatio.min} min | ${props.settings.fontSizeRatio.max} max`}\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Slider\n                  id=\"fontSizeRatio\"\n                  name=\"fontSizeRatio\"\n                  value={[props.settings.fontSizeRatio.min, props.settings.fontSizeRatio.max]}\n                  min={props.defaults.fontSizeRatioRange.min}\n                  max={props.defaults.fontSizeRatioRange.max}\n                  step={props.defaults.fontSizeRatioRange.step}\n                  onChange={handleChangeSettings(\"fontSizeRatio\")}\n                  valueLabelDisplay=\"off\"\n                  aria-labelledby=\"range-slider\"\n                  getAriaValueText={valuetext}\n                />\n              </Grid>\n            </Grid>\n\n            <Grid className={classes.gridSetting}>\n              <Grid item xs={8}>\n                <Typography className={classes.settingLabel}>\n                  MAX NODES\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Typography className={classes.settingValue}>\n                  {`${props.settings.maxNodesLimit}`}\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Slider\n                  id=\"maxNodesLimit\"\n                  name=\"maxNodesLimit\"\n                  value={props.settings.maxNodesLimit}\n                  min={props.defaults.maxNodesLimitRange.min}\n                  max={props.defaults.maxNodesLimitRange.max}\n                  step={props.defaults.maxNodesLimitRange.step}\n                  onChange={handleChangeSettings(\"maxNodesLimit\")}\n                  valueLabelDisplay=\"off\"\n                  aria-labelledby=\"slider\"\n                  getAriaValueText={valuetext}\n                />\n              </Grid>\n            </Grid>\n\n            <Grid className={classes.gridSetting}>\n              <Grid item xs={8}>\n                <Typography className={classes.settingLabel} id=\"nodeMaxAge\" name=\"nodeMaxAge\">\n                  MAX AGE\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Typography className={classes.settingValue} id=\"nodeMaxAge\" name=\"nodeMaxAge\">\n                  {`${props.settings.nodeMaxAge/1000} secs`}\n                </Typography>  \n              </Grid>\n              <Grid item xs={8}>\n                <Slider\n                  className={classes.slider}\n                  id=\"nodeMaxAge\"\n                  name=\"nodeMaxAge\"\n                  value={props.settings.nodeMaxAge}\n                  min={props.defaults.nodeMaxAgeRange.min}\n                  max={props.defaults.nodeMaxAgeRange.max}\n                  step={props.defaults.nodeMaxAgeRange.step}\n                  onChange={handleChangeSettings(\"nodeMaxAge\")}\n                  valueLabelDisplay=\"off\"\n                  aria-labelledby=\"slider\"\n                  getAriaValueText={valuetext}\n                />\n              </Grid>\n            </Grid>\n\n            <Grid className={classes.gridSetting}>\n              <Grid item xs={8}>\n                <Typography className={classes.settingLabel} id=\"linkStrength\" name=\"linkStrength\">\n                  LINK STRENGTH\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Typography className={classes.settingValue} id=\"linkStrength\" name=\"linkStrength\">\n                  {`${props.settings.linkStrength}`}\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Slider\n                  className={classes.slider}\n                  id=\"linkStrength\"\n                  name=\"linkStrength\"\n                  value={props.settings.linkStrength}\n                  min={props.defaults.linkStrengthRange.min}\n                  max={props.defaults.linkStrengthRange.max}\n                  step={props.defaults.linkStrengthRange.step}\n                  onChange={handleChangeSettings(\"linkStrength\")}\n                  valueLabelDisplay=\"off\"\n                  aria-labelledby=\"slider\"\n                  getAriaValueText={valuetext}\n                />\n              </Grid>\n            </Grid>\n              \n            <Grid className={classes.gridSetting}>\n              <Grid item xs={8}>\n                <Typography className={classes.settingLabel}>\n                  LINK DISTANCE\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Typography className={classes.settingValue}>\n                  {`${props.settings.linkDistance}`}\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Slider\n                  className={classes.slider}\n                  id=\"linkDistance\"\n                  name=\"linkDistance\"\n                  value={props.settings.linkDistance}\n                  min={props.defaults.linkDistanceRange.min}\n                  max={props.defaults.linkDistanceRange.max}\n                  step={props.defaults.linkDistanceRange.step}\n                  onChange={handleChangeSettings(\"linkDistance\")}\n                  valueLabelDisplay=\"off\"\n                  aria-labelledby=\"slider\"\n                  getAriaValueText={valuetext}\n                />\n              </Grid>\n            </Grid> \n\n            <Grid className={classes.gridSetting}>\n              <Grid item xs={8}>\n                <Typography className={classes.settingLabel}>\n                  VELOCITY DECAY\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Typography className={classes.settingValue}>\n                  {`${props.settings.velocityDecay}`}\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Slider\n                  className={classes.slider}\n                  id=\"velocityDecay\"\n                  name=\"velocityDecay\"\n                  value={props.settings.velocityDecay}\n                  min={props.defaults.velocityDecayRange.min}\n                  max={props.defaults.velocityDecayRange.max}\n                  step={props.defaults.velocityDecayRange.step}\n                  onChange={handleChangeSettings(\"velocityDecay\")}\n                  valueLabelDisplay=\"off\"\n                  aria-labelledby=\"slider\"\n                  getAriaValueText={valuetext}\n                />\n              </Grid>\n            </Grid> \n\n            <Grid className={classes.gridSetting}>\n              <Grid item xs={8}>\n                <Typography className={classes.settingLabel}>\n                  CHARGE\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Typography className={classes.settingValue}>\n                  {`${props.settings.charge}`}\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Slider\n                  className={classes.slider}\n                  id=\"charge\"\n                  name=\"charge\"\n                  value={props.settings.charge}\n                  min={props.defaults.chargeRange.min}\n                  max={props.defaults.chargeRange.max}\n                  step={props.defaults.chargeRange.step}\n                  onChange={handleChangeSettings(\"charge\")}\n                  valueLabelDisplay=\"off\"\n                  aria-labelledby=\"slider\"\n                  getAriaValueText={valuetext}\n                />\n              </Grid>\n            </Grid> \n\n            <Grid className={classes.gridSetting}>\n              <Grid item xs={8}>\n                <Typography className={classes.settingLabel}>\n                  GRAVITY\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Typography className={classes.settingValue}>\n                  {`${props.settings.gravity}`}\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Slider\n                  className={classes.slider}\n                  id=\"gravity\"\n                  name=\"gravity\"\n                  value={props.settings.gravity}\n                  min={props.defaults.gravityRange.min}\n                  max={props.defaults.gravityRange.max}\n                  step={props.defaults.gravityRange.step}\n                  onChange={handleChangeSettings(\"gravity\")}\n                  valueLabelDisplay=\"off\"\n                  aria-labelledby=\"slider\"\n                  getAriaValueText={valuetext}\n                />\n              </Grid>\n            </Grid> \n\n          </Grid>\n          \n        </Grid>\n    </>\n  );\n}\n\nexport default Settings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// import clsx from 'clsx';\nimport { green } from '@material-ui/core/colors';\n\nimport Box from '@material-ui/core/Box';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n// import CardMedia from '@material-ui/core/CardMedia';\n\nimport Grid from '@material-ui/core/Grid';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n// import Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\n// import TableCell from '@material-ui/core/TableCell';\n// import TableRow from '@material-ui/core/TableRow';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\n// const StyledTableCell = withStyles((theme) => ({\n//   head: {\n//   },\n//   body: {\n//     fontSize: 11,\n//   },\n// }))(TableCell);\n\n// const StyledTableRow = withStyles((theme) => ({\n//   root: {\n//     backgroundColor: grey,\n//   },\n// }))(TableRow);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    border: 0,\n    flexGrow: 2,\n  },\n  appBar: {\n    border: 0,\n    backgroundColor: 'white',\n    marginBottom: theme.spacing(1),\n  },\n  grid: {\n    border: 0,\n    display: 'flex',\n    alignItems: 'stretch',\n  },\n  gridItem: {\n    border: 0,\n    margin: theme.spacing(1),\n  },\n  gridHeader: {\n    padding: theme.spacing(1),\n    border: 0,\n    marginBottom: theme.spacing(1),\n  },\n  paper: {\n    padding: theme.spacing(1),\n    outlined: true,\n    variant: 'outlined',\n  },\n  timelineError: {\n    textAlign: \"center\",\n    border: '2px solid red',\n    color: 'red',\n    backgroundColor: 'white',\n  },\n  card: {\n    alignSelf: \"center\",\n  },\n  profileImage: {\n    marginBottom: theme.spacing(1),\n  },\n  bannerImage: {\n    marginBottom: theme.spacing(1),\n  },\n  icon: {\n    borderRadius: '50%',\n    width: 16,\n    height: 16,\n    boxShadow: 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\n    backgroundColor: '#f5f8fa',\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\n    '$root.Mui-focusVisible &': {\n      outline: '2px auto rgba(19,124,189,.6)',\n      outlineOffset: 2,\n    },\n    'input:hover ~ &': {\n      backgroundColor: '#ebf1f5',\n    },\n    'input:disabled ~ &': {\n      boxShadow: 'none',\n      background: 'rgba(206,217,224,.5)',\n    },\n  },\n  checkedIcon: {\n    backgroundColor: '#137cbd',\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\n    '&:before': {\n      display: 'block',\n      width: 16,\n      height: 16,\n      backgroundImage: 'radial-gradient(#fff,#fff 28%,transparent 32%)',\n      content: '\"\"',\n    },\n    'input:hover ~ &': {\n      backgroundColor: '#106ba3',\n    },\n  },\n  selectCategory: {\n    border: '1px solid darkgray',\n    borderRadius: theme.shape.borderRadius,\n    fontSize: '0.9rem',\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  radioGroupCategory: {\n    maxWidth: \"90%\",\n    fontSize: '0.5rem',\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n  },\n  checkbox: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n  radioButtonLabel: {\n    fontSize: '0.9rem'\n  },\n  radioButton: {\n  },\n  table: {\n    maxWidth: \"95%\",\n    align: 'center',\n    padding: theme.spacing(1),\n  },\n  tableHead: {\n    backgroundColor: '#ddeeee',\n  },\n  tableCell: {\n  },\n  tableCategorized: {\n    backgroundColor: '#ddeeee',\n  },\n  tableRowGreen: {\n    backgroundColor: 'lightgreen',\n  },\n  statusBar: {\n    raised: false,\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    color: 'blue',\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: \"white\",\n    '&:hover': {\n      backgroundColor: \"#ddeeee\",\n    },\n    marginRight: theme.spacing(1),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'primary',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n\n  buttonGroupLabel: {\n    color: 'blue',\n    marginRight: theme.spacing(1),\n  },\n  buttonAll: {\n    color: 'black',\n  },\n  buttonLeft: {\n    color: 'blue',\n  },\n  buttonNeutral: {\n    color: 'gray',\n  },\n  buttonRight: {\n    color: 'red',\n  },\n  buttonMismatch: {\n    margin: 5\n  },\n  autoCategory:{\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n    marginBottom: theme.spacing(1),\n  },\n  category: {\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n\n  left: {\n    backgroundColor: 'blue',\n    color: 'white',\n  },\n  neutral: {\n    backgroundColor: 'darkgray',\n    color: 'white',\n  },\n  right: {\n    backgroundColor: 'red',\n    color: 'white',\n  },\n  positive: {\n    backgroundColor: 'green',\n    color: 'white',\n  },\n  negative: {\n    backgroundColor: 'yellow',\n    color: 'black',\n  },\n  none: {\n    backgroundColor: 'white',\n    color: 'black',\n  },\n  ignored: {\n    backgroundColor: 'yellow',\n    color: 'black',\n  },\n\n}));\n\n\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\n\nconst Stats = (props) => {\n\n  console.log(props)\n  \n  const classes = useStyles();\n\n  return (\n    <>\n      <Grid className={classes.grid}>\n          <Grid item className={classes.gridItem} xs={4}>\n            <Card className={classes.card} variant=\"outlined\">\n              <CardContent >\n                <Typography variant=\"h6\" id=\"neuralNetworks\" name=\"neuralNetworks\" gutterBottom>\n                  BEST NEURAL NETWORK\n                </Typography>\n                  <Typography>\n                    {props.heartbeat.bestNetwork.networkId}\n                  </Typography>\n                  <Typography>\n                    <span><b>{props.heartbeat.bestNetwork.runtimeMatchRate.toFixed(2)}</b>% LIVE RATE</span>\n                  </Typography>\n                  <Typography>\n                    <span><b>{props.heartbeat.bestNetwork.successRate.toFixed(2)}</b>% SUCCESS RATE</span>\n                  </Typography>\n              </CardContent>              \n            </Card>\n          </Grid>\n          <Grid item className={classes.gridItem} xs={4}>\n            <Card className={classes.card} variant=\"outlined\">\n              <CardContent >\n                <Typography variant=\"h6\" id=\"tweets\" name=\"tweets\" gutterBottom>\n                  TWITTER\n                </Typography>\n                <Typography id=\"tweetsReceived\" name=\"tweetsReceived\" gutterBottom>\n                  <span><b>{props.heartbeat.twitter.tweetsReceived}</b> TWEETS RCVD</span>\n                </Typography>\n                <Typography id=\"tweetsPerMin\" name=\"tweetsPerMin\" gutterBottom>\n                  <span><b>{props.heartbeat.twitter.tweetsPerMin}</b> TWEETS/MIN</span>\n                </Typography>\n                <Typography id=\"maxTweetsPerMin\" name=\"maxTweetsPerMin\" gutterBottom>\n                  <span><b>{props.heartbeat.twitter.maxTweetsPerMin}</b> MAX TWEETS/MIN</span>\n                </Typography>\n\n                <LinearProgressWithLabel \n                  variant=\"determinate\" \n                  value={props.heartbeat.twitter.tweetsPerMin && props.heartbeat.twitter.maxTweetsPerMin ? (100.0 * props.heartbeat.twitter.tweetsPerMin / props.heartbeat.twitter.maxTweetsPerMin) : 0}\n                >\n                </LinearProgressWithLabel>\n\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item className={classes.gridItem} xs={4}>\n            <Card className={classes.card} variant=\"outlined\">\n              <CardContent >\n                <Typography variant=\"h6\" id=\"nodes\" name=\"nodes\" gutterBottom>\n                  NODES\n                </Typography>\n\n                <Typography className={classes.range} id=\"nodeCount\" name=\"nodeCount\" gutterBottom>\n                  <span><b>{props.heartbeat.nodeCount}</b> NODES</span>\n                </Typography>\n                <Typography className={classes.range} id=\"nodesPerMin\" name=\"nodesPerMin\" gutterBottom>\n                  <span><b>{props.heartbeat.nodesPerMin}</b> NODES/MIN</span>\n                </Typography>\n                <Typography className={classes.range} id=\"maxNodesPerMin\" name=\"maxNodesPerMin\" gutterBottom>\n                  <span><b>{props.heartbeat.maxNodesPerMin}</b> MAX NODES/MIN</span>\n                </Typography>\n\n                <LinearProgressWithLabel \n                  variant=\"determinate\" \n                  value={props.heartbeat.nodesPerMin && props.heartbeat.maxNodesPerMin ? (100.0 * props.heartbeat.nodesPerMin / props.heartbeat.maxNodesPerMin) : 0}\n                >\n                </LinearProgressWithLabel>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n    </>\n  );\n}\n\nexport default Stats;\n","import React, { useState, useEffect, useRef } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport './App.css';\nimport SettingsView from './SettingsView.js';\nimport StatsView from './StatsView.js';\n\nconst PRODUCTION_SOURCE = \"https://word.threeceelabs.com\";\nconst LOCAL_SOURCE = \"http://localhost:9997\";\nconst MBP3_SOURCE = \"http://mbp3:3000\";\n\n// may get replaced when page is served if local or mbp3 host\nconst REPLACE_SOURCE = \"https://word.threeceelabs.com\";\n\nconst DEFAULT_SOURCE = REPLACE_SOURCE;\n\nconst parentWindow = window.opener;\n\nconsole.log({parentWindow})\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    height: \"100%\",\n    flexGrow: 1,\n    background: 'black',\n    backgroundColor: 'black',\n    boxShadow: 0,\n  },\n  appBar: {\n    backgroundColor: 'black',\n    marginBottom: theme.spacing(2),\n    boxShadow: 0,\n  },\n  tabs: {\n    color: 'white',\n  },\n  tab: {\n    minWidth: 100,\n    width: 100,\n  },\n  toolBar: {\n    shadows: 0,\n  },\n  title: {\n    // flexGrow: 1,\n    color: 'white',\n    marginRight: theme.spacing(2),\n  },\n  serverStatus: {\n    fontSize: \"0.85rem\",\n    flexGrow: 1,\n    color: 'lightgray',\n    padding: theme.spacing(1),\n  },\n  statusBar: {\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  inputRoot: {\n    color: 'primary',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n\n}))\n\nconst App = (props) => {\n\n  const classes = useStyles()\n\n  const [tabValue, setTabValue] = useState(0)\n \n  const [currentTab, setCurrentTab] = useState(\"settings\")\n  const currentTabRef = useRef(currentTab)\n  useEffect(() => { \n    currentTabRef.current = currentTab \n  }, [currentTab])\n\n  const [defaults, setDefaults] = useState(props.defaults)\n  const defaultsRef = useRef(defaults)\n  useEffect(() => { defaultsRef.current = defaults }, [defaults])\n\n  const [settings, setSettings] = useState(props.settings)\n  const settingsRef = useRef(settings)\n  useEffect(() => { settingsRef.current = settings }, [settings])\n\n  const [status, setStatus] = useState(props.status)\n  const statusRef = useRef(status)\n  useEffect(() => { statusRef.current = status }, [status])\n  \n  const [heartbeat, setHeartbeat] = useState(props.heartbeat)\n  const heartbeatRef = useRef(heartbeat)\n  useEffect(() => { heartbeatRef.current = heartbeat }, [heartbeat])\n  \n  const handleTabChange = (event, newValue) => {\n\n    event.preventDefault()\n    // console.log({newValue})\n\n    switch (newValue){\n      case 0:\n        setCurrentTab(\"settings\")\n        break\n      case 1:\n        setCurrentTab(\"stats\")\n        break\n      default:\n        setCurrentTab(\"settings\")\n    }\n\n    setTabValue(newValue)\n  }\n\n  const handleChange = (changeObj) => {\n\n    let tempSettings = {}\n    let entity;\n    let tempDisplay = {}\n\n    switch (changeObj.name){\n\n      case \"nodeRadiusRatio\":\n      case \"fontSizeRatio\":\n        if (parentWindow){\n          parentWindow.postMessage(\n            {\n              op: \"UPDATE\", \n              id: changeObj.name,\n              min: changeObj.value[0],\n              max: changeObj.value[1]\n            }, \n            DEFAULT_SOURCE\n          );\n        }\n\n        tempSettings = Object.assign({}, settingsRef.current, {[changeObj.name]: { min: changeObj.value[0],  max: changeObj.value[1]}})\n        setSettings(tempSettings)\n        break\n\n      case \"display_user\":\n      case \"display_hashtag\":\n      case \"display_tweet\":\n      case \"display_link\":\n\n        entity = changeObj.name.split(\"_\")[1];\n        \n        if (parentWindow){\n          parentWindow.postMessage(\n            {\n              op: \"UPDATE\", \n              id: \"display\",\n              entity: entity,\n              value: changeObj.value,\n            }, \n            DEFAULT_SOURCE\n          );\n        }\n\n        tempDisplay = Object.assign({}, settingsRef.current.display, { [entity]: changeObj.value});\n        tempSettings = Object.assign({}, settingsRef.current, { display: tempDisplay})\n        setSettings(tempSettings)\n\n        break\n\n      case \"linkStrength\":\n      case \"linkDistance\":\n      case \"nodeMaxAge\":\n      case \"maxNodesLimit\":\n      case \"charge\":\n      case \"gravity\":\n      case \"velocityDecay\":\n        if (parentWindow){\n          parentWindow.postMessage(\n            {\n              op: \"UPDATE\", \n              id: changeObj.name,\n              value: changeObj.value,\n            }, \n            DEFAULT_SOURCE\n          );\n        }\n\n        tempSettings = Object.assign({}, settingsRef.current, {[changeObj.name]: changeObj.value})\n        setSettings(tempSettings)\n\n        break\n\n      default:\n        console.error(`UNKNOWN CHANGE NAME: ${changeObj.name}`)\n    }    \n  }\n\n  const receiveMessage = (event) => {\n\n    event.preventDefault();\n\n    // Do we trust the sender of this message?\n\n    if (event.origin !== DEFAULT_SOURCE && event.origin !== LOCAL_SOURCE && event.origin !== PRODUCTION_SOURCE){\n      console.error(\"RX MESSAGE | NOT TRUSTED SOURCE\"\n        + \" | ORIGIN: \" + event.origin \n        + \" | DEFAULT_SOURCE: \" + DEFAULT_SOURCE\n        + \" | PRODUCTION_SOURCE: \" + PRODUCTION_SOURCE\n        + \" | LOCAL_SOURCE: \" + LOCAL_SOURCE\n      );\n      return;\n    }\n\n    if (event.data.op === undefined){\n      return;\n    }\n\n    // console.debug(\"RX MESSAGE | SOURCE\"\n    //   + \" | ORIGIN: \" + event.origin \n    //   + \" | PARENT WINDOW: \" + parentWindow.PARENT_ID\n    //   + \" | DEFAULT_SOURCE: \" + DEFAULT_SOURCE\n    // );\n\n    switch (event.data.op) {\n\n      case \"INIT\":\n        console.debug(\"CUSTOMIRZER INIT\");\n\n        if (event.data.config && event.data.config.defaults){\n          setDefaults(event.data.config.defaults)\n          console.log(`defaultsRef.current \\n ${defaultsRef.current}`)\n        }\n\n        if (event.data.config && event.data.config.settings){\n          setSettings(event.data.config.settings)\n          console.log(`settingsRef.current \\n ${settingsRef.current}`)\n        }\n\n        if (event.data.status){\n          setStatus(event.data.status)\n          console.log(`statusRef.current \\n ${statusRef.current}`)\n          console.log({statusRef})\n        }\n      break;\n\n      case \"CONFIG\":\n        if (event.data.config && event.data.config.defaults){\n          setDefaults(event.data.config.defaults)\n          console.log(`defaultsRef.current \\n ${defaultsRef.current}`)\n        }\n\n        if (event.data.config && event.data.config.settings){\n          setSettings(event.data.config.settings)\n          console.log(`settingsRef.current \\n ${settingsRef.current}`)\n        }\n      break;\n\n      case \"STATS\":\n        if (event.data.status) {\n          setStatus(event.data.status);\n        }\n      break;\n\n      case \"HEARTBEAT\":\n        if (event.data.status) {\n          setHeartbeat(event.data.status);\n        }\n      break;\n\n      default:\n        console.error(`*** ERROR | UNKNOWN MESSAGE | OP: ${event.data.op}`);\n    }\n  }\n\n  const displayTab = (tab) => {\n    if (tab === \"settings\"){\n      return (\n        <SettingsView \n          defaults={defaultsRef.current} \n          settings={settingsRef.current} \n          status={statusRef.current} \n          handleChange={handleChange}\n        >\n        </SettingsView>\n      )\n    }\n    else{\n      return (\n        <StatsView \n          heartbeat={heartbeatRef.current} \n        >\n        </StatsView>\n      )\n    }\n  }\n\n  window.addEventListener(\"message\", receiveMessage, false);\n\n  return (\n    <div className={classes.root}>\n      <Container component=\"main\" maxWidth={false}>\n        <AppBar  className={classes.appBar} position=\"static\">\n          <Toolbar className={classes.toolBar}>\n\n            <Typography className={classes.title}>\n              CUSTOMIZE\n            </Typography>\n            \n            <Tabs \n              className={classes.tabs}\n              value={tabValue} \n              onChange={handleTabChange}\n            >\n              <Tab className={classes.tab} label=\"Settings\"/>\n              <Tab className={classes.tab} label=\"Stats\"/>\n            </Tabs>\n\n          </Toolbar>\n        </AppBar>\n        {displayTab(currentTab)}\n      </Container>\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport './index.css';\nimport config from './config.js';\nimport App from './App';\n\n// <Typography className={classes.range} id=\"bestNetwork\" name=\"bestNetwork\" gutterBottom>\n//     {`BEST NN: ${props.heartbeat.bestNetwork.networkId} | IN ID: ${props.heartbeat.bestNetwork.inputsId} | SR: ${props.heartbeat.bestNetwork.successRate}%`}\n//   </Typography>\n//   <Typography className={classes.range} id=\"nodesPerMin\" name=\"nodesPerMin\" gutterBottom>\n//     {`TWITTER | ${props.heartbeat.twitter.tweetsPerMin} TPM | ${props.heartbeat.twitter.tweetsReceived} RCVD | ${props.heartbeat.twitter.maxTweetsPerMin} MAX TPM`}\n//   </Typography>\n//   <Typography className={classes.range} id=\"nodesPerMin\" name=\"nodesPerMin\" gutterBottom>\n//     {`NODE RATE: ${props.heartbeat.nodesPerMin} | ${props.heartbeat.maxNodesPerMin} MAX`}\n//   </Typography>\n\nconst defaultHeartbeat = {\n  nodeCount: 0,\n  nodesPerMin: 0,\n  maxNodesPerMin: 0,\n  maxNodesPerMinTime: 1610097731559,\n  bestNetwork: {\n    networkId: \"\",\n    inputsId: \"\",\n    successRate: 0,\n    overallMatchRate: 0,\n    networkTechnology: \"\",\n    numInputs: 0,\n    runtimeMatchRate: 0,\n    betterChild: false,\n    seedNetworkId: \"\",\n    seedNetworkRes: 0,\n  },\n  twitter: {\n    tweetsPerMin: 0,\n    maxTweetsPerMin: 0,\n    tweetsReceived: 0,\n    maxTweetsPerMinTime: 1610098221597\n  }\n}\n\nReactDOM.render(\n  <Router>\n    <div className=\"full-height\">\n      <Switch>\n        <Route path=\"/customize/settings\">\n          <App defaults={config.defaults} settings={config.settings} status={{}} heartbeat={defaultHeartbeat}/>\n        </Route>\n        <Route path=\"/customize/stats\">\n          <App defaults={config.defaults} settings={config.settings} status={{}} heartbeat={defaultHeartbeat}/>\n        </Route>\n        <Route >\n          <App defaults={config.defaults} settings={config.settings} status={{}} heartbeat={defaultHeartbeat}/>\n        </Route>\n      </Switch>\n    </div>\n  </Router>,\n  document.getElementById('root')\n);"],"sourceRoot":""}