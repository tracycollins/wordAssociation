{"version":3,"sources":["SettingsView.js","StatsView.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","border","flexGrow","appBar","backgroundColor","marginBottom","spacing","grid","display","alignItems","gridItem","margin","gridHeader","padding","paper","outlined","variant","card","alignSelf","profileImage","bannerImage","icon","borderRadius","width","height","boxShadow","backgroundImage","outline","outlineOffset","background","checkedIcon","content","selectCategory","fontSize","shape","radioGroupCategory","maxWidth","checkbox","color","green","checked","radioButtonLabel","radioButton","table","tableHead","tableCell","tableCategorized","tableRowGreen","statusBar","raised","menuButton","marginRight","title","search","position","breakpoints","up","searchIcon","pointerEvents","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","buttonGroupLabel","buttonAll","buttonLeft","buttonNeutral","buttonRight","buttonMismatch","autoCategory","category","left","neutral","right","positive","negative","none","ignored","Settings","props","classes","Grid","className","item","xs","withStyles","head","body","TableCell","grey","TableRow","Stats","tabs","tab","minWidth","toolBar","shadows","progress","serverStatus","twitterAuth","fontWeight","buttonLogin","marginLeft","App","useState","tabValue","setTabValue","settings","useRef","status","statusRef","currentTab","setCurrentTab","currentTabRef","useEffect","current","Container","component","AppBar","Toolbar","Typography","Tabs","value","onChange","event","newValue","preventDefault","console","log","Tab","label","SettingsView","stats","StatsView","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","path","document","getElementById"],"mappings":"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","file":"static/js/main.e95ffa04.chunk.js","sourcesContent":["// import React, { useState } from 'react';\nimport React from 'react';\nimport { green, grey } from '@material-ui/core/colors';\nimport clsx from 'clsx';\n\nimport Duration from 'duration';\n\n// import AppBar from '@material-ui/core/AppBar';\n// import Button from '@material-ui/core/Button';\n// import ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Card from '@material-ui/core/Card';\n// import CardActionArea from '@material-ui/core/CardActionArea';\n// import CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n// import CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\n// import CheckBoxIcon from '@material-ui/icons/CheckBox';\n// import CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\n// import FormLabel from '@material-ui/core/FormLabel';\nimport Grid from '@material-ui/core/Grid';\n// import IconButton from '@material-ui/core/IconButton';\n// import InputBase from '@material-ui/core/InputBase';\n// import InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\n// import MenuIcon from '@material-ui/icons/Menu';\nimport Paper from '@material-ui/core/Paper';\n// import Radio from '@material-ui/core/Radio';\n// import RadioGroup from '@material-ui/core/RadioGroup';\n// import SearchIcon from '@material-ui/icons/Search';\nimport Select from '@material-ui/core/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n// import Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    border: 0,\n    flexGrow: 2,\n  },\n  appBar: {\n    border: 0,\n    backgroundColor: 'white',\n    marginBottom: theme.spacing(1),\n  },\n  grid: {\n    border: 0,\n    display: 'flex',\n    alignItems: 'stretch',\n  },\n  gridItem: {\n    border: 0,\n    margin: theme.spacing(1),\n  },\n  gridHeader: {\n    padding: theme.spacing(1),\n    border: 0,\n    marginBottom: theme.spacing(1),\n  },\n  paper: {\n    outlined: true,\n    variant: 'outlined',\n  },\n  card: {\n    alignSelf: \"center\",\n  },\n  profileImage: {\n    marginBottom: theme.spacing(1),\n  },\n  bannerImage: {\n    marginBottom: theme.spacing(1),\n  },\n  icon: {\n    borderRadius: '50%',\n    width: 16,\n    height: 16,\n    boxShadow: 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\n    backgroundColor: '#f5f8fa',\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\n    '$root.Mui-focusVisible &': {\n      outline: '2px auto rgba(19,124,189,.6)',\n      outlineOffset: 2,\n    },\n    'input:hover ~ &': {\n      backgroundColor: '#ebf1f5',\n    },\n    'input:disabled ~ &': {\n      boxShadow: 'none',\n      background: 'rgba(206,217,224,.5)',\n    },\n  },\n  checkedIcon: {\n    backgroundColor: '#137cbd',\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\n    '&:before': {\n      display: 'block',\n      width: 16,\n      height: 16,\n      backgroundImage: 'radial-gradient(#fff,#fff 28%,transparent 32%)',\n      content: '\"\"',\n    },\n    'input:hover ~ &': {\n      backgroundColor: '#106ba3',\n    },\n  },\n  selectCategory: {\n    fontSize: '0.9rem',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  radioGroupCategory: {\n    maxWidth: \"90%\",\n    fontSize: '0.5rem',\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n  },\n  checkbox: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n  radioButtonLabel: {\n    fontSize: '0.9rem'\n  },\n  radioButton: {\n  },\n  table: {\n    maxWidth: \"90%\",\n    padding: theme.spacing(1),\n  },\n  tableHead: {\n    backgroundColor: '#ddeeee',\n  },\n  tableCell: {\n  },\n  tableCategorized: {\n    backgroundColor: '#ddeeee',\n  },\n  tableRowGreen: {\n    backgroundColor: 'lightgreen',\n  },\n  statusBar: {\n    raised: false,\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    color: 'blue',\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: \"white\",\n    '&:hover': {\n      backgroundColor: \"#ddeeee\",\n    },\n    marginRight: theme.spacing(1),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'primary',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n\n  buttonGroupLabel: {\n    color: 'blue',\n    marginRight: theme.spacing(1),\n  },\n  buttonAll: {\n    color: 'black',\n  },\n  buttonLeft: {\n    color: 'blue',\n  },\n  buttonNeutral: {\n    color: 'gray',\n  },\n  buttonRight: {\n    color: 'red',\n  },\n  buttonMismatch: {\n    margin: 5\n  },\n  autoCategory:{\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n    marginBottom: theme.spacing(1),\n  },\n  category: {\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n\n  left: {\n    backgroundColor: 'blue',\n    color: 'white',\n  },\n  neutral: {\n    backgroundColor: 'darkgray',\n    color: 'white',\n  },\n  right: {\n    backgroundColor: 'red',\n    color: 'white',\n  },\n  positive: {\n    backgroundColor: 'green',\n    color: 'white',\n  },\n  negative: {\n    backgroundColor: 'yellow',\n    color: 'black',\n  },\n  none: {\n    backgroundColor: 'lightgray',\n    color: 'black',\n  },\n  ignored: {\n    backgroundColor: 'yellow',\n    color: 'black',\n  },\n\n}));\n\nconst formatDate = (dateInput) => {\n  return new Date(dateInput).toLocaleDateString(\n    'en-gb',\n    {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }\n  );\n}\n\nconst Settings = (props) => {\n  \n  const classes = useStyles();\n\n  return (\n    <>\n      <Grid className={classes.grid}>\n          <Grid item className={classes.gridItem} xs={3}>\n          </Grid>\n        </Grid>\n    </>\n  );\n}\n\nexport default Settings;\n","import React from 'react';\nimport { green, grey } from '@material-ui/core/colors';\nimport clsx from 'clsx';\n\nimport { Timeline } from 'react-twitter-widgets'\n\nimport Duration from 'duration';\n\n// import AppBar from '@material-ui/core/AppBar';\n// import Button from '@material-ui/core/Button';\n// import ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Card from '@material-ui/core/Card';\n// import CardActionArea from '@material-ui/core/CardActionArea';\n// import CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n// import CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\n// import CheckBoxIcon from '@material-ui/icons/CheckBox';\n// import CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\n// import FormLabel from '@material-ui/core/FormLabel';\nimport Grid from '@material-ui/core/Grid';\n// import IconButton from '@material-ui/core/IconButton';\n// import InputBase from '@material-ui/core/InputBase';\n// import InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\n// import MenuIcon from '@material-ui/icons/Menu';\nimport Paper from '@material-ui/core/Paper';\n// import Radio from '@material-ui/core/Radio';\n// import RadioGroup from '@material-ui/core/RadioGroup';\n// import SearchIcon from '@material-ui/icons/Search';\nimport Select from '@material-ui/core/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n// import Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n  },\n  body: {\n    fontSize: 11,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    backgroundColor: grey,\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    border: 0,\n    flexGrow: 2,\n  },\n  appBar: {\n    border: 0,\n    backgroundColor: 'white',\n    marginBottom: theme.spacing(1),\n  },\n  grid: {\n    border: 0,\n    display: 'flex',\n    alignItems: 'stretch',\n  },\n  gridItem: {\n    border: 0,\n    margin: theme.spacing(1),\n  },\n  gridHeader: {\n    padding: theme.spacing(1),\n    border: 0,\n    marginBottom: theme.spacing(1),\n  },\n  paper: {\n    outlined: true,\n    variant: 'outlined',\n  },\n  card: {\n    alignSelf: \"center\",\n  },\n  profileImage: {\n    marginBottom: theme.spacing(1),\n  },\n  bannerImage: {\n    marginBottom: theme.spacing(1),\n  },\n  icon: {\n    borderRadius: '50%',\n    width: 16,\n    height: 16,\n    boxShadow: 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\n    backgroundColor: '#f5f8fa',\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\n    '$root.Mui-focusVisible &': {\n      outline: '2px auto rgba(19,124,189,.6)',\n      outlineOffset: 2,\n    },\n    'input:hover ~ &': {\n      backgroundColor: '#ebf1f5',\n    },\n    'input:disabled ~ &': {\n      boxShadow: 'none',\n      background: 'rgba(206,217,224,.5)',\n    },\n  },\n  checkedIcon: {\n    backgroundColor: '#137cbd',\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\n    '&:before': {\n      display: 'block',\n      width: 16,\n      height: 16,\n      backgroundImage: 'radial-gradient(#fff,#fff 28%,transparent 32%)',\n      content: '\"\"',\n    },\n    'input:hover ~ &': {\n      backgroundColor: '#106ba3',\n    },\n  },\n  selectCategory: {\n    fontSize: '0.9rem',\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  radioGroupCategory: {\n    maxWidth: \"90%\",\n    fontSize: '0.5rem',\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n  },\n  checkbox: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n  radioButtonLabel: {\n    fontSize: '0.9rem'\n  },\n  radioButton: {\n  },\n  table: {\n    maxWidth: \"90%\",\n    padding: theme.spacing(1),\n  },\n  tableHead: {\n    backgroundColor: '#ddeeee',\n  },\n  tableCell: {\n  },\n  tableCategorized: {\n    backgroundColor: '#ddeeee',\n  },\n  tableRowGreen: {\n    backgroundColor: 'lightgreen',\n  },\n  statusBar: {\n    raised: false,\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    color: 'blue',\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: \"white\",\n    '&:hover': {\n      backgroundColor: \"#ddeeee\",\n    },\n    marginRight: theme.spacing(1),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'primary',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n\n  buttonGroupLabel: {\n    color: 'blue',\n    marginRight: theme.spacing(1),\n  },\n  buttonAll: {\n    color: 'black',\n  },\n  buttonLeft: {\n    color: 'blue',\n  },\n  buttonNeutral: {\n    color: 'gray',\n  },\n  buttonRight: {\n    color: 'red',\n  },\n  buttonMismatch: {\n    margin: 5\n  },\n  autoCategory:{\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    color: 'white',\n    marginBottom: theme.spacing(1),\n  },\n  category: {\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n\n  left: {\n    backgroundColor: 'blue',\n    color: 'white',\n  },\n  neutral: {\n    backgroundColor: 'darkgray',\n    color: 'white',\n  },\n  right: {\n    backgroundColor: 'red',\n    color: 'white',\n  },\n  positive: {\n    backgroundColor: 'green',\n    color: 'white',\n  },\n  negative: {\n    backgroundColor: 'yellow',\n    color: 'black',\n  },\n  none: {\n    backgroundColor: 'lightgray',\n    color: 'black',\n  },\n  ignored: {\n    backgroundColor: 'yellow',\n    color: 'black',\n  },\n\n}));\n\nconst formatDate = (dateInput) => {\n  return new Date(dateInput).toLocaleDateString(\n    'en-gb',\n    {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }\n  );\n}\n\nconst defaultProfileImage = \"logo192.png\"\nconst defaultBannerImage = \"logo192.png\"\n\nconst Stats = (props) => {\n  \n  const classes = useStyles();\n\n  return (\n    <>\n      <Grid className={classes.grid}>\n          <Grid item className={classes.gridItem} xs={3}>\n          </Grid>\n        </Grid>\n    </>\n  );\n}\n\nexport default Stats;\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { green, grey } from '@material-ui/core/colors';\n\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport socketClient from \"socket.io-client\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Container from '@material-ui/core/Container';\nimport AppBar from '@material-ui/core/AppBar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\n\nimport InputBase from '@material-ui/core/InputBase';\nimport Link from '@material-ui/core/Link';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport './App.css';\nimport SettingsView from './SettingsView.js';\nimport StatsView from './StatsView.js';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    flexGrow: 1,\n    boxShadow: 0,\n  },\n  appBar: {\n    backgroundColor: 'black',\n    marginBottom: theme.spacing(2),\n    boxShadow: 0,\n  },\n  tabs: {\n    color: 'white',\n  },\n  tab: {\n    minWidth: 100,\n    width: 100,\n  },\n  toolBar: {\n    shadows: 0,\n  },\n  title: {\n    // flexGrow: 1,\n    color: 'white',\n    marginRight: theme.spacing(2),\n  },\n  progress: {\n    // flexGrow: 1,\n    color: 'white',\n    marginRight: theme.spacing(2),\n  },\n  serverStatus: {\n    fontSize: \"0.85rem\",\n    flexGrow: 1,\n    color: 'lightgray',\n    padding: theme.spacing(1),\n  },\n  twitterAuth: {\n    // backgroundColor: 'black',\n    fontSize: \"1.2rem\",\n    fontWeight: 600,\n    color: \"green\",\n    padding: theme.spacing(1),\n    marginRight: theme.spacing(2),\n  },  \n  buttonLogin: {\n    // backgroundColor: \"green\",\n    marginRight: theme.spacing(2),\n  },\n  statusBar: {\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  search: {\n    // flexGrow: 1,\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: \"white\",\n    '&:hover': {\n      backgroundColor: \"lightgray\",\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '20%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'primary',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n\n}))\n\nconst App = () => {\n\n  const classes = useStyles()\n\n  const [tabValue, setTabValue] = useState(0)\n\n  const [settings, setSettings] = useState({})\n  const settingsRef = useRef(settings)\n\n  const [status, setStatus] = useState({})\n  const statusRef = useRef(status)\n\n  const [progress, setProgress] = useState(\"loading ...\")\n\n  const [currentTab, setCurrentTab] = useState(\"settings\")\n  const currentTabRef = useRef(currentTab)\n  \n  useEffect(() => { \n    currentTabRef.current = currentTab \n  }, [currentTab])\n  \n  useEffect(() => { \n    statusRef.current = status \n  }, [status])\n  \n  const handleTabChange = (event, newValue) => {\n\n    event.preventDefault()\n    console.log({newValue})\n\n    switch (newValue){\n      case 0:\n        setCurrentTab(\"settings\")\n        break\n      case 1:\n        setCurrentTab(\"stats\")\n        break\n      default:\n        setCurrentTab(\"settings\")\n    }\n\n    setTabValue(newValue)\n  }\n\n  const displayTab = (tab) => {\n    if (tab === \"settings\"){\n      return <SettingsView settings={settings} stats={status}/>\n    }\n    else{\n      return <StatsView settings={settings} stats={status} />\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Container component=\"main\" maxWidth={false}>\n        <AppBar  className={classes.appBar} position=\"static\">\n          <Toolbar className={classes.toolBar}>\n\n            <Typography className={classes.title}>\n              CUSTOMIZE\n            </Typography>\n            \n            <Tabs \n              className={classes.tabs}\n              value={tabValue} \n              onChange={handleTabChange}\n            >\n              <Tab className={classes.tab} label=\"Settings\"/>\n              <Tab className={classes.tab} label=\"Stats\"/>\n            </Tabs>\n\n          </Toolbar>\n        </AppBar>\n        {displayTab(currentTab)}\n      </Container>\n    </div>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// ReactDOM.render(\n//   <Router>\n//     <div>\n//       <Switch>\n//         <Route path=\"/categorize/user/:slug\">\n//           <App />\n//         </Route>\n//       </Switch>\n//     </div>\n//   </Router>,\n//   document.getElementById('root')\n// );\n\nReactDOM.render(\n  <Router>\n    <div>\n      <Switch>\n        <Route path=\"/categorize/user/:slug\">\n          <App />\n        </Route>\n        <Route path=\"/categorize/hashtag/:slug\">\n          <App />\n        </Route>\n        <Route path=\"/categorize/account/:slug\">\n          <App />\n        </Route>\n        <Route >\n          <App />\n        </Route>\n      </Switch>\n    </div>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}