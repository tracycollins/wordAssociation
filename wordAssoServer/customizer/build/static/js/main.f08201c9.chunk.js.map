{"version":3,"sources":["config.js","SettingsView.js","StatsView.js","App.js","index.js"],"names":["config","defaults","rxNodeQueueMax","keepaliveInterval","display","hashtag","user","tweet","link","linkStrength","linkStrengthRange","min","max","step","linkDistance","linkDistanceRange","maxNodesLimit","maxNodesLimitRange","nodeMaxAge","nodeMaxAgeRange","velocityDecay","velocityDecayRange","charge","chargeRange","gravity","gravityRange","nodeRadiusRatioRange","nodeRadiusRatio","fontSizeRatioRange","fontSizeRatio","settings","Object","assign","lightGray","textLightGray","useStyles","makeStyles","theme","root","border","margin","padding","flexGrow","multilineColor","color","grid","gridSetting","flexFlow","gridItem","background","spacing","gridHeader","paper","backgroundColor","outlined","variant","radioGroupCategory","maxWidth","fontSize","checkbox","grey","checked","radioButtonLabel","radioButton","range","palette","divider","borderRadius","shape","slider","marginBottom","settingLabel","settingValue","textField","borderColor","valuetext","value","Settings","props","classes","handleChangeSettings","name","e","handleChange","Grid","className","item","xs","Paper","elevation","Typography","FormGroup","align","FormControl","component","size","map","entityType","FormControlLabel","control","Checkbox","id","onChange","label","toUpperCase","Slider","valueLabelDisplay","aria-labelledby","getAriaValueText","gridSubSetting","sectionLabel","fontWeight","settingValueSmall","progress","LinearProgressWithLabel","Box","alignItems","width","mr","LinearProgress","minWidth","Math","round","defaultDateTimeFormat","elapsed","m","moment","duration","diff","Stats","console","log","heartbeat","bestNetwork","networkId","inputsId","runtimeMatchRate","toFixed","successRate","twitter","tweetsReceived","tweetsPerMin","maxTweetsPerMin","maxTweetsPerMinTime","format","as","nodeCount","nodesPerMin","maxNodesPerMin","maxNodesPerMinTime","PRODUCTION_SOURCE","LOCAL_SOURCE","DEFAULT_SOURCE","parentWindow","window","opener","height","boxShadow","appBar","tabs","tab","toolBar","shadows","title","marginRight","serverStatus","statusBar","menuButton","inputRoot","inputInput","paddingLeft","transition","transitions","create","breakpoints","up","App","useState","tabValue","setTabValue","currentTab","setCurrentTab","currentTabRef","useRef","useEffect","current","setDefaults","defaultsRef","setSettings","settingsRef","status","setStatus","statusRef","setHeartbeat","heartbeatRef","changeObj","entity","tempSettings","tempDisplay","postMessage","op","split","error","addEventListener","event","preventDefault","origin","undefined","data","debug","Container","AppBar","position","Toolbar","Tabs","newValue","Tab","SettingsView","StatsView","defaultHeartbeat","overallMatchRate","networkTechnology","numInputs","betterChild","seedNetworkId","seedNetworkRes","ReactDOM","render","path","document","getElementById"],"mappings":"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","file":"static/js/main.f08201c9.chunk.js","sourcesContent":["const config = {\n  defaults: {\n    rxNodeQueueMax: 100,\n    keepaliveInterval: 15000,\n    display: {\n      hashtag: true,\n      user: true,\n      tweet: false,\n      link: false\n    },\n    linkStrength: 0.2,\n    linkStrengthRange: {\n      min: 0,\n      max: 1.0,\n      step: 0.01\n    },\n    linkDistance: 10,\n    linkDistanceRange: {\n      min: 0,\n      max: 1000,\n      step: 1\n    },\n    maxNodesLimit: 50,\n    maxNodesLimitRange: {\n      min: 0,\n      max: 200,\n      step: 1\n    },\n    nodeMaxAge: 20000,\n    nodeMaxAgeRange: {\n      min: 0,\n      max: 60000,\n      step: 100\n    },\n    velocityDecay: 0.8,\n    velocityDecayRange: {\n      min: 0.0,\n      max: 1.0,\n      step: 0.01\n    },\n    charge: -500,\n    chargeRange: {\n      min: -1000,\n      max: 1000,\n      step: 10\n    },\n    gravity: 0.005,\n    gravityRange: {\n      min: -0.002,\n      max: 0.01,\n      step: 0.00001\n    },\n    nodeRadiusRatioRange: {\n      min: 0.0,\n      max: 0.100,\n      step: 0.001\n    },\n    nodeRadiusRatio: {\n      min: 0.007,\n      max: 0.047\n    },\n    fontSizeRatioRange: {\n      min: 0.0,\n      max: 0.100,\n      step: 0.001\n    },\n    fontSizeRatio: {\n      min: 0.015,\n      max: 0.045\n    }\n  }\n}\n\nconfig.settings = Object.assign({}, config.defaults)\n\nexport default config;","import React from 'react';\nimport { grey } from '@material-ui/core/colors';\n// import Duration from 'duration';\n// import clsx from 'clsx';\n// import Card from '@material-ui/core/Card';\n// import CardContent from '@material-ui/core/CardContent';\n// import CardHeader from '@material-ui/core/CardHeader';\n// import CardMedia from '@material-ui/core/CardMedia';\nimport Checkbox from '@material-ui/core/Checkbox';\n// import FilledInput from '@material-ui/core/FilledInput';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Grid from '@material-ui/core/Grid';\n// import MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\n// import InputBase from '@material-ui/core/InputBase';\n// import InputAdornment from '@material-ui/core/InputAdornment';\n\n// import FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\n// import FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\n// import FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\n// import FormatBoldIcon from '@material-ui/icons/FormatBold';\n// import FormatItalicIcon from '@material-ui/icons/FormatItalic';\n// import FormatUnderlinedIcon from '@material-ui/icons/FormatUnderlined';\n// import Divider from '@material-ui/core/Divider';\n// import Select from '@material-ui/core/Select';\nimport Slider from '@material-ui/core/Slider';\n// import Table from '@material-ui/core/Table';\n// import TableBody from '@material-ui/core/TableBody';\n// import TableCell from '@material-ui/core/TableCell';\n// import TableContainer from '@material-ui/core/TableContainer';\n// import TableHead from '@material-ui/core/TableHead';\n// import TableRow from '@material-ui/core/TableRow';\n// import TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst lightGray = '#202020';\nconst textLightGray = '#CCCCCC';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    border: 0,\n    margin: 0,\n    padding: 0,\n    flexGrow: 2,\n  },\n  multilineColor:{\n    color: textLightGray\n  },\n  grid: {\n    border: 0,\n    display: 'flex',\n    // alignItems: 'stretch',\n  },\n  gridSetting: {\n    // border: 0,\n    flexFlow: 'column',\n    display: 'flex',\n    // margin: theme.spacing(1),\n    // alignItems: 'flexStart',\n  },\n  gridItem: {\n    background: lightGray,\n    border: 0,\n    margin: theme.spacing(1),\n    padding: theme.spacing(4),\n  },\n  gridHeader: {\n    border: 0,\n  },\n  paper: {\n    color: textLightGray,\n    backgroundColor: lightGray,\n    // padding: theme.spacing(1),\n    outlined: true,\n    variant: 'outlined',\n  },\n  radioGroupCategory: {\n    maxWidth: \"80%\",\n    fontSize: '0.5rem',\n  },\n  checkbox: {\n    color: grey[400],\n    '&$checked': { color: grey[600],},\n  },\n  checked: {},\n  radioButtonLabel: {\n    fontSize: '0.9rem'\n  },\n  radioButton: {\n  },\n  range: {\n    // width: 'fit-content',\n    border: `1px solid ${theme.palette.divider}`,\n    borderRadius: theme.shape.borderRadius,\n    // backgroundColor: theme.palette.background.paper,\n    // color: theme.palette.text.secondary,\n    color: textLightGray,\n  },\n  slider: {\n    marginBottom: theme.spacing(2),\n  },\n  settingLabel: {\n    fontSize: '0.8rem',\n    // margin: theme.spacing(1),\n    color: textLightGray,\n  },\n  settingValue: {\n    fontSize: '1.8rem',\n    color: textLightGray,\n  },\n  textField: {\n    color: textLightGray,\n    '& input:valid + fieldset': {\n      borderColor: textLightGray,\n      // borderWidth: 2,\n    }\n  },\n}));\n\nfunction valuetext(value) {\n  return `${value}`;\n}\n\nconst Settings = (props) => {\n  \n  const classes = useStyles();\n\n  const handleChangeSettings = name => (e, value) => {\n    // e.preventDefault();\n    props.handleChange({name: name, value: value})\n  };\n\n  function renderDisplayCheckboxes(){\n\n    const entityTypes = [\"tweet\", \"user\", \"hashtag\", \"link\"];\n\n    return (\n      <FormGroup  align=\"center\">\n        <FormControl component=\"fieldset\" className={classes.radioGroupCategory} size=\"small\">\n          {\n            entityTypes.map((entityType) => (\n              <FormControlLabel\n                key={`display_${entityType}`}\n                control={\n                  <Checkbox\n                    key={`display_${entityType}`}\n                    id={`display_${entityType}`}\n                    name={`display_${entityType}`}\n                    className={classes.checkbox} \n                    size=\"small\" \n                    checked={props.settings.display[entityType]}\n                    onChange={handleChangeSettings(`display_${entityType}`)}\n                  />\n                }\n                label={<Typography key={`display_${entityType}`} className={classes.radioButtonLabel}>{entityType.toUpperCase()}</Typography>}\n              />\n            ))\n          }\n        </FormControl>\n      </FormGroup>\n    )\n  }\n\n  return (\n    <>\n      <Grid className={classes.grid}>\n\n          <Grid item className={classes.gridItem} xs={4}>\n            <Paper className={classes.paper} elevation={0} variant=\"outlined\">\n              <Typography className={classes.gridHeader}>DISPLAY</Typography>\n              {renderDisplayCheckboxes()}\n            </Paper>\n          </Grid>\n\n          <Grid item className={classes.gridItem} xs={8}>\n\n            <Grid className={classes.gridSetting}>\n              <Grid item xs={8}>\n                <Typography className={classes.settingLabel}>\n                  NODE RADIUS RATIO\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Typography className={classes.settingValue}>\n                  {`${props.settings.nodeRadiusRatio.min} min | ${props.settings.nodeRadiusRatio.max} max`}\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Slider\n                  className={classes.slider}\n                  id=\"nodeRadiusRatio\"\n                  name=\"nodeRadiusRatio\"\n                  value={[props.settings.nodeRadiusRatio.min, props.settings.nodeRadiusRatio.max]}\n                  min={props.defaults.nodeRadiusRatioRange.min}\n                  max={props.defaults.nodeRadiusRatioRange.max}\n                  step={props.defaults.nodeRadiusRatioRange.step}\n                  onChange={handleChangeSettings(\"nodeRadiusRatio\")}\n                  valueLabelDisplay=\"off\"\n                  aria-labelledby=\"range-slider\"\n                  getAriaValueText={valuetext}\n                />\n              </Grid>\n            </Grid>\n\n            <Grid className={classes.gridSetting}>\n              <Grid item xs={8}>\n                <Typography className={classes.settingLabel}>\n                  FONT SIZE RATIO\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Typography className={classes.settingValue}>\n                  {`${props.settings.fontSizeRatio.min} min | ${props.settings.fontSizeRatio.max} max`}\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Slider\n                  id=\"fontSizeRatio\"\n                  name=\"fontSizeRatio\"\n                  value={[props.settings.fontSizeRatio.min, props.settings.fontSizeRatio.max]}\n                  min={props.defaults.fontSizeRatioRange.min}\n                  max={props.defaults.fontSizeRatioRange.max}\n                  step={props.defaults.fontSizeRatioRange.step}\n                  onChange={handleChangeSettings(\"fontSizeRatio\")}\n                  valueLabelDisplay=\"off\"\n                  aria-labelledby=\"range-slider\"\n                  getAriaValueText={valuetext}\n                />\n              </Grid>\n            </Grid>\n\n            <Grid className={classes.gridSetting}>\n              <Grid item xs={8}>\n                <Typography className={classes.settingLabel}>\n                  MAX NODES\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Typography className={classes.settingValue}>\n                  {`${props.settings.maxNodesLimit}`}\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Slider\n                  id=\"maxNodesLimit\"\n                  name=\"maxNodesLimit\"\n                  value={props.settings.maxNodesLimit}\n                  min={props.defaults.maxNodesLimitRange.min}\n                  max={props.defaults.maxNodesLimitRange.max}\n                  step={props.defaults.maxNodesLimitRange.step}\n                  onChange={handleChangeSettings(\"maxNodesLimit\")}\n                  valueLabelDisplay=\"off\"\n                  aria-labelledby=\"slider\"\n                  getAriaValueText={valuetext}\n                />\n              </Grid>\n            </Grid>\n\n            <Grid className={classes.gridSetting}>\n              <Grid item xs={8}>\n                <Typography className={classes.settingLabel} id=\"nodeMaxAge\" name=\"nodeMaxAge\">\n                  MAX AGE\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Typography className={classes.settingValue} id=\"nodeMaxAge\" name=\"nodeMaxAge\">\n                  {`${props.settings.nodeMaxAge/1000} secs`}\n                </Typography>  \n              </Grid>\n              <Grid item xs={8}>\n                <Slider\n                  className={classes.slider}\n                  id=\"nodeMaxAge\"\n                  name=\"nodeMaxAge\"\n                  value={props.settings.nodeMaxAge}\n                  min={props.defaults.nodeMaxAgeRange.min}\n                  max={props.defaults.nodeMaxAgeRange.max}\n                  step={props.defaults.nodeMaxAgeRange.step}\n                  onChange={handleChangeSettings(\"nodeMaxAge\")}\n                  valueLabelDisplay=\"off\"\n                  aria-labelledby=\"slider\"\n                  getAriaValueText={valuetext}\n                />\n              </Grid>\n            </Grid>\n\n            <Grid className={classes.gridSetting}>\n              <Grid item xs={8}>\n                <Typography className={classes.settingLabel} id=\"linkStrength\" name=\"linkStrength\">\n                  LINK STRENGTH\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Typography className={classes.settingValue} id=\"linkStrength\" name=\"linkStrength\">\n                  {`${props.settings.linkStrength}`}\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Slider\n                  className={classes.slider}\n                  id=\"linkStrength\"\n                  name=\"linkStrength\"\n                  value={props.settings.linkStrength}\n                  min={props.defaults.linkStrengthRange.min}\n                  max={props.defaults.linkStrengthRange.max}\n                  step={props.defaults.linkStrengthRange.step}\n                  onChange={handleChangeSettings(\"linkStrength\")}\n                  valueLabelDisplay=\"off\"\n                  aria-labelledby=\"slider\"\n                  getAriaValueText={valuetext}\n                />\n              </Grid>\n            </Grid>\n              \n            <Grid className={classes.gridSetting}>\n              <Grid item xs={8}>\n                <Typography className={classes.settingLabel}>\n                  LINK DISTANCE\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Typography className={classes.settingValue}>\n                  {`${props.settings.linkDistance}`}\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Slider\n                  className={classes.slider}\n                  id=\"linkDistance\"\n                  name=\"linkDistance\"\n                  value={props.settings.linkDistance}\n                  min={props.defaults.linkDistanceRange.min}\n                  max={props.defaults.linkDistanceRange.max}\n                  step={props.defaults.linkDistanceRange.step}\n                  onChange={handleChangeSettings(\"linkDistance\")}\n                  valueLabelDisplay=\"off\"\n                  aria-labelledby=\"slider\"\n                  getAriaValueText={valuetext}\n                />\n              </Grid>\n            </Grid> \n\n            <Grid className={classes.gridSetting}>\n              <Grid item xs={8}>\n                <Typography className={classes.settingLabel}>\n                  VELOCITY DECAY\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Typography className={classes.settingValue}>\n                  {`${props.settings.velocityDecay}`}\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Slider\n                  className={classes.slider}\n                  id=\"velocityDecay\"\n                  name=\"velocityDecay\"\n                  value={props.settings.velocityDecay}\n                  min={props.defaults.velocityDecayRange.min}\n                  max={props.defaults.velocityDecayRange.max}\n                  step={props.defaults.velocityDecayRange.step}\n                  onChange={handleChangeSettings(\"velocityDecay\")}\n                  valueLabelDisplay=\"off\"\n                  aria-labelledby=\"slider\"\n                  getAriaValueText={valuetext}\n                />\n              </Grid>\n            </Grid> \n\n            <Grid className={classes.gridSetting}>\n              <Grid item xs={8}>\n                <Typography className={classes.settingLabel}>\n                  CHARGE\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Typography className={classes.settingValue}>\n                  {`${props.settings.charge}`}\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Slider\n                  className={classes.slider}\n                  id=\"charge\"\n                  name=\"charge\"\n                  value={props.settings.charge}\n                  min={props.defaults.chargeRange.min}\n                  max={props.defaults.chargeRange.max}\n                  step={props.defaults.chargeRange.step}\n                  onChange={handleChangeSettings(\"charge\")}\n                  valueLabelDisplay=\"off\"\n                  aria-labelledby=\"slider\"\n                  getAriaValueText={valuetext}\n                />\n              </Grid>\n            </Grid> \n\n            <Grid className={classes.gridSetting}>\n              <Grid item xs={8}>\n                <Typography className={classes.settingLabel}>\n                  GRAVITY\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Typography className={classes.settingValue}>\n                  {`${props.settings.gravity}`}\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                <Slider\n                  className={classes.slider}\n                  id=\"gravity\"\n                  name=\"gravity\"\n                  value={props.settings.gravity}\n                  min={props.defaults.gravityRange.min}\n                  max={props.defaults.gravityRange.max}\n                  step={props.defaults.gravityRange.step}\n                  onChange={handleChangeSettings(\"gravity\")}\n                  valueLabelDisplay=\"off\"\n                  aria-labelledby=\"slider\"\n                  getAriaValueText={valuetext}\n                />\n              </Grid>\n            </Grid> \n\n          </Grid>\n          \n        </Grid>\n    </>\n  );\n}\n\nexport default Settings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport moment from 'moment';\n\n// import clsx from 'clsx';\nimport { grey } from '@material-ui/core/colors';\n\nimport Box from '@material-ui/core/Box';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n// import CardMedia from '@material-ui/core/CardMedia';\n\nimport Grid from '@material-ui/core/Grid';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n// import Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\n// import TableCell from '@material-ui/core/TableCell';\n// import TableRow from '@material-ui/core/TableRow';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst lightGray = '#202020';\nconst textLightGray = '#CCCCCC';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    border: 0,\n    margin: 0,\n    padding: 0,\n    flexGrow: 2,\n  },\n  multilineColor:{\n    color: textLightGray\n  },\n  grid: {\n    border: 0,\n    display: 'flex',\n\n  },\n  gridSetting: {\n    flexFlow: 'column',\n    display: 'flex',\n\n  },\n  gridSubSetting: {\n    flexFlow: 'row',\n    display: 'flex',\n    marginBottom: theme.spacing(2),\n  },\n  gridItem: {\n    background: lightGray,\n    border: 0,\n    margin: theme.spacing(1),\n    padding: theme.spacing(4),\n  },\n  gridHeader: {\n    border: 0,\n  },\n  paper: {\n    color: textLightGray,\n    backgroundColor: lightGray,\n    outlined: true,\n    variant: 'outlined',\n  },\n  radioGroupCategory: {\n    maxWidth: \"80%\",\n    fontSize: '0.5rem',\n  },\n  checkbox: {\n    color: grey[400],\n    '&$checked': { color: grey[600],},\n  },\n  checked: {},\n  radioButtonLabel: {\n    fontSize: '0.9rem'\n  },\n  radioButton: {\n  },\n  range: {\n    border: `1px solid ${theme.palette.divider}`,\n    borderRadius: theme.shape.borderRadius,\n    color: textLightGray,\n  },\n  slider: {\n  },\n  sectionLabel: {\n    fontSize: '1.4rem',\n    fontWeight: '400',\n    color: textLightGray,\n    marginBottom: theme.spacing(2),\n  },\n  settingLabel: {\n    fontSize: '0.8rem',\n    color: textLightGray,\n  },\n  settingValue: {\n    fontSize: '1.5rem',\n    marginBottom: theme.spacing(2),\n    color: textLightGray,\n  },\n  settingValueSmall: {\n    fontSize: '1.0rem',\n    marginBottom: theme.spacing(2),\n    color: textLightGray,\n  },\n  progress: {\n    color: textLightGray,\n  },\n  textField: {\n    color: textLightGray,\n    '& input:valid + fieldset': {\n      borderColor: textLightGray,\n    }\n  },\n}));\n\n\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"90%\" mr={1}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography {...props}>{`${Math.round(props.value)}% MAX`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nLinearProgressWithLabel.propTypes = {\n  value: PropTypes.number.isRequired,\n};\n\nconst defaultDateTimeFormat = \"YYYY-MM-DD HH:mm:ss ZZ\";\n\nconst elapsed = (m) => {\n  return moment.duration(moment().diff(m))\n}\n\nconst Stats = (props) => {\n\n  console.log(props)\n  \n  const classes = useStyles();\n\n  return (\n    <>\n      <Grid className={classes.grid}>\n\n        <Grid item className={classes.gridItem} xs={4}>\n          <Grid className={classes.gridSetting}>\n            <Typography className={classes.sectionLabel}>\n              BEST NEURAL NETWORK\n            </Typography>\n            <Typography className={classes.settingLabel}>\n              NETWORK ID\n            </Typography>\n            <Grid item xs={8}>\n              <Typography className={classes.settingValue}>\n                {props.heartbeat.bestNetwork.networkId || '---'}\n              </Typography>\n            </Grid>\n            <Typography className={classes.settingLabel}>\n              INPUTS ID\n            </Typography>\n            <Grid item xs={8}>\n              <Typography className={classes.settingValueSmall}>\n                {props.heartbeat.bestNetwork.inputsId || '---'}\n              </Typography>\n            </Grid>\n\n            <Grid className={classes.gridSubSetting}>\n              <Grid item xs={4}>\n                <Grid item xs={6}>\n                  <Typography className={classes.settingLabel}>\n                    LIVE RATE\n                  </Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography className={classes.settingValue}>\n                    {`${props.heartbeat.bestNetwork.runtimeMatchRate.toFixed(2)}%`}\n                  </Typography>\n                </Grid>\n              </Grid>\n\n              <Grid item xs={6}>\n                <Grid item xs={6}>\n                  <Typography className={classes.settingLabel}>\n                    SUCCESS RATE\n                  </Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography className={classes.settingValue}>\n                    {`${props.heartbeat.bestNetwork.successRate.toFixed(2)}%`}\n                  </Typography>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n\n        </Grid>\n\n        <Grid item className={classes.gridItem} xs={4}>\n\n          <Grid className={classes.gridSetting}>\n            <Typography className={classes.sectionLabel}>\n              TWITTER\n            </Typography>\n\n            <Grid className={classes.gridSubSetting}>\n\n              <Grid item xs={4}>\n                <Grid item xs={6}>\n                  <Typography className={classes.settingLabel}>\n                    TWEETS\n                  </Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography className={classes.settingValue}>\n                    {props.heartbeat.twitter.tweetsReceived}\n                  </Typography>\n                </Grid>\n              </Grid>\n\n              <Grid item xs={4}>\n                <Grid item xs={6}>\n                  <Typography className={classes.settingLabel}>\n                    PER MIN\n                  </Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography className={classes.settingValue}>\n                    {props.heartbeat.twitter.tweetsPerMin}\n                  </Typography>\n                </Grid>\n              </Grid>\n\n              <Grid item xs={6}>\n                <Grid item xs={6}>\n                  <Typography className={classes.settingLabel}>\n                    MAX\n                  </Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography className={classes.settingValue} margin={0}>\n                    {props.heartbeat.twitter.maxTweetsPerMin}\n                  </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <Typography className={classes.settingLabel}>\n                    {`${moment(props.heartbeat.twitter.maxTweetsPerMinTime).format(defaultDateTimeFormat)}`}\n                  </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <Typography className={classes.settingLabel}>\n                    {`${elapsed(moment(props.heartbeat.twitter.maxTweetsPerMinTime)).as('days').toFixed(1)} DAYS AGO`}\n                  </Typography>\n                </Grid>\n              </Grid>\n\n            </Grid>\n\n            <LinearProgressWithLabel\n              className={classes.progress}\n              variant=\"determinate\" \n              value={props.heartbeat.twitter.tweetsPerMin && props.heartbeat.twitter.maxTweetsPerMin ? (100.0 * props.heartbeat.twitter.tweetsPerMin / props.heartbeat.twitter.maxTweetsPerMin) : 0}\n            >\n            </LinearProgressWithLabel>\n\n          </Grid>\n        </Grid>\n\n        <Grid item className={classes.gridItem} xs={4}>\n\n          <Grid className={classes.gridSetting}>\n            <Typography className={classes.sectionLabel}>\n              NODES\n            </Typography>\n\n            <Grid className={classes.gridSubSetting}>\n\n              <Grid item xs={4}>\n                <Grid item xs={6}>\n                  <Typography className={classes.settingLabel}>\n                    RCVD\n                  </Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography className={classes.settingValue}>\n                    {props.heartbeat.nodeCount}\n                  </Typography>\n                </Grid>\n              </Grid>\n\n              <Grid item xs={4}>\n                <Grid item xs={6}>\n                  <Typography className={classes.settingLabel}>\n                    PER MIN\n                  </Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography className={classes.settingValue}>\n                    {props.heartbeat.nodesPerMin}\n                  </Typography>\n                </Grid>\n              </Grid>\n\n              <Grid item xs={6}>\n                <Grid item xs={6}>\n                  <Typography className={classes.settingLabel}>\n                    MAX\n                  </Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography className={classes.settingValue} margin={0}>\n                    {props.heartbeat.maxNodesPerMin}\n                  </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <Typography className={classes.settingLabel}>\n                    {`${moment(props.heartbeat.maxNodesPerMinTime).format(defaultDateTimeFormat)}`}\n                  </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <Typography className={classes.settingLabel}>\n                    {`${elapsed(moment(props.heartbeat.maxNodesPerMinTime)).as('days').toFixed(1)} DAYS AGO`}\n                  </Typography>\n                </Grid>\n              </Grid>\n\n            </Grid>\n\n            <LinearProgressWithLabel\n              className={classes.progress}\n              variant=\"determinate\" \n              value={props.heartbeat.nodesPerMin && props.heartbeat.maxNodesPerMin ? (100.0 * props.heartbeat.nodesPerMin / props.heartbeat.maxNodesPerMin) : 0}\n            >\n            </LinearProgressWithLabel>\n\n          </Grid>\n        </Grid>\n\n{/* \n        <Grid item className={classes.gridItem} xs={4}>\n          <Card className={classes.card} variant=\"outlined\">\n            <CardContent >\n              <Typography variant=\"h6\" id=\"nodes\" name=\"nodes\" gutterBottom>\n                NODES\n              </Typography>\n\n              <Typography className={classes.range} id=\"nodeCount\" name=\"nodeCount\" gutterBottom>\n                <span><b>{props.heartbeat.nodeCount}</b> NODES</span>\n              </Typography>\n              <Typography className={classes.range} id=\"nodesPerMin\" name=\"nodesPerMin\" gutterBottom>\n                <span><b>{props.heartbeat.nodesPerMin}</b> NODES/MIN</span>\n              </Typography>\n              <Typography className={classes.range} id=\"maxNodesPerMin\" name=\"maxNodesPerMin\" gutterBottom>\n                <span><b>{props.heartbeat.maxNodesPerMin}</b> MAX NODES/MIN</span>\n              </Typography>\n\n              <LinearProgressWithLabel \n                variant=\"determinate\" \n                value={props.heartbeat.nodesPerMin && props.heartbeat.maxNodesPerMin ? (100.0 * props.heartbeat.nodesPerMin / props.heartbeat.maxNodesPerMin) : 0}\n              >\n              </LinearProgressWithLabel>\n            </CardContent>\n          </Card>\n        </Grid> */}\n\n      </Grid>\n    </>\n  );\n}\n\nexport default Stats;\n","import React, { useState, useEffect, useRef } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport './App.css';\nimport SettingsView from './SettingsView.js';\nimport StatsView from './StatsView.js';\n\nconst PRODUCTION_SOURCE = \"https://word.threeceelabs.com\";\nconst LOCAL_SOURCE = \"http://localhost:9997\";\nconst MBP3_SOURCE = \"http://mbp3:3000\";\n\n// may get replaced when page is served if local or mbp3 host\nconst REPLACE_SOURCE = \"https://word.threeceelabs.com\";\n\nconst DEFAULT_SOURCE = REPLACE_SOURCE;\n\nconst parentWindow = window.opener;\n\nconsole.log({parentWindow})\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    height: \"100%\",\n    flexGrow: 1,\n    background: 'black',\n    backgroundColor: 'black',\n    boxShadow: 0,\n  },\n  appBar: {\n    backgroundColor: 'black',\n    marginBottom: theme.spacing(2),\n    boxShadow: 0,\n  },\n  tabs: {\n    color: 'white',\n  },\n  tab: {\n    minWidth: 100,\n    width: 100,\n  },\n  toolBar: {\n    shadows: 0,\n  },\n  title: {\n    // flexGrow: 1,\n    color: 'white',\n    marginRight: theme.spacing(2),\n  },\n  serverStatus: {\n    fontSize: \"0.85rem\",\n    flexGrow: 1,\n    color: 'lightgray',\n    padding: theme.spacing(1),\n  },\n  statusBar: {\n    backgroundColor: 'white',\n    margin: 2,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  inputRoot: {\n    color: 'primary',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n\n}))\n\nconst App = (props) => {\n\n  const classes = useStyles()\n\n  const [tabValue, setTabValue] = useState(0)\n \n  const [currentTab, setCurrentTab] = useState(\"settings\")\n  const currentTabRef = useRef(currentTab)\n  useEffect(() => { \n    currentTabRef.current = currentTab \n  }, [currentTab])\n\n  const [defaults, setDefaults] = useState(props.defaults)\n  const defaultsRef = useRef(defaults)\n  useEffect(() => { defaultsRef.current = defaults }, [defaults])\n\n  const [settings, setSettings] = useState(props.settings)\n  const settingsRef = useRef(settings)\n  useEffect(() => { settingsRef.current = settings }, [settings])\n\n  const [status, setStatus] = useState(props.status)\n  const statusRef = useRef(status)\n  useEffect(() => { statusRef.current = status }, [status])\n  \n  const [heartbeat, setHeartbeat] = useState(props.heartbeat)\n  const heartbeatRef = useRef(heartbeat)\n  useEffect(() => { heartbeatRef.current = heartbeat }, [heartbeat])\n  \n  const handleTabChange = (event, newValue) => {\n\n    event.preventDefault()\n    // console.log({newValue})\n\n    switch (newValue){\n      case 0:\n        setCurrentTab(\"settings\")\n        break\n      case 1:\n        setCurrentTab(\"stats\")\n        break\n      default:\n        setCurrentTab(\"settings\")\n    }\n\n    setTabValue(newValue)\n  }\n\n  const handleChange = (changeObj) => {\n\n    let tempSettings = {}\n    let entity;\n    let tempDisplay = {}\n\n    switch (changeObj.name){\n\n      case \"nodeRadiusRatio\":\n      case \"fontSizeRatio\":\n        if (parentWindow){\n          parentWindow.postMessage(\n            {\n              op: \"UPDATE\", \n              id: changeObj.name,\n              min: changeObj.value[0],\n              max: changeObj.value[1]\n            }, \n            DEFAULT_SOURCE\n          );\n        }\n\n        tempSettings = Object.assign({}, settingsRef.current, {[changeObj.name]: { min: changeObj.value[0],  max: changeObj.value[1]}})\n        setSettings(tempSettings)\n        break\n\n      case \"display_user\":\n      case \"display_hashtag\":\n      case \"display_tweet\":\n      case \"display_link\":\n\n        entity = changeObj.name.split(\"_\")[1];\n        \n        if (parentWindow){\n          parentWindow.postMessage(\n            {\n              op: \"UPDATE\", \n              id: \"display\",\n              entity: entity,\n              value: changeObj.value,\n            }, \n            DEFAULT_SOURCE\n          );\n        }\n\n        tempDisplay = Object.assign({}, settingsRef.current.display, { [entity]: changeObj.value});\n        tempSettings = Object.assign({}, settingsRef.current, { display: tempDisplay})\n        setSettings(tempSettings)\n\n        break\n\n      case \"linkStrength\":\n      case \"linkDistance\":\n      case \"nodeMaxAge\":\n      case \"maxNodesLimit\":\n      case \"charge\":\n      case \"gravity\":\n      case \"velocityDecay\":\n        if (parentWindow){\n          parentWindow.postMessage(\n            {\n              op: \"UPDATE\", \n              id: changeObj.name,\n              value: changeObj.value,\n            }, \n            DEFAULT_SOURCE\n          );\n        }\n\n        tempSettings = Object.assign({}, settingsRef.current, {[changeObj.name]: changeObj.value})\n        setSettings(tempSettings)\n\n        break\n\n      default:\n        console.error(`UNKNOWN CHANGE NAME: ${changeObj.name}`)\n    }    \n  }\n\n  const receiveMessage = (event) => {\n\n    event.preventDefault();\n\n    // Do we trust the sender of this message?\n\n    if (event.origin !== DEFAULT_SOURCE && event.origin !== LOCAL_SOURCE && event.origin !== PRODUCTION_SOURCE){\n      console.error(\"RX MESSAGE | NOT TRUSTED SOURCE\"\n        + \" | ORIGIN: \" + event.origin \n        + \" | DEFAULT_SOURCE: \" + DEFAULT_SOURCE\n        + \" | PRODUCTION_SOURCE: \" + PRODUCTION_SOURCE\n        + \" | LOCAL_SOURCE: \" + LOCAL_SOURCE\n      );\n      return;\n    }\n\n    if (event.data.op === undefined){\n      return;\n    }\n\n    // console.debug(\"RX MESSAGE | SOURCE\"\n    //   + \" | ORIGIN: \" + event.origin \n    //   + \" | PARENT WINDOW: \" + parentWindow.PARENT_ID\n    //   + \" | DEFAULT_SOURCE: \" + DEFAULT_SOURCE\n    // );\n\n    switch (event.data.op) {\n\n      case \"INIT\":\n        console.debug(\"CUSTOMIRZER INIT\");\n\n        if (event.data.config && event.data.config.defaults){\n          setDefaults(event.data.config.defaults)\n          console.log(`defaultsRef.current \\n ${defaultsRef.current}`)\n        }\n\n        if (event.data.config && event.data.config.settings){\n          setSettings(event.data.config.settings)\n          console.log(`settingsRef.current \\n ${settingsRef.current}`)\n        }\n\n        if (event.data.status){\n          setStatus(event.data.status)\n          console.log(`statusRef.current \\n ${statusRef.current}`)\n          console.log({statusRef})\n        }\n      break;\n\n      case \"CONFIG\":\n        if (event.data.config && event.data.config.defaults){\n          setDefaults(event.data.config.defaults)\n          console.log(`defaultsRef.current \\n ${defaultsRef.current}`)\n        }\n\n        if (event.data.config && event.data.config.settings){\n          setSettings(event.data.config.settings)\n          console.log(`settingsRef.current \\n ${settingsRef.current}`)\n        }\n      break;\n\n      case \"STATS\":\n        if (event.data.status) {\n          setStatus(event.data.status);\n        }\n      break;\n\n      case \"HEARTBEAT\":\n        if (event.data.status) {\n          setHeartbeat(event.data.status);\n        }\n      break;\n\n      default:\n        console.error(`*** ERROR | UNKNOWN MESSAGE | OP: ${event.data.op}`);\n    }\n  }\n\n  const displayTab = (tab) => {\n    if (tab === \"settings\"){\n      return (\n        <SettingsView \n          defaults={defaultsRef.current} \n          settings={settingsRef.current} \n          status={statusRef.current} \n          handleChange={handleChange}\n        >\n        </SettingsView>\n      )\n    }\n    else{\n      return (\n        <StatsView \n          heartbeat={heartbeatRef.current} \n        >\n        </StatsView>\n      )\n    }\n  }\n\n  window.addEventListener(\"message\", receiveMessage, false);\n\n  return (\n    <div className={classes.root}>\n      <Container component=\"main\" maxWidth={false}>\n        <AppBar  className={classes.appBar} position=\"static\">\n          <Toolbar className={classes.toolBar}>\n\n            <Typography className={classes.title}>\n              CUSTOMIZE\n            </Typography>\n            \n            <Tabs \n              className={classes.tabs}\n              value={tabValue} \n              onChange={handleTabChange}\n            >\n              <Tab className={classes.tab} label=\"Settings\"/>\n              <Tab className={classes.tab} label=\"Stats\"/>\n            </Tabs>\n\n          </Toolbar>\n        </AppBar>\n        {displayTab(currentTab)}\n      </Container>\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport './index.css';\nimport config from './config.js';\nimport App from './App';\n\n// <Typography className={classes.range} id=\"bestNetwork\" name=\"bestNetwork\" gutterBottom>\n//     {`BEST NN: ${props.heartbeat.bestNetwork.networkId} | IN ID: ${props.heartbeat.bestNetwork.inputsId} | SR: ${props.heartbeat.bestNetwork.successRate}%`}\n//   </Typography>\n//   <Typography className={classes.range} id=\"nodesPerMin\" name=\"nodesPerMin\" gutterBottom>\n//     {`TWITTER | ${props.heartbeat.twitter.tweetsPerMin} TPM | ${props.heartbeat.twitter.tweetsReceived} RCVD | ${props.heartbeat.twitter.maxTweetsPerMin} MAX TPM`}\n//   </Typography>\n//   <Typography className={classes.range} id=\"nodesPerMin\" name=\"nodesPerMin\" gutterBottom>\n//     {`NODE RATE: ${props.heartbeat.nodesPerMin} | ${props.heartbeat.maxNodesPerMin} MAX`}\n//   </Typography>\n\nconst defaultHeartbeat = {\n  nodeCount: 0,\n  nodesPerMin: 0,\n  maxNodesPerMin: 0,\n  maxNodesPerMinTime: 1610097731559,\n  bestNetwork: {\n    networkId: \"\",\n    inputsId: \"\",\n    successRate: 0,\n    overallMatchRate: 0,\n    networkTechnology: \"\",\n    numInputs: 0,\n    runtimeMatchRate: 0,\n    betterChild: false,\n    seedNetworkId: \"\",\n    seedNetworkRes: 0,\n  },\n  twitter: {\n    tweetsPerMin: 0,\n    maxTweetsPerMin: 0,\n    tweetsReceived: 0,\n    maxTweetsPerMinTime: 1610098221597\n  }\n}\n\nReactDOM.render(\n  <Router>\n    <div className=\"full-height\">\n      <Switch>\n        <Route path=\"/customize/settings\">\n          <App defaults={config.defaults} settings={config.settings} status={{}} heartbeat={defaultHeartbeat}/>\n        </Route>\n        <Route path=\"/customize/stats\">\n          <App defaults={config.defaults} settings={config.settings} status={{}} heartbeat={defaultHeartbeat}/>\n        </Route>\n        <Route >\n          <App defaults={config.defaults} settings={config.settings} status={{}} heartbeat={defaultHeartbeat}/>\n        </Route>\n      </Switch>\n    </div>\n  </Router>,\n  document.getElementById('root')\n);"],"sourceRoot":""}